;_name	/obj/geo1/polyexpand_fee1/transformpieces_fee1/pointwrangle1/attribvop1
; ModuleID = 'obj_geo1_polyexpand_fee1_transformpieces_fee1_pointwrangle1_attribvop1'

@0 = private constant [10 x i8] c"../method\00"
@1 = private constant [31 x i8] c"../detecthasconnectivityattirb\00"
@2 = private constant [15 x i8] c"../pieceattrib\00"
@3 = private constant [25 x i8] c"../enumerate1/attribname\00"
@4 = private constant [9 x i8] c"../class\00"
@5 = private constant [2 x i8] c"@\00"
@6 = private constant [3 x i8] c"==\00"
@7 = private constant [14 x i8] c"../pivotbiasx\00"
@8 = private constant [14 x i8] c"../pivotbiasy\00"
@9 = private constant [14 x i8] c"../pivotbiasz\00"
@10 = private constant [8 x i8] c"../xOrd\00"
@11 = private constant [8 x i8] c"../rOrd\00"
@12 = private constant [5 x i8] c"../t\00"
@13 = private constant [5 x i8] c"../r\00"
@14 = private constant [5 x i8] c"../s\00"
@15 = private constant [9 x i8] c"../scale\00"
@16 = private constant [6 x i8] c"../px\00"
@17 = private constant [6 x i8] c"../pr\00"
@18 = private constant [9 x i8] c"../shear\00"
@19 = private constant [15 x i8] c"../outputmerge\00"
@20 = private constant [16 x i8] c"../outputattrib\00"
@class = external global i64
@ptnum = external global i64
@opinput1_centroid = external global <3 x double>
@P = external global <3 x double>
@xform = external global <16 x double>
@21 = private constant [6 x i8] c"class\00"
@22 = private constant [6 x i8] c"ptnum\00"
@23 = private constant [18 x i8] c"opinput1_centroid\00"
@24 = private constant [2 x i8] c"P\00"
@25 = private constant [6 x i8] c"xform\00"

define private void @"_obj_geo1_polyexpand_fee1_transformpieces_fee1_pointwrangle1_attribvop1_snippet1@IIVV4"(i64* %_bound_class, i64* %_bound_ptnum, <3 x double>* %_bound_opinput1_centroid, <3 x double>* %_bound_P, <16 x double>* %_bound_xform) nounwind alwaysinline {
__llvm_entry:
  %return = call i64 @"chi@IS"(i8* getelementptr inbounds ([10 x i8]* @0, i64 0, i64 0))
  %0 = icmp ne i64 %return, 0
  br i1 %0, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %return1 = call i64 @"chi@IS"(i8* getelementptr inbounds ([31 x i8]* @1, i64 0, i64 0))
  %return2 = call i8* @"chs@SS"(i8* getelementptr inbounds ([15 x i8]* @2, i64 0, i64 0))
  %return3 = call i8* @"chs@SS"(i8* getelementptr inbounds ([25 x i8]* @3, i64 0, i64 0))
  %1 = icmp ne i64 %return1, 0
  %return4 = select i1 %1, i8* %return2, i8* %return3
  %return5 = call i64 @"chi@IS"(i8* getelementptr inbounds ([9 x i8]* @4, i64 0, i64 0))
  %2 = icmp ne i64 %return5, 0
  br i1 %2, label %true6, label %false7

false:                                            ; preds = %__llvm_entry
  %_bound_opinput1_centroid32 = load <3 x double>* %_bound_opinput1_centroid
  br label %end

end:                                              ; preds = %false, %end8
  %pivot.0 = phi <3 x double> [ %return31, %end8 ], [ %_bound_opinput1_centroid32, %false ]
  %return33 = call i64 @"chi@IS"(i8* getelementptr inbounds ([8 x i8]* @10, i64 0, i64 0))
  %return34 = call i64 @"chi@IS"(i8* getelementptr inbounds ([8 x i8]* @11, i64 0, i64 0))
  %return35 = call <3 x double> @"chv@VS"(i8* getelementptr inbounds ([5 x i8]* @12, i64 0, i64 0))
  %return36 = call <3 x double> @"chv@VS"(i8* getelementptr inbounds ([5 x i8]* @13, i64 0, i64 0))
  %return37 = call <3 x double> @"chv@VS"(i8* getelementptr inbounds ([5 x i8]* @14, i64 0, i64 0))
  %return38 = call double @"chf@FS"(i8* getelementptr inbounds ([9 x i8]* @15, i64 0, i64 0))
  %cast = call <3 x double> @"set@VF"(double %return38)
  %output39 = call <3 x double> @"mul@VV"(<3 x double> %return37, <3 x double> %cast)
  %return40 = call <3 x double> @"chv@VS"(i8* getelementptr inbounds ([6 x i8]* @16, i64 0, i64 0))
  %output42 = call <3 x double> @"add@VV"(<3 x double> %return40, <3 x double> %pivot.0)
  %return43 = call <3 x double> @"chv@VS"(i8* getelementptr inbounds ([6 x i8]* @17, i64 0, i64 0))
  %return44 = call <3 x double> @"chv@VS"(i8* getelementptr inbounds ([9 x i8]* @18, i64 0, i64 0))
  %return45 = call <16 x double> @"maketransform@4IIVVVVVV"(i64 %return33, i64 %return34, <3 x double> %return35, <3 x double> %return36, <3 x double> %output39, <3 x double> %output42, <3 x double> %return43, <3 x double> %return44)
  %_bound_P46 = load <3 x double>* %_bound_P
  %output48 = call <3 x double> @"mul@V4"(<3 x double> %_bound_P46, <16 x double> %return45)
  store <3 x double> %output48, <3 x double>* %_bound_P
  %return49 = call i64 @"chi@IS"(i8* getelementptr inbounds ([15 x i8]* @19, i64 0, i64 0))
  %return50 = call i64 @"eq@III"(i64 %return49, i64 0)
  %3 = icmp ne i64 %return50, 0
  br i1 %3, label %true51, label %false52

true6:                                            ; preds = %true
  %_bound_class9 = load i64* %_bound_class
  br label %end8

false7:                                           ; preds = %true
  %_bound_ptnum10 = load i64* %_bound_ptnum
  %return11 = call i64* @"pointprims@[III"(i64 0, i64 %_bound_ptnum10)
  %return12 = call i64 @"getcomp@I[II"(i64* %return11, i64 0)
  %return15 = call i64 @"prim@IISI"(i64 0, i8* %return4, i64 %return12)
  br label %end8

end8:                                             ; preds = %false7, %true6
  %class.0 = phi i64 [ %_bound_class9, %true6 ], [ %return15, %false7 ]
  %output = call i8* @"add@SS"(i8* getelementptr inbounds ([2 x i8]* @5, i64 0, i64 0), i8* %return4)
  %output17 = call i8* @"add@SS"(i8* %output, i8* getelementptr inbounds ([3 x i8]* @6, i64 0, i64 0))
  %return19 = call i8* @"itoa@SI"(i64 %class.0)
  %output20 = call i8* @"add@SS"(i8* %output17, i8* %return19)
  %output22 = call { <3 x double>, <3 x double> } @"getbbox@ISVV"(i64 0, i8* %output20)
  %output23 = extractvalue { <3 x double>, <3 x double> } %output22, 0
  %output24 = extractvalue { <3 x double>, <3 x double> } %output22, 1
  %return27 = call double @"chf@FS"(i8* getelementptr inbounds ([14 x i8]* @7, i64 0, i64 0))
  %return28 = call double @"chf@FS"(i8* getelementptr inbounds ([14 x i8]* @8, i64 0, i64 0))
  %return29 = call double @"chf@FS"(i8* getelementptr inbounds ([14 x i8]* @9, i64 0, i64 0))
  %return30 = call <3 x double> @"set@VFFF"(double %return27, double %return28, double %return29)
  %return31 = call <3 x double> @"lerp@VVVV"(<3 x double> %output23, <3 x double> %output24, <3 x double> %return30)
  br label %end

true51:                                           ; preds = %end
  store <16 x double> %return45, <16 x double>* %_bound_xform
  br label %end53

false52:                                          ; preds = %end
  %return56 = call i64 @"eq@III"(i64 %return49, i64 1)
  %4 = icmp ne i64 %return56, 0
  %return60 = call i8* @"chs@SS"(i8* getelementptr inbounds ([16 x i8]* @20, i64 0, i64 0))
  %return61 = call i64 @"haspointattrib@IIS"(i64 0, i8* %return60)
  %5 = icmp ne i64 %return61, 0
  br i1 %4, label %true57, label %false58

end53:                                            ; preds = %true71, %false72, %true62, %false63, %true51
  ret void

true57:                                           ; preds = %false52
  br i1 %5, label %true62, label %false63

false58:                                          ; preds = %false52
  br i1 %5, label %true71, label %false72

true62:                                           ; preds = %true57
  %_bound_xform66 = load <16 x double>* %_bound_xform
  %output67 = call <16 x double> @"mul@44"(<16 x double> %return45, <16 x double> %_bound_xform66)
  store <16 x double> %output67, <16 x double>* %_bound_xform
  br label %end53

false63:                                          ; preds = %true57
  store <16 x double> %return45, <16 x double>* %_bound_xform
  br label %end53

true71:                                           ; preds = %false58
  %_bound_xform74 = load <16 x double>* %_bound_xform
  %output76 = call <16 x double> @"mul@44"(<16 x double> %_bound_xform74, <16 x double> %return45)
  store <16 x double> %output76, <16 x double>* %_bound_xform
  br label %end53

false72:                                          ; preds = %false58
  store <16 x double> %return45, <16 x double>* %_bound_xform
  br label %end53
}

declare i64 @"chi@IS"(i8*) nounwind readnone

declare i8* @"chs@SS"(i8*) nounwind readnone

declare i64* @"pointprims@[III"(i64, i64) nounwind

declare i64 @"getcomp@I[II"(i64*, i64) nounwind readnone

declare i64 @"prim@IISI"(i64, i8*, i64) nounwind

declare i8* @"add@SS"(i8*, i8*) nounwind readnone

declare i8* @"itoa@SI"(i64) nounwind readnone

declare { <3 x double>, <3 x double> } @"getbbox@ISVV"(i64, i8*) nounwind

declare double @"chf@FS"(i8*) nounwind readnone

declare <3 x double> @"set@VFFF"(double, double, double) nounwind readnone

declare <3 x double> @"lerp@VVVV"(<3 x double>, <3 x double>, <3 x double>) nounwind

declare <3 x double> @"chv@VS"(i8*) nounwind readnone

declare <3 x double> @"set@VF"(double) nounwind readnone

declare <3 x double> @"mul@VV"(<3 x double>, <3 x double>) nounwind readnone

declare <3 x double> @"add@VV"(<3 x double>, <3 x double>) nounwind readnone

declare <16 x double> @"maketransform@4IIVVVVVV"(i64, i64, <3 x double>, <3 x double>, <3 x double>, <3 x double>, <3 x double>, <3 x double>) nounwind readnone

declare <3 x double> @"mul@V4"(<3 x double>, <16 x double>) nounwind

declare i64 @"eq@III"(i64, i64) nounwind readnone

declare i64 @"haspointattrib@IIS"(i64, i8*) nounwind

declare <16 x double> @"mul@44"(<16 x double>, <16 x double>) nounwind

define void @obj_geo1_polyexpand_fee1_transformpieces_fee1_pointwrangle1_attribvop1(i64 %class, i64 %ptnum, <3 x double> %opinput1_centroid, <3 x double> %P, <16 x double> %xform) nounwind {
__llvm_entry:
  %"<P>" = alloca <3 x double>
  %"<xform>" = alloca <16 x double>
  %0 = alloca i64
  %1 = alloca i64
  %2 = alloca <3 x double>
  store <3 x double> %P, <3 x double>* %"<P>"
  store <16 x double> %xform, <16 x double>* %"<xform>"
  store i64 %class, i64* %0
  store i64 %ptnum, i64* %1
  store <3 x double> %opinput1_centroid, <3 x double>* %2
  call void @"_obj_geo1_polyexpand_fee1_transformpieces_fee1_pointwrangle1_attribvop1_snippet1@IIVV4"(i64* %0, i64* %1, <3 x double>* %2, <3 x double>* %"<P>", <16 x double>* %"<xform>")
  %gvalue = call i64 @"_export@ISI"(i8* getelementptr inbounds ([6 x i8]* @21, i64 0, i64 0), i64 %class) nounwind readonly
  %gvalue5 = call i64 @"_export@ISI"(i8* getelementptr inbounds ([6 x i8]* @22, i64 0, i64 0), i64 %ptnum) nounwind readonly
  %gvalue7 = call <3 x double> @"_export@VSV"(i8* getelementptr inbounds ([18 x i8]* @23, i64 0, i64 0), <3 x double> %opinput1_centroid) nounwind readonly
  %evalue8 = load <3 x double>* %"<P>"
  %gvalue9 = call <3 x double> @"_export@VSV"(i8* getelementptr inbounds ([2 x i8]* @24, i64 0, i64 0), <3 x double> %evalue8) nounwind readonly
  %evalue10 = load <16 x double>* %"<xform>"
  %gvalue11 = call <16 x double> @"_export@4S4"(i8* getelementptr inbounds ([6 x i8]* @25, i64 0, i64 0), <16 x double> %evalue10) nounwind readonly
  store i64 %gvalue, i64* @class
  store i64 %gvalue5, i64* @ptnum
  store <3 x double> %gvalue7, <3 x double>* @opinput1_centroid
  store <3 x double> %gvalue9, <3 x double>* @P
  store <16 x double> %gvalue11, <16 x double>* @xform
  ret void
}

declare i64 @"_export@ISI"(i8*, i64)

declare <3 x double> @"_export@VSV"(i8*, <3 x double>)

declare <16 x double> @"_export@4S4"(i8*, <16 x double>)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @obj_geo1_polyexpand_fee1_transformpieces_fee1_pointwrangle1_attribvop1(i64 0, i64 0, <3 x double> zeroinitializer, <3 x double> zeroinitializer, <16 x double> zeroinitializer)
  ret void
}

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = metadata !{metadata !"cvex"}
!1 = metadata !{metadata !"18.5.633"}
!2 = metadata !{metadata !"64"}

;_code_end
