;_name	<vexpression>
; ModuleID = '__vex_snippet'
source_filename = "__vex_snippet"

@0 = private constant [5 x i8] c"from\00"
@1 = private constant [3 x i8] c"to\00"
@rot = external global <3 x double>
@2 = private constant [4 x i8] c"rot\00"

; Function Attrs: alwaysinline nounwind
define private void @"__vex_snippet_snippet@V"(<3 x double>* %_bound_rot) #0 {
__llvm_entry:
  %return = call <3 x double> @"chv@VS"(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i64 0, i64 0))
  %return1 = call <3 x double> @"chv@VS"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1, i64 0, i64 0))
  %return2 = call <4 x double> @"dihedral@PVV"(<3 x double> %return, <3 x double> %return1)
  %return4 = call <3 x double> @"quaterniontoeuler@VPI"(<4 x double> %return2, i64 0)
  %return5 = call <3 x double> @"degrees@VV"(<3 x double> %return4)
  store <3 x double> %return5, <3 x double>* %_bound_rot
  ret void
}

; Function Attrs: nounwind readnone
declare <3 x double> @"chv@VS"(i8*) #1

; Function Attrs: nounwind readnone
declare <4 x double> @"dihedral@PVV"(<3 x double>, <3 x double>) #1

; Function Attrs: nounwind readnone
declare <3 x double> @"quaterniontoeuler@VPI"(<4 x double>, i64) #1

; Function Attrs: nounwind
declare <3 x double> @"degrees@VV"(<3 x double>) #2

; Function Attrs: nounwind
define void @__vex_snippet(<3 x double> %rot) #2 {
__llvm_entry:
  %"<rot>" = alloca <3 x double>
  store <3 x double> %rot, <3 x double>* %"<rot>"
  call void @"__vex_snippet_snippet@V"(<3 x double>* %"<rot>")
  %evalue = load <3 x double>, <3 x double>* %"<rot>"
  %gvalue = call <3 x double> @"_export@VSV"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @2, i64 0, i64 0), <3 x double> %evalue) #3
  store <3 x double> %gvalue, <3 x double>* @rot
  ret void
}

declare <3 x double> @"_export@VSV"(i8*, <3 x double>)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @__vex_snippet(<3 x double> zeroinitializer)
  ret void
}

attributes #0 = { alwaysinline nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind }
attributes #3 = { nounwind readonly }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"19.0.531"}
!2 = !{!"64"}

;_code_end
