;_name	<vexpression>
; ModuleID = '__vex_snippet'
source_filename = "__vex_snippet"

@0 = private constant [0 x i64] zeroinitializer
@sourceptnum = external global i64*
@index = external global i64
@1 = private constant [12 x i8] c"sourceptnum\00"
@2 = private constant [6 x i8] c"index\00"

; Function Attrs: alwaysinline nounwind
define private void @"__vex_snippet_snippet@[II"(i64** %_bound_sourceptnum, i64* %_bound_index) #0 {
__llvm_entry:
  %_bound_sourceptnum1 = load i64*, i64** %_bound_sourceptnum
  %return = call i64 @"len@I[I"(i64* %_bound_sourceptnum1)
  %0 = icmp ne i64 %return, 0
  br i1 %0, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %return3 = call i64 @"getcomp@I[II"(i64* %_bound_sourceptnum1, i64 0)
  store i64 %return3, i64* %_bound_index
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  ret void
}

; Function Attrs: nounwind readnone
declare i64 @"len@I[I"(i64*) #1

; Function Attrs: nounwind readnone
declare i64 @"getcomp@I[II"(i64*, i64) #1

; Function Attrs: nounwind
define void @__vex_snippet(i64* %sourceptnum, i64 %index) #2 {
__llvm_entry:
  %"<index>" = alloca i64
  %0 = alloca i64*
  store i64 %index, i64* %"<index>"
  store i64* %sourceptnum, i64** %0
  call void @"__vex_snippet_snippet@[II"(i64** %0, i64* %"<index>")
  %gvalue = call i64* @"_export@[IS[I"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i64 0, i64 0), i64* %sourceptnum) #3
  %evalue2 = load i64, i64* %"<index>"
  %gvalue3 = call i64 @"_export@ISI"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @2, i64 0, i64 0), i64 %evalue2) #3
  store i64* %gvalue, i64** @sourceptnum
  store i64 %gvalue3, i64* @index
  ret void
}

declare i64* @"_export@[IS[I"(i8*, i64*)

declare i64 @"_export@ISI"(i8*, i64)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @__vex_snippet(i64* getelementptr inbounds ([0 x i64], [0 x i64]* @0, i64 0, i64 0), i64 0)
  ret void
}

attributes #0 = { alwaysinline nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind }
attributes #3 = { nounwind readonly }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"19.0.531"}
!2 = !{!"64"}

;_code_end
