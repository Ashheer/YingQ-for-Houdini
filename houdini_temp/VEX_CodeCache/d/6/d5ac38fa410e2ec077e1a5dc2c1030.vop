;_name	<vexpression>
; ModuleID = '__vex_snippet'
source_filename = "__vex_snippet"

@0 = private constant [11 x i8] c"__maxwidth\00"
@1 = private constant [8 x i8] c"__width\00"
@2 = private constant [9 x i8] c"__height\00"
@3 = private constant [7 x i8] c"__area\00"
@4 = private constant [7 x i8] c"target\00"
@mode = external global i64
@target = external global i64
@__width = external global double
@__widthweight = external global double
@__height = external global double
@__heightweight = external global double
@__area = external global double
@__areaweight = external global double
@__checkdensityerror = external global i64
@__maxtexeldensityerror = external global double
@errortiling = external global i64
@5 = private constant [5 x i8] c"mode\00"
@6 = private constant [14 x i8] c"__widthweight\00"
@7 = private constant [15 x i8] c"__heightweight\00"
@8 = private constant [13 x i8] c"__areaweight\00"
@9 = private constant [20 x i8] c"__checkdensityerror\00"
@10 = private constant [23 x i8] c"__maxtexeldensityerror\00"
@11 = private constant [12 x i8] c"errortiling\00"

; Function Attrs: alwaysinline nounwind
define private void @"__vex_snippet_snippet@IIFFFFFFIFI"(i64* %_bound_mode, i64* %_bound_target, double* %_bound___width, double* %_bound___widthweight, double* %_bound___height, double* %_bound___heightweight, double* %_bound___area, double* %_bound___areaweight, i64* %_bound___checkdensityerror, double* %_bound___maxtexeldensityerror, i64* %_bound_errortiling) #0 {
__llvm_entry:
  store i64 2, i64* %_bound_mode
  %return = call i64 @"neg@II"(i64 1)
  store i64 %return, i64* %_bound_target
  %_bound___width1 = load double, double* %_bound___width
  %return2 = call double @"detail@FISI"(i64 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @0, i64 0, i64 0), i64 0)
  %return3 = fcmp ogt double %_bound___width1, %return2
  br i1 %return3, label %true, label %end

true:                                             ; preds = %__llvm_entry
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  %trytiling.0 = phi i64 [ 1, %true ], [ 0, %__llvm_entry ]
  %return6 = call i64 @"eq@III"(i64 %trytiling.0, i64 0)
  %0 = icmp ne i64 %return6, 0
  br i1 %0, label %true7, label %end8

true7:                                            ; preds = %end
  br label %cond

end8:                                             ; preds = %end12, %true91, %end
  %errortiling.0 = phi i64 [ 1, %true91 ], [ 0, %end12 ], [ 0, %end ]
  %trytiling.1 = phi i64 [ 1, %true91 ], [ %trytiling.0, %end12 ], [ %trytiling.0, %end ]
  %similarity.0 = phi double [ %similarity.1, %true91 ], [ %similarity.1, %end12 ], [ 1.000000e+17, %end ]
  %return94 = call i64 @"eq@III"(i64 %trytiling.1, i64 1)
  %1 = icmp ne i64 %return94, 0
  br i1 %1, label %true95, label %end96

cond:                                             ; preds = %end50, %true7
  %i.0 = phi i64 [ 0, %true7 ], [ %output87, %end50 ]
  %similarity.1 = phi double [ 1.000000e+17, %true7 ], [ %similarity.2, %end50 ]
  %return10 = call i64 @"npoints@II"(i64 1)
  %return11 = call i64 @"lt@III"(i64 %i.0, i64 %return10)
  %2 = icmp ne i64 %return11, 0
  br i1 %2, label %body, label %end12

body:                                             ; preds = %cond
  %_bound___width13 = load double, double* %_bound___width
  %return15 = call double @"point@FISI"(i64 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1, i64 0, i64 0), i64 %i.0)
  %output = call double @"div@FF"(double %_bound___width13, double %return15)
  %return16 = call double @"abs@FF"(double %output)
  %_bound___widthweight17 = load double, double* %_bound___widthweight
  %output18 = call double @"div@FF"(double %return16, double %_bound___widthweight17)
  %output19 = fsub double 1.000000e+00, %output18
  %return20 = call double @"abs@FF"(double %output19)
  %_bound___height21 = load double, double* %_bound___height
  %return23 = call double @"point@FISI"(i64 1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @2, i64 0, i64 0), i64 %i.0)
  %output24 = call double @"div@FF"(double %_bound___height21, double %return23)
  %return25 = call double @"abs@FF"(double %output24)
  %_bound___heightweight26 = load double, double* %_bound___heightweight
  %output27 = call double @"div@FF"(double %return25, double %_bound___heightweight26)
  %output28 = fsub double 1.000000e+00, %output27
  %return29 = call double @"abs@FF"(double %output28)
  %_bound___area30 = load double, double* %_bound___area
  %return32 = call double @"point@FISI"(i64 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @3, i64 0, i64 0), i64 %i.0)
  %output33 = call double @"div@FF"(double %_bound___area30, double %return32)
  %return34 = call double @"abs@FF"(double %output33)
  %_bound___areaweight35 = load double, double* %_bound___areaweight
  %output36 = call double @"div@FF"(double %return34, double %_bound___areaweight35)
  %output37 = fsub double 1.000000e+00, %output36
  %return38 = call double @"abs@FF"(double %output37)
  %output41 = fadd double %return20, %return29
  %output43 = fadd double %output41, %return38
  %return45 = call double @"abs@FF"(double %output43)
  %return47 = fcmp olt double %return45, %similarity.1
  br i1 %return47, label %true49, label %end50

end12:                                            ; preds = %cond
  %_bound_target88 = load i64, i64* %_bound_target
  %return90 = call i64 @"eq@III"(i64 %_bound_target88, i64 %return)
  %3 = icmp ne i64 %return90, 0
  br i1 %3, label %true91, label %end8

true49:                                           ; preds = %body
  %_bound___checkdensityerror51 = load i64, i64* %_bound___checkdensityerror
  %return52 = call i64 @"eq@III"(i64 %_bound___checkdensityerror51, i64 0)
  %_bound___width53 = load double, double* %_bound___width
  %return55 = call double @"point@FISI"(i64 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1, i64 0, i64 0), i64 %i.0)
  %output56 = call double @"div@FF"(double %_bound___width53, double %return55)
  %return57 = call double @"abs@FF"(double %output56)
  %output58 = fsub double 1.000000e+00, %return57
  %return59 = call double @"abs@FF"(double %output58)
  %_bound___maxtexeldensityerror60 = load double, double* %_bound___maxtexeldensityerror
  %return61 = fcmp ole double %return59, %_bound___maxtexeldensityerror60
  %return62 = zext i1 %return61 to i64
  %return63 = call i64 @"or@III"(i64 %return52, i64 %return62)
  %4 = icmp ne i64 %return63, 0
  br i1 %4, label %true64, label %end50

end50:                                            ; preds = %true64, %true79, %true49, %body
  %similarity.2 = phi double [ %return82, %true79 ], [ %similarity.1, %true64 ], [ %similarity.1, %true49 ], [ %similarity.1, %body ]
  %output87 = add i64 %i.0, 1
  br label %cond

true64:                                           ; preds = %true49
  %_bound___checkdensityerror66 = load i64, i64* %_bound___checkdensityerror
  %return67 = call i64 @"eq@III"(i64 %_bound___checkdensityerror66, i64 0)
  %_bound___height68 = load double, double* %_bound___height
  %return70 = call double @"point@FISI"(i64 1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @2, i64 0, i64 0), i64 %i.0)
  %output71 = call double @"div@FF"(double %_bound___height68, double %return70)
  %return72 = call double @"abs@FF"(double %output71)
  %output73 = fsub double 1.000000e+00, %return72
  %return74 = call double @"abs@FF"(double %output73)
  %_bound___maxtexeldensityerror75 = load double, double* %_bound___maxtexeldensityerror
  %return76 = fcmp ole double %return74, %_bound___maxtexeldensityerror75
  %return77 = zext i1 %return76 to i64
  %return78 = call i64 @"or@III"(i64 %return67, i64 %return77)
  %5 = icmp ne i64 %return78, 0
  br i1 %5, label %true79, label %end50

true79:                                           ; preds = %true64
  %return82 = call double @"abs@FF"(double %output43)
  store i64 0, i64* %_bound_mode
  %return84 = call i64 @"point@IISI"(i64 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @4, i64 0, i64 0), i64 %i.0)
  store i64 %return84, i64* %_bound_target
  br label %end50

true91:                                           ; preds = %end12
  br label %end8

true95:                                           ; preds = %end8
  br label %cond98

end96:                                            ; preds = %end103, %true140, %end8
  store i64 %errortiling.0, i64* %_bound_errortiling
  ret void

cond98:                                           ; preds = %end116, %true95
  %i97.0 = phi i64 [ 0, %true95 ], [ %output126, %end116 ]
  %similarity.3 = phi double [ %similarity.0, %true95 ], [ %similarity.4, %end116 ]
  %return101 = call i64 @"npoints@II"(i64 3)
  %return102 = call i64 @"lt@III"(i64 %i97.0, i64 %return101)
  %6 = icmp ne i64 %return102, 0
  br i1 %6, label %body99, label %end103

body99:                                           ; preds = %cond98
  %_bound___height106 = load double, double* %_bound___height
  %return108 = call double @"point@FISI"(i64 3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @2, i64 0, i64 0), i64 %i97.0)
  %output109 = fsub double %_bound___height106, %return108
  %return110 = call double @"abs@FF"(double %output109)
  %return113 = fcmp olt double %return110, %similarity.3
  br i1 %return113, label %true115, label %end116

end103:                                           ; preds = %cond98
  %_bound___checkdensityerror127 = load i64, i64* %_bound___checkdensityerror
  %return128 = call i64 @"eq@III"(i64 %_bound___checkdensityerror127, i64 1)
  %_bound___height129 = load double, double* %_bound___height
  %_bound_target130 = load i64, i64* %_bound_target
  %return131 = call double @"point@FISI"(i64 1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @2, i64 0, i64 0), i64 %_bound_target130)
  %output132 = call double @"div@FF"(double %_bound___height129, double %return131)
  %return133 = call double @"abs@FF"(double %output132)
  %output134 = fsub double 1.000000e+00, %return133
  %return135 = call double @"abs@FF"(double %output134)
  %_bound___maxtexeldensityerror136 = load double, double* %_bound___maxtexeldensityerror
  %return137 = fcmp ogt double %return135, %_bound___maxtexeldensityerror136
  %return138 = zext i1 %return137 to i64
  %return139 = call i64 @"and@III"(i64 %return128, i64 %return138)
  %7 = icmp ne i64 %return139, 0
  br i1 %7, label %true140, label %end96

true115:                                          ; preds = %body99
  store i64 1, i64* %_bound_mode
  %return119 = call i64 @"point@IISI"(i64 3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @4, i64 0, i64 0), i64 %i97.0)
  store i64 %return119, i64* %_bound_target
  %return121 = call i64 @"eq@III"(i64 %errortiling.0, i64 1)
  %8 = icmp ne i64 %return121, 0
  br i1 %8, label %true122, label %end116

end116:                                           ; preds = %true115, %true122, %body99
  %similarity.4 = phi double [ %return110, %true122 ], [ %return110, %true115 ], [ %similarity.3, %body99 ]
  %output126 = add i64 %i97.0, 1
  br label %cond98

true122:                                          ; preds = %true115
  store i64 3, i64* %_bound_mode
  br label %end116

true140:                                          ; preds = %end103
  store i64 3, i64* %_bound_mode
  br label %end96
}

; Function Attrs: nounwind readnone
declare i64 @"neg@II"(i64) #1

; Function Attrs: nounwind
declare double @"detail@FISI"(i64, i8*, i64) #2

; Function Attrs: nounwind readnone
declare i64 @"eq@III"(i64, i64) #1

; Function Attrs: nounwind
declare i64 @"npoints@II"(i64) #2

; Function Attrs: nounwind readnone
declare i64 @"lt@III"(i64, i64) #1

; Function Attrs: nounwind
declare double @"point@FISI"(i64, i8*, i64) #2

; Function Attrs: nounwind readnone
declare double @"div@FF"(double, double) #1

; Function Attrs: nounwind
declare double @"abs@FF"(double) #2

; Function Attrs: nounwind readnone
declare i64 @"or@III"(i64, i64) #1

; Function Attrs: nounwind
declare i64 @"point@IISI"(i64, i8*, i64) #2

; Function Attrs: nounwind readnone
declare i64 @"and@III"(i64, i64) #1

; Function Attrs: nounwind
define void @__vex_snippet(i64 %mode, i64 %target, double %__width, double %__widthweight, double %__height, double %__heightweight, double %__area, double %__areaweight, i64 %__checkdensityerror, double %__maxtexeldensityerror, i64 %errortiling) #2 {
__llvm_entry:
  %"<target>" = alloca i64
  %"<errortiling>" = alloca i64
  %0 = alloca double
  %1 = alloca double
  %2 = alloca double
  %3 = alloca double
  %4 = alloca double
  %5 = alloca double
  %6 = alloca i64
  %7 = alloca double
  %"<mode>" = alloca i64
  store i64 %mode, i64* %"<mode>"
  store i64 %target, i64* %"<target>"
  store i64 %errortiling, i64* %"<errortiling>"
  store double %__width, double* %0
  store double %__widthweight, double* %1
  store double %__height, double* %2
  store double %__heightweight, double* %3
  store double %__area, double* %4
  store double %__areaweight, double* %5
  store i64 %__checkdensityerror, i64* %6
  store double %__maxtexeldensityerror, double* %7
  call void @"__vex_snippet_snippet@IIFFFFFFIFI"(i64* %"<mode>", i64* %"<target>", double* %0, double* %1, double* %2, double* %3, double* %4, double* %5, i64* %6, double* %7, i64* %"<errortiling>")
  %evalue = load i64, i64* %"<mode>"
  %gvalue = call i64 @"_export@ISI"(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @5, i64 0, i64 0), i64 %evalue) #3
  %evalue9 = load i64, i64* %"<target>"
  %gvalue10 = call i64 @"_export@ISI"(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @4, i64 0, i64 0), i64 %evalue9) #3
  %gvalue12 = call double @"_export@FSF"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1, i64 0, i64 0), double %__width) #3
  %gvalue14 = call double @"_export@FSF"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @6, i64 0, i64 0), double %__widthweight) #3
  %gvalue16 = call double @"_export@FSF"(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @2, i64 0, i64 0), double %__height) #3
  %gvalue18 = call double @"_export@FSF"(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @7, i64 0, i64 0), double %__heightweight) #3
  %gvalue20 = call double @"_export@FSF"(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @3, i64 0, i64 0), double %__area) #3
  %gvalue22 = call double @"_export@FSF"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @8, i64 0, i64 0), double %__areaweight) #3
  %gvalue24 = call i64 @"_export@ISI"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @9, i64 0, i64 0), i64 %__checkdensityerror) #3
  %gvalue26 = call double @"_export@FSF"(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @10, i64 0, i64 0), double %__maxtexeldensityerror) #3
  %evalue27 = load i64, i64* %"<errortiling>"
  %gvalue28 = call i64 @"_export@ISI"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @11, i64 0, i64 0), i64 %evalue27) #3
  store i64 %gvalue, i64* @mode
  store i64 %gvalue10, i64* @target
  store double %gvalue12, double* @__width
  store double %gvalue14, double* @__widthweight
  store double %gvalue16, double* @__height
  store double %gvalue18, double* @__heightweight
  store double %gvalue20, double* @__area
  store double %gvalue22, double* @__areaweight
  store i64 %gvalue24, i64* @__checkdensityerror
  store double %gvalue26, double* @__maxtexeldensityerror
  store i64 %gvalue28, i64* @errortiling
  ret void
}

declare i64 @"_export@ISI"(i8*, i64)

declare double @"_export@FSF"(i8*, double)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @__vex_snippet(i64 0, i64 0, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, i64 0, double 0.000000e+00, i64 0)
  ret void
}

attributes #0 = { alwaysinline nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind }
attributes #3 = { nounwind readonly }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"19.0.531"}
!2 = !{!"64"}

;_code_end
