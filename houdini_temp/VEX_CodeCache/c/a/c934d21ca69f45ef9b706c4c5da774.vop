;_name	/obj/PDG_INST/Pointcloud/attribfrommap1/calculate_color_from_map
; ModuleID = 'obj_PDG_INST_Pointcloud_attribfrommap1_calculate_color_from_map'
source_filename = "obj_PDG_INST_Pointcloud_attribfrommap1_calculate_color_from_map"

@0 = private constant [1 x i8] zeroinitializer
@1 = private constant [5 x i8] c"auto\00"
@2 = private constant [7 x i8] c"repeat\00"
@3 = private constant [6 x i8] c"gauss\00"
@4 = private constant [7 x i8] c"linear\00"
@5 = private constant [2 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @4, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @4, i64 0, i64 0)]
@6 = private constant [2 x double] [double 0.000000e+00, double 1.000000e+00]
@7 = private constant [3 x i8] c"Cd\00"
@Cd = external global <3 x double>
@8 = private constant [3 x i8] c"uv\00"
@9 = private constant [3 x i8] c"st\00"
@10 = private constant [7 x i8] c"streak\00"
@11 = private constant [5 x i8] c"wrap\00"
@12 = private constant [7 x i8] c"filter\00"
@13 = private constant [6 x i8] c"width\00"
@14 = private constant [7 x i8] c"border\00"
@15 = private constant [12 x i8] c"extrapolate\00"
@16 = private constant [5 x i8] c"lerp\00"
@17 = private constant [8 x i8] c"channel\00"
@18 = private constant [5 x i8] c"face\00"
@19 = private constant [5 x i8] c"blur\00"
@20 = private constant [10 x i8] c"pixelblur\00"
@21 = private constant [14 x i8] c"srccolorspace\00"
@22 = private constant [13 x i8] c"scene_linear\00"
@23 = private constant [6 x i8] c"point\00"
@24 = private constant [4 x i8] c"set\00"

; Function Attrs: nounwind
define void @obj_PDG_INST_Pointcloud_attribfrommap1_calculate_color_from_map(double %Alpha, i64 %use_texture_from_disk, <3 x double> %uv, i8* %cmap, <2 x double> %st, i64 %parm_udim, i8* %srccolorspace, i8* %wrap, double %filter_width, i8* %filter, <3 x double> %border, i8* %texture_channel, double %contrast, i64 %visualize_map, double %scale, double %rolloff, i64 %type, <4 x double> %color_influence, i8** %remap_influence_2_the_basis_strings, double* %remap_influence_2_the_key_positions, double* %remap_influence_2_the_key_values, i64 %color_channel, i64 %ptnum, i8* %export_attribute, i64 %doremap, <3 x double> %Cd) #0 {
__llvm_entry:
  %cast = call <4 x double> @"set@PV"(<3 x double> %Cd)
  %output = call <4 x double> @"setcomp@PFI"(<4 x double> %cast, double %Alpha, i64 3)
  %0 = icmp ne i64 %use_texture_from_disk, 0
  br i1 %0, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %cast9 = call <4 x double> @"set@PV"(<3 x double> %border)
  %output13 = call <4 x double> @"setcomp@PFI"(<4 x double> %cast9, double 0.000000e+00, i64 3)
  %return = call i64 @"eq@ISS"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @8, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @9, i64 0, i64 0))
  %return25 = call i64 @"isbound@IS"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @8, i64 0, i64 0))
  %return26 = call i64 @"isbound@IS"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @9, i64 0, i64 0))
  %cast28 = call <3 x double> @"set@VU"(<2 x double> %st)
  %return30 = call i64 @"eq@III"(i64 %return26, i64 0)
  %1 = icmp ne i64 %return30, 0
  br i1 %1, label %true31, label %false

end:                                              ; preds = %end69, %__llvm_entry
  %var1_out.0 = phi <4 x double> [ %clr1.0, %end69 ], [ %output, %__llvm_entry ]
  %return281 = call i64 @"eq@III"(i64 %type, i64 0)
  %2 = icmp ne i64 %return281, 0
  br i1 %2, label %true282, label %end283

true31:                                           ; preds = %true
  br label %end32

false:                                            ; preds = %true
  br label %end32

end32:                                            ; preds = %false, %true31
  %result.0 = phi <3 x double> [ zeroinitializer, %true31 ], [ %cast28, %false ]
  %return36 = call i64 @"eq@III"(i64 %return25, i64 0)
  %3 = icmp ne i64 %return36, 0
  br i1 %3, label %true37, label %false38

true37:                                           ; preds = %end32
  br label %end39

false38:                                          ; preds = %end32
  br label %end39

end39:                                            ; preds = %false38, %true37
  %result1.0 = phi <3 x double> [ %result.0, %true37 ], [ %uv, %false38 ]
  %return43 = call i64 @"eq@III"(i64 %return, i64 0)
  %4 = icmp ne i64 %return43, 0
  br i1 %4, label %true44, label %false45

true44:                                           ; preds = %end39
  br label %end46

false45:                                          ; preds = %end39
  br label %end46

end46:                                            ; preds = %false45, %true44
  %result2.0 = phi <3 x double> [ %result1.0, %true44 ], [ zeroinitializer, %false45 ]
  %output50 = call { double, double, double } @"assign@FFFV"(<3 x double> %result2.0)
  %return58 = call i64 @"ne@III"(i64 1, i64 0)
  %5 = icmp ne i64 %return58, 0
  %phi = select i1 %5, <3 x double> %uv, <3 x double> %result2.0
  %return66 = call i64 @"ne@ISS"(i8* %cmap, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @0, i64 0, i64 0))
  %6 = icmp ne i64 %return66, 0
  br i1 %6, label %true67, label %false68

true67:                                           ; preds = %end46
  br i1 false, label %true74, label %end75

false68:                                          ; preds = %end46
  %return266 = call <4 x double> @"set@PP"(<4 x double> zeroinitializer)
  br label %end69

end69:                                            ; preds = %end154, %true260, %true116, %false68
  %clr1.0 = phi <4 x double> [ %return120, %true116 ], [ %return264, %true260 ], [ %clr1.1, %end154 ], [ %return266, %false68 ]
  br label %end

true74:                                           ; preds = %true67
  %return77 = call double @"getcomp@FVI"(<3 x double> %phi, i64 1)
  %output78 = fsub double 1.000000e+00, %return77
  %return79 = call { double, <3 x double> } @"setcomp@FVFI"(<3 x double> %phi, double %output78, i64 1)
  %output81 = extractvalue { double, <3 x double> } %return79, 1
  br label %end75

end75:                                            ; preds = %true74, %true67
  %_uv1.0 = phi <3 x double> [ %output81, %true74 ], [ %phi, %true67 ]
  br i1 false, label %true84, label %end85

true84:                                           ; preds = %end75
  %return87 = call double @"getcomp@FVI"(<3 x double> %_uv1.0, i64 0)
  %return89 = call double @"getcomp@FVI"(<3 x double> %_uv1.0, i64 1)
  %return91 = call { double, <3 x double> } @"setcomp@FVFI"(<3 x double> %_uv1.0, double %return89, i64 0)
  %output93 = extractvalue { double, <3 x double> } %return91, 1
  %return96 = call { double, <3 x double> } @"setcomp@FVFI"(<3 x double> %output93, double %return87, i64 1)
  %output98 = extractvalue { double, <3 x double> } %return96, 1
  br label %end85

end85:                                            ; preds = %true84, %end75
  %_uv1.1 = phi <3 x double> [ %output98, %true84 ], [ %_uv1.0, %end75 ]
  %return101 = call i8* @"ocio_parsecolorspace@SS"(i8* %cmap)
  %return104 = call i64 @"has_udim@IS"(i8* %cmap)
  %return105 = call i64 @"and@III"(i64 %parm_udim, i64 %return104)
  %7 = icmp ne i64 %return105, 0
  br i1 %7, label %true106, label %end107

true106:                                          ; preds = %end85
  %return109 = call double @"getcomp@FVI"(<3 x double> %_uv1.1, i64 0)
  %return111 = call double @"getcomp@FVI"(<3 x double> %_uv1.1, i64 1)
  %return113 = call i8* @"expand_udim@SFFS"(double %return109, double %return111, i8* %cmap)
  br label %end107

end107:                                           ; preds = %true106, %end85
  %_map_udim.0 = phi i8* [ %return113, %true106 ], [ %cmap, %end85 ]
  %return115 = call i64 @"eq@ISS"(i8* %_map_udim.0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @0, i64 0, i64 0))
  %8 = icmp ne i64 %return115, 0
  br i1 %8, label %true116, label %false117

true116:                                          ; preds = %end107
  %return120 = call <4 x double> @"set@PP"(<4 x double> zeroinitializer)
  br label %end69

false117:                                         ; preds = %end107
  %return123 = call i64 @"ne@ISS"(i8* %_map_udim.0, i8* %cmap)
  %9 = icmp ne i64 %return123, 0
  br i1 %9, label %true124, label %end125

true124:                                          ; preds = %false117
  %return127 = call double @"getcomp@FVI"(<3 x double> %_uv1.1, i64 0)
  %return128 = call double @"mod@FFF"(double %return127, double 1.000000e+00)
  %return130 = call { double, <3 x double> } @"setcomp@FVFI"(<3 x double> %_uv1.1, double %return128, i64 0)
  %output132 = extractvalue { double, <3 x double> } %return130, 1
  %return134 = call double @"getcomp@FVI"(<3 x double> %output132, i64 1)
  %return135 = call double @"mod@FFF"(double %return134, double 1.000000e+00)
  %return137 = call { double, <3 x double> } @"setcomp@FVFI"(<3 x double> %output132, double %return135, i64 1)
  %output139 = extractvalue { double, <3 x double> } %return137, 1
  br label %end125

end125:                                           ; preds = %true124, %false117
  %_uv1.2 = phi <3 x double> [ %output139, %true124 ], [ %_uv1.1, %false117 ]
  %wrapmode.0 = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @10, i64 0, i64 0), %true124 ], [ %wrap, %false117 ]
  br i1 false, label %true142, label %end143

true142:                                          ; preds = %end125
  %return145 = call double @"getcomp@FVI"(<3 x double> %_uv1.2, i64 0)
  %output146 = fsub double 1.000000e+00, %return145
  %return148 = call { double, <3 x double> } @"setcomp@FVFI"(<3 x double> %_uv1.2, double %output146, i64 0)
  %output150 = extractvalue { double, <3 x double> } %return148, 1
  br label %end143

end143:                                           ; preds = %true142, %end125
  %_uv1.3 = phi <3 x double> [ %output150, %true142 ], [ %_uv1.2, %end125 ]
  br i1 %5, label %true152, label %false153

true152:                                          ; preds = %end143
  %cast156 = call <3 x double> @"set@VF"(double 5.000000e-01)
  %output157 = call <3 x double> @"mul@VV"(<3 x double> %cast156, <3 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>)
  br i1 false, label %true160, label %end161

false153:                                         ; preds = %end143
  %return237 = call double @"getcomp@FVI"(<3 x double> %_uv1.3, i64 0)
  %return239 = call double @"getcomp@FVI"(<3 x double> %_uv1.3, i64 1)
  %return251 = call i64 @"eq@ISS"(i8* %return101, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @0, i64 0, i64 0))
  %10 = icmp ne i64 %return251, 0
  %phi256 = select i1 %10, i8* %srccolorspace, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @4, i64 0, i64 0)
  %return257 = call <4 x double> @"texture@SPFF:SSSSSFSPSISSSISISFSFSS"(i8* %_map_udim.0, double %return237, double %return239, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @11, i64 0, i64 0), i8* %wrapmode.0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @12, i64 0, i64 0), i8* %filter, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @13, i64 0, i64 0), double %filter_width, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @14, i64 0, i64 0), <4 x double> %output13, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @15, i64 0, i64 0), i64 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @17, i64 0, i64 0), i8* %texture_channel, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @18, i64 0, i64 0), i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @16, i64 0, i64 0), i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @19, i64 0, i64 0), double 0.000000e+00, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @20, i64 0, i64 0), double 0.000000e+00, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @21, i64 0, i64 0), i8* %phi256)
  br label %end154

end154:                                           ; preds = %false153, %end161
  %clr1.1 = phi <4 x double> [ %return234, %end161 ], [ %return257, %false153 ]
  %return259 = call i64 @"ne@ISS"(i8* %return101, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @0, i64 0, i64 0))
  %11 = icmp ne i64 %return259, 0
  br i1 %11, label %true260, label %end69

true160:                                          ; preds = %true152
  %return164 = call double @"getcomp@FVI"(<3 x double> %output157, i64 0)
  %return166 = call double @"getcomp@FVI"(<3 x double> %output157, i64 1)
  %return168 = call { double, <3 x double> } @"setcomp@FVFI"(<3 x double> %output157, double %return166, i64 0)
  %output170 = extractvalue { double, <3 x double> } %return168, 1
  %return173 = call { double, <3 x double> } @"setcomp@FVFI"(<3 x double> %output170, double %return164, i64 1)
  %output175 = extractvalue { double, <3 x double> } %return173, 1
  br label %end161

end161:                                           ; preds = %true160, %true152
  %tduv.0 = phi <3 x double> [ %output175, %true160 ], [ %output157, %true152 ]
  %return178 = call double @"getcomp@FVI"(<3 x double> %_uv1.3, i64 0)
  %return180 = call double @"getcomp@FVI"(<3 x double> %tduv.0, i64 0)
  %output181 = fsub double %return178, %return180
  %return183 = call double @"getcomp@FVI"(<3 x double> %_uv1.3, i64 1)
  %return185 = call double @"getcomp@FVI"(<3 x double> %tduv.0, i64 1)
  %output186 = fsub double %return183, %return185
  %output191 = fadd double %return178, %return180
  %output206 = fadd double %return183, %return185
  %return228 = call i64 @"eq@ISS"(i8* %return101, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @0, i64 0, i64 0))
  %12 = icmp ne i64 %return228, 0
  %phi233 = select i1 %12, i8* %srccolorspace, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @4, i64 0, i64 0)
  %return234 = call <4 x double> @"texture@SPFFFFFFFF:SSSSSFSPSISISSSISFSFSS"(i8* %_map_udim.0, double %output181, double %output186, double %output191, double %output186, double %output191, double %output206, double %output181, double %output206, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @11, i64 0, i64 0), i8* %wrapmode.0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @12, i64 0, i64 0), i8* %filter, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @13, i64 0, i64 0), double %filter_width, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @14, i64 0, i64 0), <4 x double> %output13, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @15, i64 0, i64 0), i64 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @16, i64 0, i64 0), i64 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @17, i64 0, i64 0), i8* %texture_channel, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @18, i64 0, i64 0), i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @19, i64 0, i64 0), double 0.000000e+00, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @20, i64 0, i64 0), double 0.000000e+00, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @21, i64 0, i64 0), i8* %phi233)
  br label %end154

true260:                                          ; preds = %end154
  %return264 = call <4 x double> @"ocio_transform@PSSP"(i8* %return101, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @22, i64 0, i64 0), <4 x double> %clr1.1)
  br label %end69

true282:                                          ; preds = %end
  %return285 = call i64 @"eq@III"(i64 %color_channel, i64 4)
  %output287 = call { double, double, double, double } @"assign@FFFFP"(<4 x double> %var1_out.0)
  %output288 = extractvalue { double, double, double, double } %output287, 0
  %output289 = extractvalue { double, double, double, double } %output287, 1
  %output290 = extractvalue { double, double, double, double } %output287, 2
  %output291 = extractvalue { double, double, double, double } %output287, 3
  %return293 = call i64 @"eq@III"(i64 %color_channel, i64 0)
  %13 = icmp ne i64 %return293, 0
  br i1 %13, label %true294, label %false295

end283:                                           ; preds = %end419, %true431, %end
  %_Cd.0 = phi <3 x double> [ %__Cd.0, %true431 ], [ %__Cd.0, %end419 ], [ %Cd, %end ]
  %return448 = call i64 @"ne@III"(i64 %type, i64 0)
  %14 = icmp ne i64 %return448, 0
  br i1 %14, label %true449, label %end450

true294:                                          ; preds = %true282
  br label %end296

false295:                                         ; preds = %true282
  %return299 = call i64 @"eq@III"(i64 %color_channel, i64 1)
  %15 = icmp ne i64 %return299, 0
  br i1 %15, label %true300, label %false301

end296:                                           ; preds = %true306, %false307, %true300, %true294
  %result4.0 = phi double [ %output288, %true294 ], [ %output289, %true300 ], [ %output290, %true306 ], [ %output291, %false307 ]
  %return316 = call i64 @"ne@III"(i64 %return285, i64 0)
  %16 = icmp ne i64 %return316, 0
  br i1 %16, label %true317, label %end318

true300:                                          ; preds = %false295
  br label %end296

false301:                                         ; preds = %false295
  %return305 = call i64 @"eq@III"(i64 %color_channel, i64 2)
  %17 = icmp ne i64 %return305, 0
  br i1 %17, label %true306, label %false307

true306:                                          ; preds = %false301
  br label %end296

false307:                                         ; preds = %false301
  br label %end296

true317:                                          ; preds = %end296
  %output320 = call { double, double, double, double } @"assign@FFFFP"(<4 x double> %var1_out.0)
  %output321 = extractvalue { double, double, double, double } %output320, 0
  %output322 = extractvalue { double, double, double, double } %output320, 1
  %output323 = extractvalue { double, double, double, double } %output320, 2
  %output324 = extractvalue { double, double, double, double } %output320, 3
  %return326 = call <4 x double> @"clamp@PPPP"(<4 x double> %color_influence, <4 x double> zeroinitializer, <4 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>)
  %output328 = call { double, double, double, double } @"assign@FFFFP"(<4 x double> %return326)
  %output329 = extractvalue { double, double, double, double } %output328, 0
  %output330 = extractvalue { double, double, double, double } %output328, 1
  %output331 = extractvalue { double, double, double, double } %output328, 2
  %output332 = extractvalue { double, double, double, double } %output328, 3
  %output335 = fmul double %output321, %output329
  %output338 = fmul double %output322, %output330
  %output341 = fmul double %output323, %output331
  %output344 = fadd double %output335, %output338
  %output346 = fadd double %output344, %output341
  %output349 = fadd double %output329, %output330
  %output351 = fadd double %output349, %output331
  %output354 = call double @"div@FF"(double %output346, double %output351)
  %return356 = call double @"neg@FF"(double %output324)
  %output358 = fadd double %return356, 1.000000e+00
  %return360 = call double @"neg@FF"(double %output332)
  %output362 = fadd double %return360, 1.000000e+00
  %output365 = fmul double %output358, %output362
  %output368 = fadd double %output324, %output365
  %output371 = fmul double %output354, %output368
  br label %end318

end318:                                           ; preds = %true317, %end296
  %_result.0 = phi double [ %output371, %true317 ], [ %result4.0, %end296 ]
  %return377 = call double @"spline@F[SF[F[F"(i8** %remap_influence_2_the_basis_strings, double %_result.0, double* %remap_influence_2_the_key_values, double* %remap_influence_2_the_key_positions)
  %return380 = call double @"smooth@FFFFF"(double 0.000000e+00, double %rolloff, double %return377, double 1.000000e+00)
  %output382 = fadd double %contrast, 1.000000e+00
  %return385 = call double @"pow@FFF"(double %return380, double %output382)
  %output388 = fmul double %return385, %return377
  %output391 = fmul double %scale, %output388
  %return392 = call i64 @"ne@III"(i64 0, i64 0)
  %18 = icmp ne i64 %return392, 0
  %return397 = call i64 @"ne@III"(i64 %doremap, i64 0)
  %19 = icmp ne i64 %return397, 0
  br i1 %18, label %true393, label %false394

true393:                                          ; preds = %end318
  %phi403 = select i1 %19, double %_result.0, double %output391
  br label %end395

false394:                                         ; preds = %end318
  %phi411 = select i1 %19, double %output391, double %_result.0
  br label %end395

end395:                                           ; preds = %false394, %true393
  %phi412 = phi double [ %phi403, %true393 ], [ %phi411, %false394 ]
  %return417 = call i64 @"ne@III"(i64 %visualize_map, i64 0)
  %20 = icmp ne i64 %return417, 0
  br i1 %20, label %true418, label %end419

true418:                                          ; preds = %end395
  %return423 = call <3 x double> @"set@VFFF"(double %phi412, double %phi412, double %phi412)
  br label %end419

end419:                                           ; preds = %true418, %end395
  %__Cd.0 = phi <3 x double> [ %return423, %true418 ], [ %Cd, %end395 ]
  %return427 = call i64 @"ne@ISS"(i8* %export_attribute, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @7, i64 0, i64 0))
  %21 = icmp ne i64 %return427, 0
  br i1 %21, label %true431, label %end283

true431:                                          ; preds = %end419
  %return435 = call i64 @"neg@II"(i64 1)
  %return437 = call i64 @"setattrib@IISSIIFS"(i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @23, i64 0, i64 0), i8* %export_attribute, i64 %ptnum, i64 %return435, double %phi412, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @24, i64 0, i64 0))
  br label %end283

true449:                                          ; preds = %end283
  %cast452 = call <3 x double> @"set@VP"(<4 x double> %var1_out.0)
  %return456 = call <3 x double> @"normalize@VV"(<3 x double> %cast452)
  %output458 = call { double, double, double } @"assign@FFFV"(<3 x double> %cast452)
  %output459 = extractvalue { double, double, double } %output458, 0
  %output460 = extractvalue { double, double, double } %output458, 1
  %output461 = extractvalue { double, double, double } %output458, 2
  %output463 = fmul double %output459, 5.000000e-01
  %output465 = fmul double %output460, 6.000000e-01
  %output467 = fmul double %output461, 1.000000e-01
  %output470 = fadd double %output463, %output465
  %output472 = fadd double %output470, %output467
  %output474 = call double @"div@FF"(double 1.000000e+00, double 1.200000e+00)
  %output475 = fmul double %output472, %output474
  %return478 = call double @"fit@FFFFFF"(double %output475, double 0.000000e+00, double %rolloff, double 0.000000e+00, double 1.000000e+00)
  %output480 = fadd double %contrast, 1.000000e+00
  %return483 = call double @"pow@FFF"(double %return478, double %output480)
  %cast486 = call <3 x double> @"set@VF"(double %return483)
  %output487 = call <3 x double> @"mul@VV"(<3 x double> %return456, <3 x double> %cast486)
  %cast490 = call <3 x double> @"set@VF"(double %scale)
  %output491 = call <3 x double> @"mul@VV"(<3 x double> %output487, <3 x double> %cast490)
  %return492 = call i64 @"ne@III"(i64 0, i64 0)
  %22 = icmp ne i64 %return492, 0
  %return497 = call i64 @"ne@III"(i64 %doremap, i64 0)
  %23 = icmp ne i64 %return497, 0
  br i1 %22, label %true493, label %false494

end450:                                           ; preds = %end519, %end283
  %_Cd1.0 = phi <3 x double> [ %__Cd1.0, %end519 ], [ %Cd, %end283 ]
  br i1 %14, label %true532, label %end533

true493:                                          ; preds = %true449
  %phi503 = select i1 %23, <3 x double> %cast452, <3 x double> %output491
  br label %end495

false494:                                         ; preds = %true449
  %phi511 = select i1 %23, <3 x double> %output491, <3 x double> %cast452
  br label %end495

end495:                                           ; preds = %false494, %true493
  %phi512 = phi <3 x double> [ %phi503, %true493 ], [ %phi511, %false494 ]
  %return517 = call i64 @"ne@III"(i64 %visualize_map, i64 0)
  %24 = icmp ne i64 %return517, 0
  br i1 %24, label %true518, label %end519

true518:                                          ; preds = %end495
  br label %end519

end519:                                           ; preds = %true518, %end495
  %__Cd1.0 = phi <3 x double> [ %phi512, %true518 ], [ %Cd, %end495 ]
  %return524 = call i64 @"neg@II"(i64 1)
  %return526 = call i64 @"setattrib@IISSIIVS"(i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @23, i64 0, i64 0), i8* %export_attribute, i64 %ptnum, i64 %return524, <3 x double> %phi512, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @24, i64 0, i64 0))
  br label %end450

true532:                                          ; preds = %end450
  br label %end533

end533:                                           ; preds = %true532, %end450
  %__Cd2.0 = phi <3 x double> [ %_Cd1.0, %true532 ], [ %_Cd.0, %end450 ]
  %gvalue = call <3 x double> @"_export@VSV"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @7, i64 0, i64 0), <3 x double> %__Cd2.0) #3
  store <3 x double> %gvalue, <3 x double>* @Cd
  ret void
}

; Function Attrs: nounwind
declare <4 x double> @"set@PV"(<3 x double>) #0

; Function Attrs: nounwind readnone
declare <4 x double> @"setcomp@PFI"(<4 x double>, double, i64) #1

; Function Attrs: nounwind readnone
declare i64 @"eq@ISS"(i8*, i8*) #1

; Function Attrs: nounwind readnone
declare i64 @"isbound@IS"(i8*) #1

; Function Attrs: nounwind readnone
declare <3 x double> @"set@VU"(<2 x double>) #1

; Function Attrs: nounwind readnone
declare i64 @"eq@III"(i64, i64) #1

; Function Attrs: nounwind
declare { double, double, double } @"assign@FFFV"(<3 x double>) #0

; Function Attrs: nounwind readnone
declare i64 @"ne@III"(i64, i64) #1

; Function Attrs: nounwind readnone
declare i64 @"ne@ISS"(i8*, i8*) #1

; Function Attrs: nounwind readnone
declare double @"getcomp@FVI"(<3 x double>, i64) #1

; Function Attrs: alwaysinline
define private { double, <3 x double> } @"setcomp@FVFI"(<3 x double> %rw11, double %rw22, i64 %rw33) #2 {
__llvm_entry:
  %rw16 = call <3 x double> @"setcomp@VFI"(<3 x double> %rw11, double %rw22, i64 %rw33)
  %mrv = insertvalue { double, <3 x double> } undef, double %rw22, 0
  %mrv9 = insertvalue { double, <3 x double> } %mrv, <3 x double> %rw16, 1
  ret { double, <3 x double> } %mrv9
}

; Function Attrs: nounwind readnone
declare <3 x double> @"setcomp@VFI"(<3 x double>, double, i64) #1

; Function Attrs: nounwind readnone
declare i8* @"ocio_parsecolorspace@SS"(i8*) #1

; Function Attrs: nounwind readnone
declare i64 @"has_udim@IS"(i8*) #1

; Function Attrs: nounwind readnone
declare i64 @"and@III"(i64, i64) #1

; Function Attrs: nounwind readnone
declare i8* @"expand_udim@SFFS"(double, double, i8*) #1

; Function Attrs: nounwind readnone
declare <4 x double> @"set@PP"(<4 x double>) #1

; Function Attrs: nounwind readnone
declare double @"mod@FFF"(double, double) #1

; Function Attrs: nounwind readnone
declare <3 x double> @"set@VF"(double) #1

; Function Attrs: nounwind readnone
declare <3 x double> @"mul@VV"(<3 x double>, <3 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @"texture@SPFFFFFFFF:SSSSSFSPSISISSSISFSFSS"(i8*, double, double, double, double, double, double, double, double, i8*, i8*, i8*, i8*, i8*, double, i8*, <4 x double>, i8*, i64, i8*, i64, i8*, i8*, i8*, i64, i8*, double, i8*, double, i8*, i8*) #1

; Function Attrs: alwaysinline
define private <4 x double> @"texture@SPFF:SSSSSFSPSISSSISISFSFSS"(i8* %rw01, double %rw26, double %rw37, i8* %rw48, i8* %rw59, i8* %rw610, i8* %rw711, i8* %rw812, double %rw913, i8* %rw1014, <4 x double> %rw1115, i8* %rw1216, i64 %rw1317, i8* %rw1418, i8* %rw1519, i8* %rw1620, i64 %rw1721, i8* %rw1822, i64 %rw1923, i8* %rw2024, double %rw2125, i8* %rw2226, double %rw2327, i8* %rw2428, i8* %rw2529) #2 {
__llvm_entry:
  %t_0_ = call double @"Du@FF:SSSSSFSPSISSSISISFSFSS"(double %rw26, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @11, i64 0, i64 0), i8* %rw59, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @12, i64 0, i64 0), i8* %rw711, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @13, i64 0, i64 0), double %rw913, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @14, i64 0, i64 0), <4 x double> %rw1115, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @15, i64 0, i64 0), i64 %rw1317, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @17, i64 0, i64 0), i8* %rw1519, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @18, i64 0, i64 0), i64 %rw1721, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @16, i64 0, i64 0), i64 %rw1923, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @19, i64 0, i64 0), double %rw2125, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @20, i64 0, i64 0), double %rw2327, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @21, i64 0, i64 0), i8* %rw2529)
  %t_1_ = call double @"Dv@FF:SSSSSFSPSISSSISISFSFSS"(double %rw26, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @11, i64 0, i64 0), i8* %rw59, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @12, i64 0, i64 0), i8* %rw711, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @13, i64 0, i64 0), double %rw913, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @14, i64 0, i64 0), <4 x double> %rw1115, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @15, i64 0, i64 0), i64 %rw1317, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @17, i64 0, i64 0), i8* %rw1519, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @18, i64 0, i64 0), i64 %rw1721, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @16, i64 0, i64 0), i64 %rw1923, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @19, i64 0, i64 0), double %rw2125, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @20, i64 0, i64 0), double %rw2327, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @21, i64 0, i64 0), i8* %rw2529)
  %t_2_ = call double @"Du@FF:SSSSSFSPSISSSISISFSFSS"(double %rw37, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @11, i64 0, i64 0), i8* %rw59, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @12, i64 0, i64 0), i8* %rw711, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @13, i64 0, i64 0), double %rw913, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @14, i64 0, i64 0), <4 x double> %rw1115, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @15, i64 0, i64 0), i64 %rw1317, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @17, i64 0, i64 0), i8* %rw1519, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @18, i64 0, i64 0), i64 %rw1721, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @16, i64 0, i64 0), i64 %rw1923, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @19, i64 0, i64 0), double %rw2125, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @20, i64 0, i64 0), double %rw2327, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @21, i64 0, i64 0), i8* %rw2529)
  %t_3_ = call double @"Dv@FF:SSSSSFSPSISSSISISFSFSS"(double %rw37, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @11, i64 0, i64 0), i8* %rw59, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @12, i64 0, i64 0), i8* %rw711, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @13, i64 0, i64 0), double %rw913, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @14, i64 0, i64 0), <4 x double> %rw1115, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @15, i64 0, i64 0), i64 %rw1317, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @17, i64 0, i64 0), i8* %rw1519, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @18, i64 0, i64 0), i64 %rw1721, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @16, i64 0, i64 0), i64 %rw1923, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @19, i64 0, i64 0), double %rw2125, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @20, i64 0, i64 0), double %rw2327, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @21, i64 0, i64 0), i8* %rw2529)
  %t_0_123 = fmul double %t_0_, 5.000000e-01
  %t_1_126 = fmul double %t_1_, 5.000000e-01
  %t_2_129 = fmul double %t_2_, 5.000000e-01
  %t_3_132 = fmul double %t_3_, 5.000000e-01
  %t_4_ = fsub double %rw26, %t_0_123
  %t_4_138 = fsub double %t_4_, %t_1_126
  %t_5_ = fadd double %rw26, %t_0_123
  %t_5_144 = fsub double %t_5_, %t_1_126
  %t_6_150 = fadd double %t_5_, %t_1_126
  %t_7_156 = fadd double %t_4_, %t_1_126
  %t_8_ = fsub double %rw37, %t_2_129
  %t_8_162 = fsub double %t_8_, %t_3_132
  %t_9_ = fadd double %rw37, %t_2_129
  %t_9_168 = fsub double %t_9_, %t_3_132
  %t_a_174 = fadd double %t_9_, %t_3_132
  %t_b_180 = fadd double %t_8_, %t_3_132
  %rw1212 = call <4 x double> @"texture@SPFFFFFFFF:SSSSSFSPSISSSISISFSFSS"(i8* %rw01, double %t_4_138, double %t_8_162, double %t_5_144, double %t_9_168, double %t_6_150, double %t_a_174, double %t_7_156, double %t_b_180, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @11, i64 0, i64 0), i8* %rw59, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @12, i64 0, i64 0), i8* %rw711, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @13, i64 0, i64 0), double %rw913, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @14, i64 0, i64 0), <4 x double> %rw1115, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @15, i64 0, i64 0), i64 %rw1317, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @17, i64 0, i64 0), i8* %rw1519, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @18, i64 0, i64 0), i64 %rw1721, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @16, i64 0, i64 0), i64 %rw1923, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @19, i64 0, i64 0), double %rw2125, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @20, i64 0, i64 0), double %rw2327, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @21, i64 0, i64 0), i8* %rw2529)
  ret <4 x double> %rw1212
}

; Function Attrs: nounwind readnone
declare double @"Du@FF:SSSSSFSPSISSSISISFSFSS"(double, i8*, i8*, i8*, i8*, i8*, double, i8*, <4 x double>, i8*, i64, i8*, i8*, i8*, i64, i8*, i64, i8*, double, i8*, double, i8*, i8*) #1

; Function Attrs: nounwind readnone
declare double @"Dv@FF:SSSSSFSPSISSSISISFSFSS"(double, i8*, i8*, i8*, i8*, i8*, double, i8*, <4 x double>, i8*, i64, i8*, i8*, i8*, i64, i8*, i64, i8*, double, i8*, double, i8*, i8*) #1

; Function Attrs: nounwind readnone
declare <4 x double> @"texture@SPFFFFFFFF:SSSSSFSPSISSSISISFSFSS"(i8*, double, double, double, double, double, double, double, double, i8*, i8*, i8*, i8*, i8*, double, i8*, <4 x double>, i8*, i64, i8*, i8*, i8*, i64, i8*, i64, i8*, double, i8*, double, i8*, i8*) #1

; Function Attrs: nounwind
declare <4 x double> @"ocio_transform@PSSP"(i8*, i8*, <4 x double>) #0

; Function Attrs: nounwind
declare { double, double, double, double } @"assign@FFFFP"(<4 x double>) #0

; Function Attrs: nounwind
declare <4 x double> @"clamp@PPPP"(<4 x double>, <4 x double>, <4 x double>) #0

; Function Attrs: nounwind readnone
declare double @"div@FF"(double, double) #1

; Function Attrs: nounwind readnone
declare double @"neg@FF"(double) #1

; Function Attrs: nounwind readnone
declare double @"spline@F[SF[F[F"(i8**, double, double*, double*) #1

; Function Attrs: nounwind readnone
declare double @"smooth@FFFFF"(double, double, double, double) #1

; Function Attrs: nounwind readnone
declare double @"pow@FFF"(double, double) #1

; Function Attrs: nounwind readnone
declare <3 x double> @"set@VFFF"(double, double, double) #1

; Function Attrs: nounwind readnone
declare i64 @"neg@II"(i64) #1

; Function Attrs: nounwind
declare i64 @"setattrib@IISSIIFS"(i64, i8*, i8*, i64, i64, double, i8*) #0

; Function Attrs: nounwind
declare <3 x double> @"set@VP"(<4 x double>) #0

; Function Attrs: nounwind readnone
declare double @"getcomp@FPI"(<4 x double>, i64) #1

; Function Attrs: nounwind
declare <3 x double> @"normalize@VV"(<3 x double>) #0

; Function Attrs: nounwind
declare double @"fit@FFFFFF"(double, double, double, double, double) #0

; Function Attrs: nounwind
declare i64 @"setattrib@IISSIIVS"(i64, i8*, i8*, i64, i64, <3 x double>, i8*) #0

declare <3 x double> @"_export@VSV"(i8*, <3 x double>)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @obj_PDG_INST_Pointcloud_attribfrommap1_calculate_color_from_map(double 1.000000e+00, i64 0, <3 x double> zeroinitializer, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @0, i64 0, i64 0), <2 x double> zeroinitializer, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @2, i64 0, i64 0), double 1.000000e+00, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @3, i64 0, i64 0), <3 x double> zeroinitializer, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @0, i64 0, i64 0), double 1.000000e+00, i64 0, double 0.000000e+00, double 1.000000e+00, i64 0, <4 x double> zeroinitializer, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @5, i64 0, i64 0), double* getelementptr inbounds ([2 x double], [2 x double]* @6, i64 0, i64 0), double* getelementptr inbounds ([2 x double], [2 x double]* @6, i64 0, i64 0), i64 0, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @7, i64 0, i64 0), i64 1, <3 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>)
  ret void
}

attributes #0 = { nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { alwaysinline }
attributes #3 = { nounwind readonly }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"19.0.498"}
!2 = !{!"64"}

;_code_end
