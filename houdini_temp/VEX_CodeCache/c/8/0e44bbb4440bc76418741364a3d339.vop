;_name	/obj/sphere1/vellumsolver1/dopnet1/vellumsolver1/check_topology_for_coloring/geometryvop1
; ModuleID = 'obj_sphere1_vellumsolver1_dopnet1_vellumsolver1_check_topology_for_coloring_geometryvop1'
source_filename = "obj_sphere1_vellumsolver1_dopnet1_vellumsolver1_check_topology_for_coloring_geometryvop1"

@0 = private constant [5 x i8] c"meta\00"
@1 = private constant [9 x i8] c"topology\00"
@2 = private constant [14 x i8] c"primitivelist\00"
@3 = private constant [6 x i8] c"point\00"
@4 = private constant [3 x i8] c"id\00"
@5 = private constant [5 x i8] c"weld\00"
@6 = private constant [11 x i8] c"branchweld\00"
@7 = private constant [16 x i8] c"coloredtopology\00"
@8 = private constant [6 x i8] c"sizes\00"
@9 = private constant [8 x i8] c"offsets\00"
@10 = private constant [14 x i8] c"needscoloring\00"

; Function Attrs: alwaysinline nounwind
define private i64 @"compareIntArrays@I[I[I"(i64** %a, i64** %b) #0 {
__llvm_entry:
  %a1 = load i64*, i64** %a
  %return = call i64 @"len@I[I"(i64* %a1)
  %b2 = load i64*, i64** %b
  %return3 = call i64 @"len@I[I"(i64* %b2)
  %return4 = call i64 @"ne@III"(i64 %return, i64 %return3)
  %0 = icmp ne i64 %return4, 0
  br i1 %0, label %true, label %end

true:                                             ; preds = %body, %cond, %__llvm_entry
  %merge = phi i64 [ 0, %__llvm_entry ], [ 1, %cond ], [ 0, %body ]
  ret i64 %merge

end:                                              ; preds = %__llvm_entry
  br label %cond

cond:                                             ; preds = %end20, %end
  %idx.0 = phi i64 [ 0, %end ], [ %output, %end20 ]
  %return9 = call i64 @"lt@III"(i64 %idx.0, i64 %return)
  %1 = icmp ne i64 %return9, 0
  br i1 %1, label %body, label %true

body:                                             ; preds = %cond
  %a11 = load i64*, i64** %a
  %return13 = call i64 @"getcomp@I[II"(i64* %a11, i64 %idx.0)
  %b15 = load i64*, i64** %b
  %return17 = call i64 @"getcomp@I[II"(i64* %b15, i64 %idx.0)
  %return18 = call i64 @"ne@III"(i64 %return13, i64 %return17)
  %2 = icmp ne i64 %return18, 0
  br i1 %2, label %true, label %end20

end20:                                            ; preds = %body
  %output = add i64 %idx.0, 1
  br label %cond
}

; Function Attrs: nounwind readnone
declare i64 @"len@I[I"(i64*) #1

; Function Attrs: nounwind readnone
declare i64 @"ne@III"(i64, i64) #1

; Function Attrs: nounwind readnone
declare i64 @"lt@III"(i64, i64) #1

; Function Attrs: nounwind readnone
declare i64 @"getcomp@I[II"(i64*, i64) #1

; Function Attrs: alwaysinline nounwind
define private i64* @"calcConstraintTopology@[III"(i64* %constraintgeo, i64* %pointgeo) #0 {
__llvm_entry:
  %constraintgeo1 = load i64, i64* %constraintgeo
  %return = call i64* @"attribdataid@[IISS"(i64 %constraintgeo1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @1, i64 0, i64 0))
  %constraintgeo3 = load i64, i64* %constraintgeo
  %return4 = call i64* @"attribdataid@[IISS"(i64 %constraintgeo3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @2, i64 0, i64 0))
  %output = call i64* @"append@[I[I"(i64* %return, i64* %return4)
  %pointgeo6 = load i64, i64* %pointgeo
  %return7 = call i64* @"attribdataid@[IISS"(i64 %pointgeo6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @3, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @4, i64 0, i64 0))
  %output8 = call i64* @"append@[I[I"(i64* %output, i64* %return7)
  %pointgeo10 = load i64, i64* %pointgeo
  %return11 = call i64* @"attribdataid@[IISS"(i64 %pointgeo10, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @5, i64 0, i64 0))
  %output12 = call i64* @"append@[I[I"(i64* %output8, i64* %return11)
  %pointgeo14 = load i64, i64* %pointgeo
  %return15 = call i64* @"attribdataid@[IISS"(i64 %pointgeo14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @3, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @6, i64 0, i64 0))
  %output16 = call i64* @"append@[I[I"(i64* %output12, i64* %return15)
  ret i64* %output16
}

; Function Attrs: nounwind
declare i64* @"attribdataid@[IISS"(i64, i8*, i8*) #2

; Function Attrs: nounwind
declare i64* @"append@[I[I"(i64*, i64*) #2

; Function Attrs: alwaysinline nounwind
define private void @_obj_sphere1_vellumsolver1_dopnet1_vellumsolver1_check_topology_for_coloring_geometryvop1_snippet1() #0 {
__llvm_entry:
  %0 = alloca i64
  %1 = alloca i64
  %2 = alloca i64*
  %3 = alloca i64*
  %return = call i64* @"detail@[IIS"(i64 1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @7, i64 0, i64 0))
  store i64 1, i64* %0
  store i64 2, i64* %1
  %calcConstraintTopology = call i64* @"calcConstraintTopology@[III"(i64* %0, i64* %1)
  store i64* %return, i64** %2
  store i64* %calcConstraintTopology, i64** %3
  %compareIntArrays = call i64 @"compareIntArrays@I[I[I"(i64** %2, i64** %3)
  %return3 = call i64 @"not@II"(i64 %compareIntArrays)
  %return4 = call i64 @"hasdetailattrib@IIS"(i64 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @8, i64 0, i64 0))
  %return5 = call i64 @"not@II"(i64 %return4)
  %return6 = call i64 @"or@III"(i64 %return3, i64 %return5)
  %return7 = call i64 @"hasdetailattrib@IIS"(i64 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @9, i64 0, i64 0))
  %return8 = call i64 @"not@II"(i64 %return7)
  %return9 = call i64 @"or@III"(i64 %return6, i64 %return8)
  %4 = icmp ne i64 %return9, 0
  br i1 %4, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %return10 = call i64 @"geoself@I"()
  %return12 = call i64 @"adddetailattrib@IISI"(i64 %return10, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @10, i64 0, i64 0), i64 1)
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  ret void
}

; Function Attrs: nounwind
declare i64* @"detail@[IIS"(i64, i8*) #2

; Function Attrs: nounwind readnone
declare i64 @"not@II"(i64) #1

; Function Attrs: nounwind
declare i64 @"hasdetailattrib@IIS"(i64, i8*) #2

; Function Attrs: nounwind readnone
declare i64 @"or@III"(i64, i64) #1

; Function Attrs: nounwind
declare i64 @"geoself@I"() #2

; Function Attrs: nounwind
declare i64 @"adddetailattrib@IISI"(i64, i8*, i64) #2

; Function Attrs: nounwind
define void @obj_sphere1_vellumsolver1_dopnet1_vellumsolver1_check_topology_for_coloring_geometryvop1() #2 {
__llvm_entry:
  call void @_obj_sphere1_vellumsolver1_dopnet1_vellumsolver1_check_topology_for_coloring_geometryvop1_snippet1()
  ret void
}

define void @__shader_default_arguments() {
__llvm_entry:
  call void @obj_sphere1_vellumsolver1_dopnet1_vellumsolver1_check_topology_for_coloring_geometryvop1()
  ret void
}

attributes #0 = { alwaysinline nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"19.0.498"}
!2 = !{!"64"}

;_code_end
