;_name	/obj/geo1/MOPs_Move_Along_Spline/MOPs_Extract_Attributes/do_extraction_points/attribvop1
; ModuleID = 'obj_geo1_MOPs_Move_Along_Spline_MOPs_Extract_Attributes_do_extraction_points_attribvop1'

@0 = private constant [9 x i8] c"typename\00"
@1 = private constant [6 x i8] c"scale\00"
@2 = private constant [7 x i8] c"pscale\00"
@3 = private constant [3 x i8] c"up\00"
@4 = private constant [7 x i8] c"orient\00"
@5 = private constant [17 x i8] c"scaleinheritance\00"
@6 = private constant [10 x i8] c"transform\00"
@ptnum = external global i64
@scale = external global <3 x double>
@pscale = external global double
@up = external global <3 x double>
@orient = external global <4 x double>
@N = external global <3 x double>
@7 = private constant [6 x i8] c"ptnum\00"
@8 = private constant [2 x i8] c"N\00"

define private void @"_obj_geo1_MOPs_Move_Along_Spline_MOPs_Extract_Attributes_do_extraction_points_attribvop1_snippet1@IVFVPV"(i64* %_bound_ptnum, <3 x double>* %_bound_scale, double* %_bound_pscale, <3 x double>* %_bound_up, <4 x double>* %_bound_orient, <3 x double>* %_bound_N) nounwind alwaysinline {
__llvm_entry:
  %_bound_ptnum1 = load i64* %_bound_ptnum
  %return = call i8* @"primintrinsic@SISI"(i64 0, i8* getelementptr inbounds ([9 x i8]* @0, i64 0, i64 0), i64 %_bound_ptnum1)
  %return2 = call i64 @"haspointattrib@IIS"(i64 0, i8* getelementptr inbounds ([6 x i8]* @1, i64 0, i64 0))
  %return3 = call i64 @"not@II"(i64 %return2)
  %0 = icmp ne i64 %return3, 0
  br i1 %0, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %cast = call <3 x double> @"set@VI"(i64 1)
  store <3 x double> %cast, <3 x double>* %_bound_scale
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  %return4 = call i64 @"haspointattrib@IIS"(i64 0, i8* getelementptr inbounds ([7 x i8]* @2, i64 0, i64 0))
  %return5 = call i64 @"not@II"(i64 %return4)
  %1 = icmp ne i64 %return5, 0
  br i1 %1, label %true6, label %end7

true6:                                            ; preds = %end
  store double 1.000000e+00, double* %_bound_pscale
  br label %end7

end7:                                             ; preds = %true6, %end
  %return8 = call i64 @"haspointattrib@IIS"(i64 0, i8* getelementptr inbounds ([3 x i8]* @3, i64 0, i64 0))
  %return9 = call i64 @"not@II"(i64 %return8)
  %2 = icmp ne i64 %return9, 0
  br i1 %2, label %true10, label %end11

true10:                                           ; preds = %end7
  store <3 x double> <double 0.000000e+00, double 1.000000e+00, double 0.000000e+00>, <3 x double>* %_bound_up
  br label %end11

end11:                                            ; preds = %true10, %end7
  %return12 = call i64 @"haspointattrib@IIS"(i64 0, i8* getelementptr inbounds ([7 x i8]* @4, i64 0, i64 0))
  %return13 = call i64 @"not@II"(i64 %return12)
  %3 = icmp ne i64 %return13, 0
  br i1 %3, label %true14, label %false

true14:                                           ; preds = %end11
  %return16 = call i64 @"haspointattrib@IIS"(i64 0, i8* getelementptr inbounds ([17 x i8]* @5, i64 0, i64 0))
  %4 = icmp ne i64 %return16, 0
  br i1 %4, label %true17, label %false18

false:                                            ; preds = %end11
  %_bound_orient32 = load <4 x double>* %_bound_orient
  %return33 = call <9 x double> @"qconvert@3P"(<4 x double> %_bound_orient32)
  %output = call <3 x double> @"mul@V3"(<3 x double> <double 0.000000e+00, double 0.000000e+00, double 1.000000e+00>, <9 x double> %return33)
  store <3 x double> %output, <3 x double>* %_bound_N
  %output36 = call <3 x double> @"mul@V3"(<3 x double> <double 0.000000e+00, double 1.000000e+00, double 0.000000e+00>, <9 x double> %return33)
  store <3 x double> %output36, <3 x double>* %_bound_up
  br label %end15

end15:                                            ; preds = %true17, %false18, %false
  ret void

true17:                                           ; preds = %true14
  %_bound_ptnum20 = load i64* %_bound_ptnum
  %return21 = call <9 x double> @"point@3ISI"(i64 0, i8* getelementptr inbounds ([10 x i8]* @6, i64 0, i64 0), i64 %_bound_ptnum20)
  %return23 = call <4 x double> @"quaternion@P3"(<9 x double> %return21)
  store <4 x double> %return23, <4 x double>* %_bound_orient
  %return25 = call <3 x double> @"qrotate@VPV"(<4 x double> %return23, <3 x double> <double 0.000000e+00, double 0.000000e+00, double 1.000000e+00>)
  store <3 x double> %return25, <3 x double>* %_bound_N
  %_bound_orient26 = load <4 x double>* %_bound_orient
  %return27 = call <3 x double> @"qrotate@VPV"(<4 x double> %_bound_orient26, <3 x double> <double 0.000000e+00, double 1.000000e+00, double 0.000000e+00>)
  store <3 x double> %return27, <3 x double>* %_bound_up
  br label %end15

false18:                                          ; preds = %true14
  %_bound_N28 = load <3 x double>* %_bound_N
  %_bound_up29 = load <3 x double>* %_bound_up
  %return30 = call <9 x double> @"maketransform@3VV"(<3 x double> %_bound_N28, <3 x double> %_bound_up29)
  %return31 = call <4 x double> @"quaternion@P3"(<9 x double> %return30)
  store <4 x double> %return31, <4 x double>* %_bound_orient
  br label %end15
}

declare i8* @"primintrinsic@SISI"(i64, i8*, i64) nounwind

declare i64 @"haspointattrib@IIS"(i64, i8*) nounwind

declare i64 @"not@II"(i64) nounwind readnone

declare <3 x double> @"set@VI"(i64) nounwind readnone

declare <9 x double> @"point@3ISI"(i64, i8*, i64) nounwind

declare <4 x double> @"quaternion@P3"(<9 x double>) nounwind readnone

declare <3 x double> @"qrotate@VPV"(<4 x double>, <3 x double>) nounwind readnone

declare <9 x double> @"maketransform@3VV"(<3 x double>, <3 x double>) nounwind readnone

declare <9 x double> @"qconvert@3P"(<4 x double>) nounwind readnone

declare <3 x double> @"mul@V3"(<3 x double>, <9 x double>) nounwind

define void @obj_geo1_MOPs_Move_Along_Spline_MOPs_Extract_Attributes_do_extraction_points_attribvop1(i64 %ptnum, <3 x double> %scale, double %pscale, <3 x double> %up, <4 x double> %orient, <3 x double> %N) nounwind {
__llvm_entry:
  %"<scale>" = alloca <3 x double>
  %"<pscale>" = alloca double
  %"<up>" = alloca <3 x double>
  %"<orient>" = alloca <4 x double>
  %"<N>" = alloca <3 x double>
  %0 = alloca i64
  store <3 x double> %scale, <3 x double>* %"<scale>"
  store double %pscale, double* %"<pscale>"
  store <3 x double> %up, <3 x double>* %"<up>"
  store <4 x double> %orient, <4 x double>* %"<orient>"
  store <3 x double> %N, <3 x double>* %"<N>"
  store i64 %ptnum, i64* %0
  call void @"_obj_geo1_MOPs_Move_Along_Spline_MOPs_Extract_Attributes_do_extraction_points_attribvop1_snippet1@IVFVPV"(i64* %0, <3 x double>* %"<scale>", double* %"<pscale>", <3 x double>* %"<up>", <4 x double>* %"<orient>", <3 x double>* %"<N>")
  %gvalue = call i64 @"_export@ISI"(i8* getelementptr inbounds ([6 x i8]* @7, i64 0, i64 0), i64 %ptnum) nounwind readonly
  %evalue2 = load <3 x double>* %"<scale>"
  %gvalue3 = call <3 x double> @"_export@VSV"(i8* getelementptr inbounds ([6 x i8]* @1, i64 0, i64 0), <3 x double> %evalue2) nounwind readonly
  %evalue4 = load double* %"<pscale>"
  %gvalue5 = call double @"_export@FSF"(i8* getelementptr inbounds ([7 x i8]* @2, i64 0, i64 0), double %evalue4) nounwind readonly
  %evalue6 = load <3 x double>* %"<up>"
  %gvalue7 = call <3 x double> @"_export@VSV"(i8* getelementptr inbounds ([3 x i8]* @3, i64 0, i64 0), <3 x double> %evalue6) nounwind readonly
  %evalue8 = load <4 x double>* %"<orient>"
  %gvalue9 = call <4 x double> @"_export@PSP"(i8* getelementptr inbounds ([7 x i8]* @4, i64 0, i64 0), <4 x double> %evalue8) nounwind readonly
  %evalue10 = load <3 x double>* %"<N>"
  %gvalue11 = call <3 x double> @"_export@VSV"(i8* getelementptr inbounds ([2 x i8]* @8, i64 0, i64 0), <3 x double> %evalue10) nounwind readonly
  store i64 %gvalue, i64* @ptnum
  store <3 x double> %gvalue3, <3 x double>* @scale
  store double %gvalue5, double* @pscale
  store <3 x double> %gvalue7, <3 x double>* @up
  store <4 x double> %gvalue9, <4 x double>* @orient
  store <3 x double> %gvalue11, <3 x double>* @N
  ret void
}

declare i64 @"_export@ISI"(i8*, i64)

declare <3 x double> @"_export@VSV"(i8*, <3 x double>)

declare double @"_export@FSF"(i8*, double)

declare <4 x double> @"_export@PSP"(i8*, <4 x double>)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @obj_geo1_MOPs_Move_Along_Spline_MOPs_Extract_Attributes_do_extraction_points_attribvop1(i64 0, <3 x double> zeroinitializer, double 0.000000e+00, <3 x double> zeroinitializer, <4 x double> <double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 1.000000e+00>, <3 x double> zeroinitializer)
  ret void
}

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = metadata !{metadata !"cvex"}
!1 = metadata !{metadata !"18.5.633"}
!2 = metadata !{metadata !"64"}

;_code_end
