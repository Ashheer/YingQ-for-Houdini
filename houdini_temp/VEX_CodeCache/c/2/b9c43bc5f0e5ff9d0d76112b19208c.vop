;_name	/obj/geo1/move_to_center/attribvop1
; ModuleID = 'obj_geo1_move_to_center_attribvop1'

@0 = private constant [2 x i8] c"P\00"
@P = external global <3 x double>

define private void @"_obj_geo1_move_to_center_attribvop1_snippet1@V"(<3 x double>* %_bound_P) nounwind alwaysinline {
__llvm_entry:
  %return = call <3 x double> @"point@VISI"(i64 0, i8* getelementptr inbounds ([2 x i8]* @0, i64 0, i64 0), i64 0)
  %return1 = call <3 x double> @"point@VISI"(i64 0, i8* getelementptr inbounds ([2 x i8]* @0, i64 0, i64 0), i64 1)
  %output = call <3 x double> @"sub@VV"(<3 x double> %return, <3 x double> %return1)
  %cast = call <3 x double> @"set@VF"(double 5.000000e-01)
  %output4 = call <3 x double> @"mul@VV"(<3 x double> %output, <3 x double> %cast)
  %_bound_P5 = load <3 x double>* %_bound_P
  %output7 = call <3 x double> @"add@VV"(<3 x double> %_bound_P5, <3 x double> %output4)
  store <3 x double> %output7, <3 x double>* %_bound_P
  ret void
}

declare <3 x double> @"point@VISI"(i64, i8*, i64) nounwind

declare <3 x double> @"sub@VV"(<3 x double>, <3 x double>) nounwind readnone

declare <3 x double> @"set@VF"(double) nounwind readnone

declare <3 x double> @"mul@VV"(<3 x double>, <3 x double>) nounwind readnone

declare <3 x double> @"add@VV"(<3 x double>, <3 x double>) nounwind readnone

define void @obj_geo1_move_to_center_attribvop1(<3 x double> %P) nounwind {
__llvm_entry:
  %"<P>" = alloca <3 x double>
  store <3 x double> %P, <3 x double>* %"<P>"
  call void @"_obj_geo1_move_to_center_attribvop1_snippet1@V"(<3 x double>* %"<P>")
  %evalue = load <3 x double>* %"<P>"
  %gvalue = call <3 x double> @"_export@VSV"(i8* getelementptr inbounds ([2 x i8]* @0, i64 0, i64 0), <3 x double> %evalue) nounwind readonly
  store <3 x double> %gvalue, <3 x double>* @P
  ret void
}

declare <3 x double> @"_export@VSV"(i8*, <3 x double>)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @obj_geo1_move_to_center_attribvop1(<3 x double> zeroinitializer)
  ret void
}

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = metadata !{metadata !"cvex"}
!1 = metadata !{metadata !"18.5.633"}
!2 = metadata !{metadata !"64"}

;_code_end
