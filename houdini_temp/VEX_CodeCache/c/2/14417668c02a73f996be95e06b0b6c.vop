;_name	/obj/geo1/cop2net1/vopcop2gen1
; ModuleID = 'obj_geo1_cop2net1_vopcop2gen1'
source_filename = "obj_geo1_cop2net1_vopcop2gen1"

@XRES = external global i64
@YRES = external global i64
@AR = external global double
@R = external global double
@G = external global double
@B = external global double
@A = external global double
@Cr = external global double
@Cg = external global double
@Cb = external global double
@C4 = external global double
@PNAME = external global i8*
@PL = external global i64
@NP = external global i64
@PS = external global i64
@AI = external global i64
@AS = external global i64
@I = external global i64
@NI = external global i64
@H = external global double
@S = external global double
@V = external global double
@X = external global double
@Y = external global double
@IX = external global i64
@IY = external global i64
@SF = external global i64
@EF = external global i64
@F = external global i64
@FR = external global i64
@TIME = external global double
@TINC = external global double
@PXSC = external global double
@0 = private constant [29 x i8] c"op:`opfullpath(chs(\22path\22))`\00"
@1 = private constant [5 x i8] c"file\00"
@2 = private constant [6 x i8] c"point\00"
@3 = private constant [7 x i8] c"vertex\00"
@4 = private constant [3 x i8] c"Cd\00"
@5 = private constant [6 x i8] c"Alpha\00"

; Function Attrs: nounwind
define void @obj_geo1_cop2net1_vopcop2gen1(i8* %geo) #0 {
__llvm_entry:
  %0 = load i64, i64* @IY
  %1 = load i64, i64* @IX
  %2 = load i64, i64* @YRES
  %3 = load i64, i64* @XRES
  %output = mul i64 %3, %2
  %output2 = sub i64 %3, %1
  %output4 = mul i64 %3, %0
  %output7 = add i64 %output2, %output4
  %output10 = sub i64 %output, %output7
  %return = call i64 @"eq@ISS"(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1, i64 0, i64 0))
  %4 = icmp ne i64 %return, 0
  br i1 %4, label %true, label %end

true:                                             ; preds = %__llvm_entry
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  %sourcefile.0 = phi i8* [ %geo, %true ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @1, i64 0, i64 0), %__llvm_entry ]
  %return13 = call i64 @"eq@ISS"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @2, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @3, i64 0, i64 0))
  %5 = icmp ne i64 %return13, 0
  br i1 %5, label %true14, label %end15

true14:                                           ; preds = %end
  %return18 = call i64 @"vertexindex@ISII"(i8* %sourcefile.0, i64 %output10, i64 0)
  br label %end15

end15:                                            ; preds = %true14, %end
  %elemidx.0 = phi i64 [ %return18, %true14 ], [ %output10, %end ]
  %return21 = call { <3 x double>, i64 } @"getattrib@VSSSII"(i8* %sourcefile.0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @2, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @4, i64 0, i64 0), i64 %elemidx.0)
  %return22 = extractvalue { <3 x double>, i64 } %return21, 0
  %output23 = extractvalue { <3 x double>, i64 } %return21, 1
  %return25 = call i64 @"not@II"(i64 %output23)
  %6 = icmp ne i64 %return25, 0
  %.return22 = select i1 %6, <3 x double> zeroinitializer, <3 x double> %return22
  %output29 = call { double, double, double } @"assign@FFFV"(<3 x double> %.return22)
  %output30 = extractvalue { double, double, double } %output29, 0
  %output31 = extractvalue { double, double, double } %output29, 1
  %output32 = extractvalue { double, double, double } %output29, 2
  br i1 %4, label %true34, label %end35

true34:                                           ; preds = %end15
  br label %end35

end35:                                            ; preds = %true34, %end15
  %sourcefile1.0 = phi i8* [ %geo, %true34 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @1, i64 0, i64 0), %end15 ]
  br i1 %5, label %true39, label %end40

true39:                                           ; preds = %end35
  %return43 = call i64 @"vertexindex@ISII"(i8* %sourcefile1.0, i64 %output10, i64 0)
  br label %end40

end40:                                            ; preds = %true39, %end35
  %elemidx1.0 = phi i64 [ %return43, %true39 ], [ %output10, %end35 ]
  %return46 = call { double, i64 } @"getattrib@FSSSII"(i8* %sourcefile1.0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @2, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @5, i64 0, i64 0), i64 %elemidx1.0)
  %return47 = extractvalue { double, i64 } %return46, 0
  %output48 = extractvalue { double, i64 } %return46, 1
  %return50 = call i64 @"not@II"(i64 %output48)
  %7 = icmp ne i64 %return50, 0
  %.return47 = select i1 %7, double 0.000000e+00, double %return47
  store double %output30, double* @R
  store double %output31, double* @G
  store double %output32, double* @B
  store double %.return47, double* @A
  ret void
}

; Function Attrs: nounwind readnone
declare i64 @"eq@ISS"(i8*, i8*) #1

; Function Attrs: nounwind readnone
declare i64 @"vertexindex@ISII"(i8*, i64, i64) #1

; Function Attrs: nounwind
declare { <3 x double>, i64 } @"getattrib@VSSSII"(i8*, i8*, i8*, i64) #0

; Function Attrs: nounwind readnone
declare i64 @"not@II"(i64) #1

; Function Attrs: nounwind
declare { double, double, double } @"assign@FFFV"(<3 x double>) #0

; Function Attrs: nounwind
declare { double, i64 } @"getattrib@FSSSII"(i8*, i8*, i8*, i64) #0

define void @__shader_default_arguments() {
__llvm_entry:
  call void @obj_geo1_cop2net1_vopcop2gen1(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @0, i64 0, i64 0))
  ret void
}

attributes #0 = { nounwind }
attributes #1 = { nounwind readnone }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cop2"}
!1 = !{!"19.0.498"}
!2 = !{!"64"}

;_code_end
