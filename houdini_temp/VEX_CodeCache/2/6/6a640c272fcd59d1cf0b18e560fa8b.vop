;_name	/obj/STUD_TOOL_FoundationBuilding/buildingAsset/FloorPlane_Reverseprimnormal_calculatewidth/checkIfReversed/attribvop1
; ModuleID = 'obj_STUD_TOOL_FoundationBuilding_buildingAsset_FloorPlane_Reverseprimnormal_calculatewidth_checkIfReversed_attribvop1'
source_filename = "obj_STUD_TOOL_FoundationBuilding_buildingAsset_FloorPlane_Reverseprimnormal_calculatewidth_checkIfReversed_attribvop1"

@group_flip = external global i64
@0 = private constant [11 x i8] c"group_flip\00"

; Function Attrs: alwaysinline nounwind
define private void @"_obj_STUD_TOOL_FoundationBuilding_buildingAsset_FloorPlane_Reverseprimnormal_calculatewidth_checkIfReversed_attribvop1_snippet1@IV"(i64* %_bound_group_flip, <3 x double>* %_bound_N) #0 {
__llvm_entry:
  %_bound_N1 = load <3 x double>, <3 x double>* %_bound_N
  %return = call double @"getcomp@FVI"(<3 x double> %_bound_N1, i64 1)
  %return2 = fcmp olt double %return, 0.000000e+00
  %return3 = zext i1 %return2 to i64
  store i64 %return3, i64* %_bound_group_flip
  ret void
}

; Function Attrs: nounwind readnone
declare double @"getcomp@FVI"(<3 x double>, i64) #1

; Function Attrs: nounwind
define void @obj_STUD_TOOL_FoundationBuilding_buildingAsset_FloorPlane_Reverseprimnormal_calculatewidth_checkIfReversed_attribvop1(i64 %group_flip, <3 x double> %N) #2 {
__llvm_entry:
  %0 = alloca <3 x double>
  %"<group_flip>" = alloca i64
  store i64 %group_flip, i64* %"<group_flip>"
  store <3 x double> %N, <3 x double>* %0
  call void @"_obj_STUD_TOOL_FoundationBuilding_buildingAsset_FloorPlane_Reverseprimnormal_calculatewidth_checkIfReversed_attribvop1_snippet1@IV"(i64* %"<group_flip>", <3 x double>* %0)
  %evalue = load i64, i64* %"<group_flip>"
  %gvalue = call i64 @"_export@ISI"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @0, i64 0, i64 0), i64 %evalue) #3
  store i64 %gvalue, i64* @group_flip
  ret void
}

declare i64 @"_export@ISI"(i8*, i64)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @obj_STUD_TOOL_FoundationBuilding_buildingAsset_FloorPlane_Reverseprimnormal_calculatewidth_checkIfReversed_attribvop1(i64 0, <3 x double> zeroinitializer)
  ret void
}

attributes #0 = { alwaysinline nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind }
attributes #3 = { nounwind readonly }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"19.0.498"}
!2 = !{!"64"}

;_code_end
