;_name	<vexpression>
; ModuleID = '__vex_snippet'
source_filename = "__vex_snippet"

@0 = private constant [2 x i8] c".\00"
@1 = private constant [1 x i8] zeroinitializer
@preview_materialName = external global i8*
@preview_mat = external global i8*
@2 = private constant [21 x i8] c"preview_materialName\00"
@3 = private constant [12 x i8] c"preview_mat\00"

; Function Attrs: alwaysinline nounwind
define private void @"__vex_snippet_snippet@SS"(i8** %_bound_preview_materialName, i8** %_bound_preview_mat) #0 {
__llvm_entry:
  %_bound_preview_materialName1 = load i8*, i8** %_bound_preview_materialName
  %return = call i8** @"split@[SSS"(i8* %_bound_preview_materialName1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @0, i64 0, i64 0))
  %return3 = call i8* @"getcomp@S[SI"(i8** %return, i64 0)
  store i8* %return3, i8** %_bound_preview_mat
  ret void
}

; Function Attrs: nounwind readnone
declare i8** @"split@[SSS"(i8*, i8*) #1

; Function Attrs: nounwind readnone
declare i8* @"getcomp@S[SI"(i8**, i64) #1

; Function Attrs: nounwind
define void @__vex_snippet(i8* %preview_materialName, i8* %preview_mat) #2 {
__llvm_entry:
  %"<preview_mat>" = alloca i8*
  %0 = alloca i8*
  store i8* %preview_mat, i8** %"<preview_mat>"
  store i8* %preview_materialName, i8** %0
  call void @"__vex_snippet_snippet@SS"(i8** %0, i8** %"<preview_mat>")
  %gvalue = call i8* @"_export@SSS"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @2, i64 0, i64 0), i8* %preview_materialName) #3
  %evalue2 = load i8*, i8** %"<preview_mat>"
  %gvalue3 = call i8* @"_export@SSS"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i64 0, i64 0), i8* %evalue2) #3
  store i8* %gvalue, i8** @preview_materialName
  store i8* %gvalue3, i8** @preview_mat
  ret void
}

declare i8* @"_export@SSS"(i8*, i8*)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @__vex_snippet(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @1, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @1, i64 0, i64 0))
  ret void
}

attributes #0 = { alwaysinline nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind }
attributes #3 = { nounwind readonly }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"19.0.498"}
!2 = !{!"64"}

;_code_end
