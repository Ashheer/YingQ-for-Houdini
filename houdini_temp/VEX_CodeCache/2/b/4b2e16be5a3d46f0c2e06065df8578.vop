;_name	/obj/geo1/MOPs_Move_Along_Spline/compute_initial_goals/attribvop1
; ModuleID = 'obj_geo1_MOPs_Move_Along_Spline_compute_initial_goals_attribvop1'

@0 = private constant [5 x i8] c"mode\00"
@1 = private constant [12 x i8] c"search_dist\00"
@2 = private constant [3 x i8] c"%d\00"
@3 = private constant [2 x i8] c"P\00"
@4 = private constant [12 x i8] c"attach_attr\00"
@5 = private constant [8 x i8] c"__maxid\00"
@6 = private constant [15 x i8] c"mops_PT_normal\00"
@7 = private constant [16 x i8] c"mops_PT_tangent\00"
@__goalu = external global double
@__curvenum = external global i64
@id = external global i64
@ptnum = external global i64
@__orig_offset = external global <3 x double>
@__orig_orient = external global <4 x double>
@__delta_orient = external global <4 x double>
@orient = external global <4 x double>
@8 = private constant [8 x i8] c"__goalu\00"
@9 = private constant [11 x i8] c"__curvenum\00"
@10 = private constant [3 x i8] c"id\00"
@11 = private constant [6 x i8] c"ptnum\00"
@12 = private constant [14 x i8] c"__orig_offset\00"
@13 = private constant [14 x i8] c"__orig_orient\00"
@14 = private constant [15 x i8] c"__delta_orient\00"
@15 = private constant [7 x i8] c"orient\00"

define private void @"_obj_geo1_MOPs_Move_Along_Spline_compute_initial_goals_attribvop1_snippet1@FIIIVPPP"(double* %_bound___goalu, i64* %_bound___curvenum, i64* %_bound_id, i64* %_bound_ptnum, <3 x double>* %_bound___orig_offset, <4 x double>* %_bound___orig_orient, <4 x double>* %_bound___delta_orient, <4 x double>* %_bound_orient) nounwind alwaysinline {
__llvm_entry:
  %return = call i64 @"chi@IS"(i8* getelementptr inbounds ([5 x i8]* @0, i64 0, i64 0))
  %_bound___goalu1 = load double* %_bound___goalu
  %return2 = call double @"ch@FS"(i8* getelementptr inbounds ([12 x i8]* @1, i64 0, i64 0))
  %_bound___curvenum3 = load i64* %_bound___curvenum
  %return4 = call i8* @"sprintf@SS:I"(i8* getelementptr inbounds ([3 x i8]* @2, i64 0, i64 0), i64 %_bound___curvenum3)
  %_bound_id5 = load i64* %_bound_id
  %return6 = call <3 x double> @"point@VISI"(i64 2, i8* getelementptr inbounds ([2 x i8]* @3, i64 0, i64 0), i64 %_bound_id5)
  %return10 = call { double, i64, <3 x double> } @"xyzdist@FISVIVF"(i64 1, i8* %return4, <3 x double> %return6, double %return2)
  %output12 = extractvalue { double, i64, <3 x double> } %return10, 2
  %return14 = call i64 @"eq@III"(i64 %return, i64 0)
  %0 = icmp ne i64 %return14, 0
  br i1 %0, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %return16 = call double @"getcomp@FVI"(<3 x double> %output12, i64 0)
  br label %end

false:                                            ; preds = %__llvm_entry
  %return18 = call i64 @"eq@III"(i64 %return, i64 1)
  %1 = icmp ne i64 %return18, 0
  br i1 %1, label %true19, label %false20

end:                                              ; preds = %false20, %true28, %true19, %true
  %goalu.0 = phi double [ %return16, %true ], [ %return25, %true19 ], [ %output32, %true28 ], [ %_bound___goalu1, %false20 ]
  %return34 = call double @"clamp@FFFF"(double %goalu.0, double 0.000000e+00, double 9.999999e-01)
  store double %return34, double* %_bound___goalu
  %_bound___curvenum35 = load i64* %_bound___curvenum
  %cast37 = call <3 x double> @"set@VF"(double %goalu.0)
  %return38 = call <3 x double> @"primuv@VISIV"(i64 1, i8* getelementptr inbounds ([2 x i8]* @3, i64 0, i64 0), i64 %_bound___curvenum35, <3 x double> %cast37)
  %_bound___curvenum39 = load i64* %_bound___curvenum
  %return42 = call <3 x double> @"primuv@VISIV"(i64 1, i8* getelementptr inbounds ([15 x i8]* @6, i64 0, i64 0), i64 %_bound___curvenum39, <3 x double> %cast37)
  %return43 = call <3 x double> @"normalize@VV"(<3 x double> %return42)
  %_bound___curvenum44 = load i64* %_bound___curvenum
  %return47 = call <3 x double> @"primuv@VISIV"(i64 1, i8* getelementptr inbounds ([16 x i8]* @7, i64 0, i64 0), i64 %_bound___curvenum44, <3 x double> %cast37)
  %return48 = call <3 x double> @"normalize@VV"(<3 x double> %return47)
  %return51 = call <9 x double> @"maketransform@3VV"(<3 x double> %return48, <3 x double> %return43)
  %return52 = call <4 x double> @"quaternion@P3"(<9 x double> %return51)
  %output55 = call <3 x double> @"sub@VV"(<3 x double> %return6, <3 x double> %return38)
  store <3 x double> %output55, <3 x double>* %_bound___orig_offset
  store <4 x double> %return52, <4 x double>* %_bound___orig_orient
  %_bound_orient57 = load <4 x double>* %_bound_orient
  %return59 = call <4 x double> @"qinvert@PP"(<4 x double> %return52)
  %return60 = call <4 x double> @"qmultiply@PPP"(<4 x double> %_bound_orient57, <4 x double> %return59)
  store <4 x double> %return60, <4 x double>* %_bound___delta_orient
  ret void

true19:                                           ; preds = %false
  %return22 = call i8* @"chs@SS"(i8* getelementptr inbounds ([12 x i8]* @4, i64 0, i64 0))
  %_bound_ptnum24 = load i64* %_bound_ptnum
  %return25 = call double @"point@FISI"(i64 0, i8* %return22, i64 %_bound_ptnum24)
  br label %end

false20:                                          ; preds = %false
  %return27 = call i64 @"eq@III"(i64 %return, i64 2)
  %2 = icmp ne i64 %return27, 0
  br i1 %2, label %true28, label %end

true28:                                           ; preds = %false20
  %_bound_id30 = load i64* %_bound_id
  %cast = sitofp i64 %_bound_id30 to double
  %return31 = call double @"detail@FIS"(i64 0, i8* getelementptr inbounds ([8 x i8]* @5, i64 0, i64 0))
  %output32 = call double @"div@FF"(double %cast, double %return31)
  br label %end
}

declare i64 @"chi@IS"(i8*) nounwind readnone

declare double @"ch@FS"(i8*) nounwind readnone

declare i8* @"sprintf@SS:I"(i8*, i64) nounwind readnone

declare <3 x double> @"point@VISI"(i64, i8*, i64) nounwind

declare { double, i64, <3 x double> } @"xyzdist@FISVIVF"(i64, i8*, <3 x double>, double) nounwind

declare i64 @"eq@III"(i64, i64) nounwind readnone

declare double @"getcomp@FVI"(<3 x double>, i64) nounwind readnone

declare i8* @"chs@SS"(i8*) nounwind readnone

declare double @"point@FISI"(i64, i8*, i64) nounwind

declare double @"detail@FIS"(i64, i8*) nounwind

declare double @"div@FF"(double, double) nounwind readnone

declare double @"clamp@FFFF"(double, double, double) nounwind

declare <3 x double> @"set@VF"(double) nounwind readnone

declare <3 x double> @"primuv@VISIV"(i64, i8*, i64, <3 x double>) nounwind

declare <3 x double> @"normalize@VV"(<3 x double>) nounwind

declare <9 x double> @"maketransform@3VV"(<3 x double>, <3 x double>) nounwind readnone

declare <4 x double> @"quaternion@P3"(<9 x double>) nounwind readnone

declare <3 x double> @"sub@VV"(<3 x double>, <3 x double>) nounwind readnone

declare <4 x double> @"qinvert@PP"(<4 x double>) nounwind readnone

declare <4 x double> @"qmultiply@PPP"(<4 x double>, <4 x double>) nounwind readnone

define void @obj_geo1_MOPs_Move_Along_Spline_compute_initial_goals_attribvop1(double %__goalu, i64 %__curvenum, i64 %id, i64 %ptnum, <3 x double> %__orig_offset, <4 x double> %__orig_orient, <4 x double> %__delta_orient, <4 x double> %orient) nounwind {
__llvm_entry:
  %"<__orig_offset>" = alloca <3 x double>
  %"<__orig_orient>" = alloca <4 x double>
  %"<__delta_orient>" = alloca <4 x double>
  %0 = alloca i64
  %1 = alloca i64
  %2 = alloca i64
  %3 = alloca <4 x double>
  %"<__goalu>" = alloca double
  store double %__goalu, double* %"<__goalu>"
  store <3 x double> %__orig_offset, <3 x double>* %"<__orig_offset>"
  store <4 x double> %__orig_orient, <4 x double>* %"<__orig_orient>"
  store <4 x double> %__delta_orient, <4 x double>* %"<__delta_orient>"
  store i64 %__curvenum, i64* %0
  store i64 %id, i64* %1
  store i64 %ptnum, i64* %2
  store <4 x double> %orient, <4 x double>* %3
  call void @"_obj_geo1_MOPs_Move_Along_Spline_compute_initial_goals_attribvop1_snippet1@FIIIVPPP"(double* %"<__goalu>", i64* %0, i64* %1, i64* %2, <3 x double>* %"<__orig_offset>", <4 x double>* %"<__orig_orient>", <4 x double>* %"<__delta_orient>", <4 x double>* %3)
  %evalue = load double* %"<__goalu>"
  %gvalue = call double @"_export@FSF"(i8* getelementptr inbounds ([8 x i8]* @8, i64 0, i64 0), double %evalue) nounwind readonly
  %gvalue6 = call i64 @"_export@ISI"(i8* getelementptr inbounds ([11 x i8]* @9, i64 0, i64 0), i64 %__curvenum) nounwind readonly
  %gvalue8 = call i64 @"_export@ISI"(i8* getelementptr inbounds ([3 x i8]* @10, i64 0, i64 0), i64 %id) nounwind readonly
  %gvalue10 = call i64 @"_export@ISI"(i8* getelementptr inbounds ([6 x i8]* @11, i64 0, i64 0), i64 %ptnum) nounwind readonly
  %evalue11 = load <3 x double>* %"<__orig_offset>"
  %gvalue12 = call <3 x double> @"_export@VSV"(i8* getelementptr inbounds ([14 x i8]* @12, i64 0, i64 0), <3 x double> %evalue11) nounwind readonly
  %evalue13 = load <4 x double>* %"<__orig_orient>"
  %gvalue14 = call <4 x double> @"_export@PSP"(i8* getelementptr inbounds ([14 x i8]* @13, i64 0, i64 0), <4 x double> %evalue13) nounwind readonly
  %evalue15 = load <4 x double>* %"<__delta_orient>"
  %gvalue16 = call <4 x double> @"_export@PSP"(i8* getelementptr inbounds ([15 x i8]* @14, i64 0, i64 0), <4 x double> %evalue15) nounwind readonly
  %gvalue18 = call <4 x double> @"_export@PSP"(i8* getelementptr inbounds ([7 x i8]* @15, i64 0, i64 0), <4 x double> %orient) nounwind readonly
  store double %gvalue, double* @__goalu
  store i64 %gvalue6, i64* @__curvenum
  store i64 %gvalue8, i64* @id
  store i64 %gvalue10, i64* @ptnum
  store <3 x double> %gvalue12, <3 x double>* @__orig_offset
  store <4 x double> %gvalue14, <4 x double>* @__orig_orient
  store <4 x double> %gvalue16, <4 x double>* @__delta_orient
  store <4 x double> %gvalue18, <4 x double>* @orient
  ret void
}

declare double @"_export@FSF"(i8*, double)

declare i64 @"_export@ISI"(i8*, i64)

declare <3 x double> @"_export@VSV"(i8*, <3 x double>)

declare <4 x double> @"_export@PSP"(i8*, <4 x double>)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @obj_geo1_MOPs_Move_Along_Spline_compute_initial_goals_attribvop1(double 0.000000e+00, i64 0, i64 -1, i64 0, <3 x double> zeroinitializer, <4 x double> zeroinitializer, <4 x double> zeroinitializer, <4 x double> <double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 1.000000e+00>)
  ret void
}

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = metadata !{metadata !"cvex"}
!1 = metadata !{metadata !"18.5.633"}
!2 = metadata !{metadata !"64"}

;_code_end
