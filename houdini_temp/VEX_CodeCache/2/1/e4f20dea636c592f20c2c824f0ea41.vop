;_name	<vexpression>
; ModuleID = '__vex_snippet'
source_filename = "__vex_snippet"

@0 = private constant [6 x i8] c"point\00"
@1 = private constant [5 x i8] c"dist\00"
@2 = private constant [2 x i8] c"P\00"
@3 = private constant [11 x i8] c"blendverts\00"
@point = external global i64
@ptnum = external global i64
@4 = private constant [6 x i8] c"ptnum\00"

; Function Attrs: alwaysinline nounwind
define private void @"__vex_snippet_snippet@II"(i64* %_bound_point, i64* %_bound_ptnum) #0 {
__llvm_entry:
  %_bound_point1 = load i64, i64* %_bound_point
  %return = call i64 @"findattribvalcount@IISSI"(i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @0, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @0, i64 0, i64 0), i64 %_bound_point1)
  %return2 = call i64 @"neg@II"(i64 1)
  %cast3 = call <3 x double> @"set@VI"(i64 0)
  br label %cond

cond:                                             ; preds = %end17, %__llvm_entry
  %avgpos.0 = phi <3 x double> [ %cast3, %__llvm_entry ], [ %output24, %end17 ]
  %i.0 = phi i64 [ 0, %__llvm_entry ], [ %output27, %end17 ]
  %found.0 = phi i64 [ 0, %__llvm_entry ], [ %output, %end17 ]
  %perfectfound.0 = phi i64 [ %return2, %__llvm_entry ], [ %perfectfound.1, %end17 ]
  %return6 = call i64 @"lt@III"(i64 %i.0, i64 %return)
  %0 = icmp ne i64 %return6, 0
  br i1 %0, label %body, label %end

body:                                             ; preds = %cond
  %_bound_point7 = load i64, i64* %_bound_point
  %return9 = call i64 @"findattribval@IISSII"(i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @0, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @0, i64 0, i64 0), i64 %_bound_point7, i64 %i.0)
  %return11 = call double @"point@FISI"(i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1, i64 0, i64 0), i64 %return9)
  %return13 = call <3 x double> @"point@VISI"(i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i64 0, i64 0), i64 %return9)
  %return15 = fcmp oeq double %return11, 0.000000e+00
  br i1 %return15, label %true, label %end17

end:                                              ; preds = %cond
  %return29 = call i64 @"ge@III"(i64 %perfectfound.0, i64 0)
  %1 = icmp ne i64 %return29, 0
  br i1 %1, label %true30, label %end31

true:                                             ; preds = %body
  br label %end17

end17:                                            ; preds = %true, %body
  %perfectfound.1 = phi i64 [ %return9, %true ], [ %perfectfound.0, %body ]
  %output = add i64 %found.0, 1
  %output24 = call <3 x double> @"add@VV"(<3 x double> %avgpos.0, <3 x double> %return13)
  %output27 = add i64 %i.0, 1
  br label %cond

true30:                                           ; preds = %end
  %return33 = call i64* @"point@[IISI"(i64 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @3, i64 0, i64 0), i64 %perfectfound.0)
  %_bound_ptnum34 = load i64, i64* %_bound_ptnum
  %return36 = call i64 @"setpointattrib@IISI[I"(i64 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @3, i64 0, i64 0), i64 %_bound_ptnum34, i64* %return33)
  br label %end31

end31:                                            ; preds = %true30, %end
  ret void
}

; Function Attrs: nounwind
declare i64 @"findattribvalcount@IISSI"(i64, i8*, i8*, i64) #1

; Function Attrs: nounwind readnone
declare i64 @"neg@II"(i64) #2

; Function Attrs: nounwind readnone
declare <3 x double> @"set@VI"(i64) #2

; Function Attrs: nounwind readnone
declare i64 @"lt@III"(i64, i64) #2

; Function Attrs: nounwind
declare i64 @"findattribval@IISSII"(i64, i8*, i8*, i64, i64) #1

; Function Attrs: nounwind
declare double @"point@FISI"(i64, i8*, i64) #1

; Function Attrs: nounwind
declare <3 x double> @"point@VISI"(i64, i8*, i64) #1

; Function Attrs: nounwind readnone
declare <3 x double> @"add@VV"(<3 x double>, <3 x double>) #2

; Function Attrs: nounwind readnone
declare i64 @"ge@III"(i64, i64) #2

; Function Attrs: nounwind
declare i64* @"point@[IISI"(i64, i8*, i64) #1

; Function Attrs: nounwind
declare i64 @"setpointattrib@IISI[I"(i64, i8*, i64, i64*) #1

; Function Attrs: nounwind
define void @__vex_snippet(i64 %point, i64 %ptnum) #1 {
__llvm_entry:
  %0 = alloca i64
  %1 = alloca i64
  store i64 %point, i64* %0
  store i64 %ptnum, i64* %1
  call void @"__vex_snippet_snippet@II"(i64* %0, i64* %1)
  %gvalue = call i64 @"_export@ISI"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @0, i64 0, i64 0), i64 %point) #3
  %gvalue4 = call i64 @"_export@ISI"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @4, i64 0, i64 0), i64 %ptnum) #3
  store i64 %gvalue, i64* @point
  store i64 %gvalue4, i64* @ptnum
  ret void
}

declare i64 @"_export@ISI"(i8*, i64)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @__vex_snippet(i64 0, i64 0)
  ret void
}

attributes #0 = { alwaysinline nounwind }
attributes #1 = { nounwind }
attributes #2 = { nounwind readnone }
attributes #3 = { nounwind readonly }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"19.0.451"}
!2 = !{!"64"}

;_code_end
