;_name	<vexpression>
; ModuleID = '__vex_snippet'
source_filename = "__vex_snippet"

@0 = private constant [6 x i8] c"point\00"
@1 = private constant [3 x i8] c"id\00"
@2 = private constant [9 x i8] c"endframe\00"
@id = external global i64
@TimeInc = external global double
@Time = external global double
@age = external global double
@life = external global double
@ptnum = external global i64
@3 = private constant [8 x i8] c"TimeInc\00"
@4 = private constant [5 x i8] c"Time\00"
@5 = private constant [4 x i8] c"age\00"
@6 = private constant [5 x i8] c"life\00"
@7 = private constant [6 x i8] c"ptnum\00"

; Function Attrs: alwaysinline nounwind
define private void @"__vex_snippet_snippet@IFFFFI"(i64* %_bound_id, double* %_bound_TimeInc, double* %_bound_Time, double* %_bound_age, double* %_bound_life, i64* %_bound_ptnum) #0 {
__llvm_entry:
  %_bound_id1 = load i64, i64* %_bound_id
  %return = call i64 @"findattribval@IISSII"(i64 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @0, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1, i64 0, i64 0), i64 %_bound_id1, i64 0)
  %return3 = call i64 @"neg@II"(i64 1)
  %return4 = call i64 @"ne@III"(i64 %return, i64 %return3)
  %0 = icmp ne i64 %return4, 0
  br i1 %0, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %_bound_TimeInc5 = load double, double* %_bound_TimeInc
  %return6 = call double @"chf@FS"(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @2, i64 0, i64 0))
  %output = fsub double %return6, 1.000000e+00
  %output7 = fmul double %_bound_TimeInc5, %output
  %_bound_Time8 = load double, double* %_bound_Time
  %_bound_age9 = load double, double* %_bound_age
  %output10 = fsub double %_bound_Time8, %_bound_age9
  %output13 = fsub double %output7, %output10
  store double %output13, double* %_bound_life
  %return15 = fcmp ole double %output13, 0.000000e+00
  br i1 %return15, label %true17, label %end

end:                                              ; preds = %true, %true17, %__llvm_entry
  ret void

true17:                                           ; preds = %true
  %_bound_ptnum19 = load i64, i64* %_bound_ptnum
  %return20 = call i64 @"removepoint@III"(i64 0, i64 %_bound_ptnum19)
  br label %end
}

; Function Attrs: nounwind
declare i64 @"findattribval@IISSII"(i64, i8*, i8*, i64, i64) #1

; Function Attrs: nounwind readnone
declare i64 @"neg@II"(i64) #2

; Function Attrs: nounwind readnone
declare i64 @"ne@III"(i64, i64) #2

; Function Attrs: nounwind readnone
declare double @"chf@FS"(i8*) #2

; Function Attrs: nounwind
declare i64 @"removepoint@III"(i64, i64) #1

; Function Attrs: nounwind
define void @__vex_snippet(i64 %id, double %TimeInc, double %Time, double %age, double %life, i64 %ptnum) #1 {
__llvm_entry:
  %"<life>" = alloca double
  %0 = alloca i64
  %1 = alloca double
  %2 = alloca double
  %3 = alloca double
  %4 = alloca i64
  store double %life, double* %"<life>"
  store i64 %id, i64* %0
  store double %TimeInc, double* %1
  store double %Time, double* %2
  store double %age, double* %3
  store i64 %ptnum, i64* %4
  call void @"__vex_snippet_snippet@IFFFFI"(i64* %0, double* %1, double* %2, double* %3, double* %"<life>", i64* %4)
  %gvalue = call i64 @"_export@ISI"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1, i64 0, i64 0), i64 %id) #3
  %gvalue7 = call double @"_export@FSF"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @3, i64 0, i64 0), double %TimeInc) #3
  %gvalue9 = call double @"_export@FSF"(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @4, i64 0, i64 0), double %Time) #3
  %gvalue11 = call double @"_export@FSF"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @5, i64 0, i64 0), double %age) #3
  %evalue12 = load double, double* %"<life>"
  %gvalue13 = call double @"_export@FSF"(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @6, i64 0, i64 0), double %evalue12) #3
  %gvalue15 = call i64 @"_export@ISI"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @7, i64 0, i64 0), i64 %ptnum) #3
  store i64 %gvalue, i64* @id
  store double %gvalue7, double* @TimeInc
  store double %gvalue9, double* @Time
  store double %gvalue11, double* @age
  store double %gvalue13, double* @life
  store i64 %gvalue15, i64* @ptnum
  ret void
}

declare i64 @"_export@ISI"(i8*, i64)

declare double @"_export@FSF"(i8*, double)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @__vex_snippet(i64 -1, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, i64 0)
  ret void
}

attributes #0 = { alwaysinline nounwind }
attributes #1 = { nounwind }
attributes #2 = { nounwind readnone }
attributes #3 = { nounwind readonly }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"19.0.498"}
!2 = !{!"64"}

;_code_end
