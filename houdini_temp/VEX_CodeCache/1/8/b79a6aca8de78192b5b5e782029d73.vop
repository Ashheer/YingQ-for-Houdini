;_name	<vexpression>
; ModuleID = '__vex_snippet'
source_filename = "__vex_snippet"

@0 = private constant [12 x i8] c"floorheight\00"
@1 = private constant [15 x i8] c"topledgeheight\00"
@2 = private constant [9 x i8] c"topledge\00"
@3 = private constant [18 x i8] c"bottomledgeheight\00"
@4 = private constant [12 x i8] c"bottomledge\00"
@5 = private constant [16 x i8] c"topledgepattern\00"
@6 = private constant [19 x i8] c"bottomledgepattern\00"
@7 = private constant [8 x i8] c"pattern\00"
@8 = private constant [9 x i8] c"cornerid\00"
@9 = private constant [10 x i8] c"cornerid2\00"
@10 = private constant [16 x i8] c"corneridconcave\00"
@11 = private constant [17 x i8] c"corneridconcave2\00"
@12 = private constant [9 x i8] c"sideslop\00"
@13 = private constant [13 x i8] c"facadecorner\00"
@14 = private constant [15 x i8] c"topledgecorner\00"
@15 = private constant [18 x i8] c"bottomledgecorner\00"
@16 = private constant [14 x i8] c"ledgecornerid\00"
@17 = private constant [15 x i8] c"ledgecornerid2\00"
@18 = private constant [21 x i8] c"ledgecorneridconcave\00"
@19 = private constant [22 x i8] c"ledgecorneridconcave2\00"
@20 = private constant [15 x i8] c"ledgecornerid3\00"
@21 = private constant [15 x i8] c"ledgecornerid4\00"
@22 = private constant [22 x i8] c"ledgecorneridconcave3\00"
@23 = private constant [22 x i8] c"ledgecorneridconcave4\00"
@24 = private constant [1 x i8] zeroinitializer
@BuildingHeight = external global double
@FloorHeightAtIndex = external global double
@FloorTopLedgeHeightAtIndex = external global double
@FloorBottomLedgeHeightAtIndex = external global double
@TopLedgePatternAtIndex = external global i8*
@BottomLedgePatternAtIndex = external global i8*
@FacadePatternAtIndex = external global i8*
@ConvexCornerIDLAtIndex = external global i8*
@ConvexCornerIDRAtIndex = external global i8*
@ConcaveCornerIDLAtIndex = external global i8*
@ConcaveCornerIDRAtIndex = external global i8*
@SideSlopIDAtIndex = external global i8*
@FacadeCornerAtIndex = external global double
@TopLedgeCornerAtIndex = external global double
@BottomLedgeCornerAtIndex = external global double
@LedgeTConvexCornerIDLAtIndex = external global i8*
@LedgeTConvexCornerIDRAtIndex = external global i8*
@LedgeTConcaveCornerIDLAtIndex = external global i8*
@LedgeTConcaveCornerIDRAtIndex = external global i8*
@LedgeBConvexCornerIDLAtIndex = external global i8*
@LedgeBConvexCornerIDRAtIndex = external global i8*
@LedgeBConcaveCornerIDLAtIndex = external global i8*
@LedgeBConcaveCornerIDRAtIndex = external global i8*
@25 = private constant [15 x i8] c"BuildingHeight\00"
@26 = private constant [19 x i8] c"FloorHeightAtIndex\00"
@27 = private constant [27 x i8] c"FloorTopLedgeHeightAtIndex\00"
@28 = private constant [30 x i8] c"FloorBottomLedgeHeightAtIndex\00"
@29 = private constant [23 x i8] c"TopLedgePatternAtIndex\00"
@30 = private constant [26 x i8] c"BottomLedgePatternAtIndex\00"
@31 = private constant [21 x i8] c"FacadePatternAtIndex\00"
@32 = private constant [23 x i8] c"ConvexCornerIDLAtIndex\00"
@33 = private constant [23 x i8] c"ConvexCornerIDRAtIndex\00"
@34 = private constant [24 x i8] c"ConcaveCornerIDLAtIndex\00"
@35 = private constant [24 x i8] c"ConcaveCornerIDRAtIndex\00"
@36 = private constant [18 x i8] c"SideSlopIDAtIndex\00"
@37 = private constant [20 x i8] c"FacadeCornerAtIndex\00"
@38 = private constant [22 x i8] c"TopLedgeCornerAtIndex\00"
@39 = private constant [25 x i8] c"BottomLedgeCornerAtIndex\00"
@40 = private constant [29 x i8] c"LedgeTConvexCornerIDLAtIndex\00"
@41 = private constant [29 x i8] c"LedgeTConvexCornerIDRAtIndex\00"
@42 = private constant [30 x i8] c"LedgeTConcaveCornerIDLAtIndex\00"
@43 = private constant [30 x i8] c"LedgeTConcaveCornerIDRAtIndex\00"
@44 = private constant [29 x i8] c"LedgeBConvexCornerIDLAtIndex\00"
@45 = private constant [29 x i8] c"LedgeBConvexCornerIDRAtIndex\00"
@46 = private constant [30 x i8] c"LedgeBConcaveCornerIDLAtIndex\00"
@47 = private constant [30 x i8] c"LedgeBConcaveCornerIDRAtIndex\00"

; Function Attrs: alwaysinline nounwind
define private void @"__vex_snippet_snippet@FFFFSSSSSSSSFFFSSSSSSSS"(double* %_bound_BuildingHeight, double* %_bound_FloorHeightAtIndex, double* %_bound_FloorTopLedgeHeightAtIndex, double* %_bound_FloorBottomLedgeHeightAtIndex, i8** %_bound_TopLedgePatternAtIndex, i8** %_bound_BottomLedgePatternAtIndex, i8** %_bound_FacadePatternAtIndex, i8** %_bound_ConvexCornerIDLAtIndex, i8** %_bound_ConvexCornerIDRAtIndex, i8** %_bound_ConcaveCornerIDLAtIndex, i8** %_bound_ConcaveCornerIDRAtIndex, i8** %_bound_SideSlopIDAtIndex, double* %_bound_FacadeCornerAtIndex, double* %_bound_TopLedgeCornerAtIndex, double* %_bound_BottomLedgeCornerAtIndex, i8** %_bound_LedgeTConvexCornerIDLAtIndex, i8** %_bound_LedgeTConvexCornerIDRAtIndex, i8** %_bound_LedgeTConcaveCornerIDLAtIndex, i8** %_bound_LedgeTConcaveCornerIDRAtIndex, i8** %_bound_LedgeBConvexCornerIDLAtIndex, i8** %_bound_LedgeBConvexCornerIDRAtIndex, i8** %_bound_LedgeBConcaveCornerIDLAtIndex, i8** %_bound_LedgeBConcaveCornerIDRAtIndex) #0 {
__llvm_entry:
  %return = call <3 x double> @"getbbox_size@VI"(i64 0)
  %return1 = call double @"getcomp@FVI"(<3 x double> %return, i64 1)
  store double %return1, double* %_bound_BuildingHeight
  %return2 = call double @"chf@FS"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i64 0, i64 0))
  store double %return2, double* %_bound_FloorHeightAtIndex
  %return3 = call double @"chf@FS"(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @1, i64 0, i64 0))
  %return4 = call i64 @"chi@IS"(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @2, i64 0, i64 0))
  %cast = sitofp i64 %return4 to double
  %output = fmul double %return3, %cast
  store double %output, double* %_bound_FloorTopLedgeHeightAtIndex
  %return5 = call double @"chf@FS"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @3, i64 0, i64 0))
  %return6 = call i64 @"chi@IS"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i64 0, i64 0))
  %cast7 = sitofp i64 %return6 to double
  %output8 = fmul double %return5, %cast7
  store double %output8, double* %_bound_FloorBottomLedgeHeightAtIndex
  %return9 = call i8* @"chs@SS"(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @5, i64 0, i64 0))
  store i8* %return9, i8** %_bound_TopLedgePatternAtIndex
  %return10 = call i8* @"chs@SS"(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @6, i64 0, i64 0))
  store i8* %return10, i8** %_bound_BottomLedgePatternAtIndex
  %return11 = call i8* @"chs@SS"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @7, i64 0, i64 0))
  store i8* %return11, i8** %_bound_FacadePatternAtIndex
  %return12 = call i8* @"chs@SS"(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @8, i64 0, i64 0))
  store i8* %return12, i8** %_bound_ConvexCornerIDLAtIndex
  %return13 = call i8* @"chs@SS"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @9, i64 0, i64 0))
  store i8* %return13, i8** %_bound_ConvexCornerIDRAtIndex
  %return14 = call i8* @"chs@SS"(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @10, i64 0, i64 0))
  store i8* %return14, i8** %_bound_ConcaveCornerIDLAtIndex
  %return15 = call i8* @"chs@SS"(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @11, i64 0, i64 0))
  store i8* %return15, i8** %_bound_ConcaveCornerIDRAtIndex
  %return16 = call i8* @"chs@SS"(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @12, i64 0, i64 0))
  store i8* %return16, i8** %_bound_SideSlopIDAtIndex
  %return17 = call i64 @"chi@IS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @13, i64 0, i64 0))
  %cast18 = sitofp i64 %return17 to double
  store double %cast18, double* %_bound_FacadeCornerAtIndex
  %return19 = call i64 @"chi@IS"(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @14, i64 0, i64 0))
  %cast20 = sitofp i64 %return19 to double
  store double %cast20, double* %_bound_TopLedgeCornerAtIndex
  %return21 = call i64 @"chi@IS"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @15, i64 0, i64 0))
  %cast22 = sitofp i64 %return21 to double
  store double %cast22, double* %_bound_BottomLedgeCornerAtIndex
  %return23 = call i8* @"chs@SS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @16, i64 0, i64 0))
  store i8* %return23, i8** %_bound_LedgeTConvexCornerIDLAtIndex
  %return24 = call i8* @"chs@SS"(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @17, i64 0, i64 0))
  store i8* %return24, i8** %_bound_LedgeTConvexCornerIDRAtIndex
  %return25 = call i8* @"chs@SS"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @18, i64 0, i64 0))
  store i8* %return25, i8** %_bound_LedgeTConcaveCornerIDLAtIndex
  %return26 = call i8* @"chs@SS"(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @19, i64 0, i64 0))
  store i8* %return26, i8** %_bound_LedgeTConcaveCornerIDRAtIndex
  %return27 = call i8* @"chs@SS"(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @20, i64 0, i64 0))
  store i8* %return27, i8** %_bound_LedgeBConvexCornerIDLAtIndex
  %return28 = call i8* @"chs@SS"(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @21, i64 0, i64 0))
  store i8* %return28, i8** %_bound_LedgeBConvexCornerIDRAtIndex
  %return29 = call i8* @"chs@SS"(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @22, i64 0, i64 0))
  store i8* %return29, i8** %_bound_LedgeBConcaveCornerIDLAtIndex
  %return30 = call i8* @"chs@SS"(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @23, i64 0, i64 0))
  store i8* %return30, i8** %_bound_LedgeBConcaveCornerIDRAtIndex
  ret void
}

; Function Attrs: nounwind
declare <3 x double> @"getbbox_size@VI"(i64) #1

; Function Attrs: nounwind readnone
declare double @"getcomp@FVI"(<3 x double>, i64) #2

; Function Attrs: nounwind readnone
declare double @"chf@FS"(i8*) #2

; Function Attrs: nounwind readnone
declare i64 @"chi@IS"(i8*) #2

; Function Attrs: nounwind readnone
declare i8* @"chs@SS"(i8*) #2

; Function Attrs: nounwind
define void @__vex_snippet(double %BuildingHeight, double %FloorHeightAtIndex, double %FloorTopLedgeHeightAtIndex, double %FloorBottomLedgeHeightAtIndex, i8* %TopLedgePatternAtIndex, i8* %BottomLedgePatternAtIndex, i8* %FacadePatternAtIndex, i8* %ConvexCornerIDLAtIndex, i8* %ConvexCornerIDRAtIndex, i8* %ConcaveCornerIDLAtIndex, i8* %ConcaveCornerIDRAtIndex, i8* %SideSlopIDAtIndex, double %FacadeCornerAtIndex, double %TopLedgeCornerAtIndex, double %BottomLedgeCornerAtIndex, i8* %LedgeTConvexCornerIDLAtIndex, i8* %LedgeTConvexCornerIDRAtIndex, i8* %LedgeTConcaveCornerIDLAtIndex, i8* %LedgeTConcaveCornerIDRAtIndex, i8* %LedgeBConvexCornerIDLAtIndex, i8* %LedgeBConvexCornerIDRAtIndex, i8* %LedgeBConcaveCornerIDLAtIndex, i8* %LedgeBConcaveCornerIDRAtIndex) #1 {
__llvm_entry:
  %"<FloorHeightAtIndex>" = alloca double
  %"<FloorTopLedgeHeightAtIndex>" = alloca double
  %"<FloorBottomLedgeHeightAtIndex>" = alloca double
  %"<TopLedgePatternAtIndex>" = alloca i8*
  %"<BottomLedgePatternAtIndex>" = alloca i8*
  %"<FacadePatternAtIndex>" = alloca i8*
  %"<ConvexCornerIDLAtIndex>" = alloca i8*
  %"<ConvexCornerIDRAtIndex>" = alloca i8*
  %"<ConcaveCornerIDLAtIndex>" = alloca i8*
  %"<ConcaveCornerIDRAtIndex>" = alloca i8*
  %"<SideSlopIDAtIndex>" = alloca i8*
  %"<FacadeCornerAtIndex>" = alloca double
  %"<TopLedgeCornerAtIndex>" = alloca double
  %"<BottomLedgeCornerAtIndex>" = alloca double
  %"<LedgeTConvexCornerIDLAtIndex>" = alloca i8*
  %"<LedgeTConvexCornerIDRAtIndex>" = alloca i8*
  %"<LedgeTConcaveCornerIDLAtIndex>" = alloca i8*
  %"<LedgeTConcaveCornerIDRAtIndex>" = alloca i8*
  %"<LedgeBConvexCornerIDLAtIndex>" = alloca i8*
  %"<LedgeBConvexCornerIDRAtIndex>" = alloca i8*
  %"<LedgeBConcaveCornerIDLAtIndex>" = alloca i8*
  %"<LedgeBConcaveCornerIDRAtIndex>" = alloca i8*
  %"<BuildingHeight>" = alloca double
  store double %BuildingHeight, double* %"<BuildingHeight>"
  store double %FloorHeightAtIndex, double* %"<FloorHeightAtIndex>"
  store double %FloorTopLedgeHeightAtIndex, double* %"<FloorTopLedgeHeightAtIndex>"
  store double %FloorBottomLedgeHeightAtIndex, double* %"<FloorBottomLedgeHeightAtIndex>"
  store i8* %TopLedgePatternAtIndex, i8** %"<TopLedgePatternAtIndex>"
  store i8* %BottomLedgePatternAtIndex, i8** %"<BottomLedgePatternAtIndex>"
  store i8* %FacadePatternAtIndex, i8** %"<FacadePatternAtIndex>"
  store i8* %ConvexCornerIDLAtIndex, i8** %"<ConvexCornerIDLAtIndex>"
  store i8* %ConvexCornerIDRAtIndex, i8** %"<ConvexCornerIDRAtIndex>"
  store i8* %ConcaveCornerIDLAtIndex, i8** %"<ConcaveCornerIDLAtIndex>"
  store i8* %ConcaveCornerIDRAtIndex, i8** %"<ConcaveCornerIDRAtIndex>"
  store i8* %SideSlopIDAtIndex, i8** %"<SideSlopIDAtIndex>"
  store double %FacadeCornerAtIndex, double* %"<FacadeCornerAtIndex>"
  store double %TopLedgeCornerAtIndex, double* %"<TopLedgeCornerAtIndex>"
  store double %BottomLedgeCornerAtIndex, double* %"<BottomLedgeCornerAtIndex>"
  store i8* %LedgeTConvexCornerIDLAtIndex, i8** %"<LedgeTConvexCornerIDLAtIndex>"
  store i8* %LedgeTConvexCornerIDRAtIndex, i8** %"<LedgeTConvexCornerIDRAtIndex>"
  store i8* %LedgeTConcaveCornerIDLAtIndex, i8** %"<LedgeTConcaveCornerIDLAtIndex>"
  store i8* %LedgeTConcaveCornerIDRAtIndex, i8** %"<LedgeTConcaveCornerIDRAtIndex>"
  store i8* %LedgeBConvexCornerIDLAtIndex, i8** %"<LedgeBConvexCornerIDLAtIndex>"
  store i8* %LedgeBConvexCornerIDRAtIndex, i8** %"<LedgeBConvexCornerIDRAtIndex>"
  store i8* %LedgeBConcaveCornerIDLAtIndex, i8** %"<LedgeBConcaveCornerIDLAtIndex>"
  store i8* %LedgeBConcaveCornerIDRAtIndex, i8** %"<LedgeBConcaveCornerIDRAtIndex>"
  call void @"__vex_snippet_snippet@FFFFSSSSSSSSFFFSSSSSSSS"(double* %"<BuildingHeight>", double* %"<FloorHeightAtIndex>", double* %"<FloorTopLedgeHeightAtIndex>", double* %"<FloorBottomLedgeHeightAtIndex>", i8** %"<TopLedgePatternAtIndex>", i8** %"<BottomLedgePatternAtIndex>", i8** %"<FacadePatternAtIndex>", i8** %"<ConvexCornerIDLAtIndex>", i8** %"<ConvexCornerIDRAtIndex>", i8** %"<ConcaveCornerIDLAtIndex>", i8** %"<ConcaveCornerIDRAtIndex>", i8** %"<SideSlopIDAtIndex>", double* %"<FacadeCornerAtIndex>", double* %"<TopLedgeCornerAtIndex>", double* %"<BottomLedgeCornerAtIndex>", i8** %"<LedgeTConvexCornerIDLAtIndex>", i8** %"<LedgeTConvexCornerIDRAtIndex>", i8** %"<LedgeTConcaveCornerIDLAtIndex>", i8** %"<LedgeTConcaveCornerIDRAtIndex>", i8** %"<LedgeBConvexCornerIDLAtIndex>", i8** %"<LedgeBConvexCornerIDRAtIndex>", i8** %"<LedgeBConcaveCornerIDLAtIndex>", i8** %"<LedgeBConcaveCornerIDRAtIndex>")
  %evalue = load double, double* %"<BuildingHeight>"
  %gvalue = call double @"_export@FSF"(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @25, i64 0, i64 0), double %evalue) #3
  %evalue1 = load double, double* %"<FloorHeightAtIndex>"
  %gvalue2 = call double @"_export@FSF"(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @26, i64 0, i64 0), double %evalue1) #3
  %evalue3 = load double, double* %"<FloorTopLedgeHeightAtIndex>"
  %gvalue4 = call double @"_export@FSF"(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @27, i64 0, i64 0), double %evalue3) #3
  %evalue5 = load double, double* %"<FloorBottomLedgeHeightAtIndex>"
  %gvalue6 = call double @"_export@FSF"(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @28, i64 0, i64 0), double %evalue5) #3
  %evalue7 = load i8*, i8** %"<TopLedgePatternAtIndex>"
  %gvalue8 = call i8* @"_export@SSS"(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @29, i64 0, i64 0), i8* %evalue7) #3
  %evalue9 = load i8*, i8** %"<BottomLedgePatternAtIndex>"
  %gvalue10 = call i8* @"_export@SSS"(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @30, i64 0, i64 0), i8* %evalue9) #3
  %evalue11 = load i8*, i8** %"<FacadePatternAtIndex>"
  %gvalue12 = call i8* @"_export@SSS"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @31, i64 0, i64 0), i8* %evalue11) #3
  %evalue13 = load i8*, i8** %"<ConvexCornerIDLAtIndex>"
  %gvalue14 = call i8* @"_export@SSS"(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @32, i64 0, i64 0), i8* %evalue13) #3
  %evalue15 = load i8*, i8** %"<ConvexCornerIDRAtIndex>"
  %gvalue16 = call i8* @"_export@SSS"(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @33, i64 0, i64 0), i8* %evalue15) #3
  %evalue17 = load i8*, i8** %"<ConcaveCornerIDLAtIndex>"
  %gvalue18 = call i8* @"_export@SSS"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @34, i64 0, i64 0), i8* %evalue17) #3
  %evalue19 = load i8*, i8** %"<ConcaveCornerIDRAtIndex>"
  %gvalue20 = call i8* @"_export@SSS"(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @35, i64 0, i64 0), i8* %evalue19) #3
  %evalue21 = load i8*, i8** %"<SideSlopIDAtIndex>"
  %gvalue22 = call i8* @"_export@SSS"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @36, i64 0, i64 0), i8* %evalue21) #3
  %evalue23 = load double, double* %"<FacadeCornerAtIndex>"
  %gvalue24 = call double @"_export@FSF"(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @37, i64 0, i64 0), double %evalue23) #3
  %evalue25 = load double, double* %"<TopLedgeCornerAtIndex>"
  %gvalue26 = call double @"_export@FSF"(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @38, i64 0, i64 0), double %evalue25) #3
  %evalue27 = load double, double* %"<BottomLedgeCornerAtIndex>"
  %gvalue28 = call double @"_export@FSF"(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @39, i64 0, i64 0), double %evalue27) #3
  %evalue29 = load i8*, i8** %"<LedgeTConvexCornerIDLAtIndex>"
  %gvalue30 = call i8* @"_export@SSS"(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @40, i64 0, i64 0), i8* %evalue29) #3
  %evalue31 = load i8*, i8** %"<LedgeTConvexCornerIDRAtIndex>"
  %gvalue32 = call i8* @"_export@SSS"(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @41, i64 0, i64 0), i8* %evalue31) #3
  %evalue33 = load i8*, i8** %"<LedgeTConcaveCornerIDLAtIndex>"
  %gvalue34 = call i8* @"_export@SSS"(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @42, i64 0, i64 0), i8* %evalue33) #3
  %evalue35 = load i8*, i8** %"<LedgeTConcaveCornerIDRAtIndex>"
  %gvalue36 = call i8* @"_export@SSS"(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @43, i64 0, i64 0), i8* %evalue35) #3
  %evalue37 = load i8*, i8** %"<LedgeBConvexCornerIDLAtIndex>"
  %gvalue38 = call i8* @"_export@SSS"(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @44, i64 0, i64 0), i8* %evalue37) #3
  %evalue39 = load i8*, i8** %"<LedgeBConvexCornerIDRAtIndex>"
  %gvalue40 = call i8* @"_export@SSS"(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @45, i64 0, i64 0), i8* %evalue39) #3
  %evalue41 = load i8*, i8** %"<LedgeBConcaveCornerIDLAtIndex>"
  %gvalue42 = call i8* @"_export@SSS"(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @46, i64 0, i64 0), i8* %evalue41) #3
  %evalue43 = load i8*, i8** %"<LedgeBConcaveCornerIDRAtIndex>"
  %gvalue44 = call i8* @"_export@SSS"(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @47, i64 0, i64 0), i8* %evalue43) #3
  store double %gvalue, double* @BuildingHeight
  store double %gvalue2, double* @FloorHeightAtIndex
  store double %gvalue4, double* @FloorTopLedgeHeightAtIndex
  store double %gvalue6, double* @FloorBottomLedgeHeightAtIndex
  store i8* %gvalue8, i8** @TopLedgePatternAtIndex
  store i8* %gvalue10, i8** @BottomLedgePatternAtIndex
  store i8* %gvalue12, i8** @FacadePatternAtIndex
  store i8* %gvalue14, i8** @ConvexCornerIDLAtIndex
  store i8* %gvalue16, i8** @ConvexCornerIDRAtIndex
  store i8* %gvalue18, i8** @ConcaveCornerIDLAtIndex
  store i8* %gvalue20, i8** @ConcaveCornerIDRAtIndex
  store i8* %gvalue22, i8** @SideSlopIDAtIndex
  store double %gvalue24, double* @FacadeCornerAtIndex
  store double %gvalue26, double* @TopLedgeCornerAtIndex
  store double %gvalue28, double* @BottomLedgeCornerAtIndex
  store i8* %gvalue30, i8** @LedgeTConvexCornerIDLAtIndex
  store i8* %gvalue32, i8** @LedgeTConvexCornerIDRAtIndex
  store i8* %gvalue34, i8** @LedgeTConcaveCornerIDLAtIndex
  store i8* %gvalue36, i8** @LedgeTConcaveCornerIDRAtIndex
  store i8* %gvalue38, i8** @LedgeBConvexCornerIDLAtIndex
  store i8* %gvalue40, i8** @LedgeBConvexCornerIDRAtIndex
  store i8* %gvalue42, i8** @LedgeBConcaveCornerIDLAtIndex
  store i8* %gvalue44, i8** @LedgeBConcaveCornerIDRAtIndex
  ret void
}

declare double @"_export@FSF"(i8*, double)

declare i8* @"_export@SSS"(i8*, i8*)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @__vex_snippet(double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @24, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @24, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @24, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @24, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @24, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @24, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @24, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @24, i64 0, i64 0), double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @24, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @24, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @24, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @24, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @24, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @24, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @24, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @24, i64 0, i64 0))
  ret void
}

attributes #0 = { alwaysinline nounwind }
attributes #1 = { nounwind }
attributes #2 = { nounwind readnone }
attributes #3 = { nounwind readonly }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"19.0.531"}
!2 = !{!"64"}

;_code_end
