;_name	<vexpression>
; ModuleID = '__vex_snippet'
source_filename = "__vex_snippet"

@clean = external global i64
@0 = private constant [6 x i8] c"clean\00"

; Function Attrs: alwaysinline nounwind
define private void @"__vex_snippet_snippet@I"(i64* %_bound_clean) #0 {
__llvm_entry:
  %return = call <3 x double> @"getbbox_size@VI"(i64 0)
  %return1 = call <3 x double> @"getbbox_size@VI"(i64 1)
  %return3 = call double @"length@FV"(<3 x double> %return)
  %return5 = call double @"length@FV"(<3 x double> %return1)
  %return8 = call double @"min@FFF"(double %return3, double %return5)
  %return11 = call double @"max@FFF:F"(double %return3, double %return5, double 1.000000e-10)
  %output = call double @"div@FF"(double %return8, double %return11)
  %return13 = fcmp ogt double %output, 9.999000e-01
  %return14 = zext i1 %return13 to i64
  store i64 %return14, i64* %_bound_clean
  ret void
}

; Function Attrs: nounwind
declare <3 x double> @"getbbox_size@VI"(i64) #1

; Function Attrs: nounwind
declare double @"length@FV"(<3 x double>) #1

; Function Attrs: nounwind readnone
declare double @"min@FFF"(double, double) #2

; Function Attrs: nounwind readnone
declare double @"max@FFF:F"(double, double, double) #2

; Function Attrs: nounwind readnone
declare double @"div@FF"(double, double) #2

; Function Attrs: nounwind
define void @__vex_snippet(i64 %clean) #1 {
__llvm_entry:
  %"<clean>" = alloca i64
  store i64 %clean, i64* %"<clean>"
  call void @"__vex_snippet_snippet@I"(i64* %"<clean>")
  %evalue = load i64, i64* %"<clean>"
  %gvalue = call i64 @"_export@ISI"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @0, i64 0, i64 0), i64 %evalue) #3
  store i64 %gvalue, i64* @clean
  ret void
}

declare i64 @"_export@ISI"(i8*, i64)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @__vex_snippet(i64 0)
  ret void
}

attributes #0 = { alwaysinline nounwind }
attributes #1 = { nounwind }
attributes #2 = { nounwind readnone }
attributes #3 = { nounwind readonly }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"19.0.498"}
!2 = !{!"64"}

;_code_end
