;_name	<vexpression>
; ModuleID = '__vex_snippet'
source_filename = "__vex_snippet"

@0 = private constant [98 x i8] c"Material'/Game/Developers/mikel/MeshGenerators/Materials/mesh_gen_uv_preview.mesh_gen_uv_preview'\00"
@1 = private constant [38 x i8] c"Assets/Materials/uv_checkered_mat.mat\00"
@2 = private constant [11 x i8] c"uvCheck1SG\00"
@3 = private constant [1 x i8] zeroinitializer
@unreal_material = external global i8*
@unity_material = external global i8*
@maya_shading_group = external global i8*
@4 = private constant [16 x i8] c"unreal_material\00"
@5 = private constant [15 x i8] c"unity_material\00"
@6 = private constant [19 x i8] c"maya_shading_group\00"

; Function Attrs: alwaysinline nounwind
define private void @"__vex_snippet_snippet@SSS"(i8** %_bound_unreal_material, i8** %_bound_unity_material, i8** %_bound_maya_shading_group) #0 {
__llvm_entry:
  store i8* getelementptr inbounds ([98 x i8], [98 x i8]* @0, i64 0, i64 0), i8** %_bound_unreal_material
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @1, i64 0, i64 0), i8** %_bound_unity_material
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @2, i64 0, i64 0), i8** %_bound_maya_shading_group
  ret void
}

; Function Attrs: nounwind
define void @__vex_snippet(i8* %unreal_material, i8* %unity_material, i8* %maya_shading_group) #1 {
__llvm_entry:
  %"<unity_material>" = alloca i8*
  %"<maya_shading_group>" = alloca i8*
  %"<unreal_material>" = alloca i8*
  store i8* %unreal_material, i8** %"<unreal_material>"
  store i8* %unity_material, i8** %"<unity_material>"
  store i8* %maya_shading_group, i8** %"<maya_shading_group>"
  call void @"__vex_snippet_snippet@SSS"(i8** %"<unreal_material>", i8** %"<unity_material>", i8** %"<maya_shading_group>")
  %evalue = load i8*, i8** %"<unreal_material>"
  %gvalue = call i8* @"_export@SSS"(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @4, i64 0, i64 0), i8* %evalue) #2
  %evalue1 = load i8*, i8** %"<unity_material>"
  %gvalue2 = call i8* @"_export@SSS"(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @5, i64 0, i64 0), i8* %evalue1) #2
  %evalue3 = load i8*, i8** %"<maya_shading_group>"
  %gvalue4 = call i8* @"_export@SSS"(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @6, i64 0, i64 0), i8* %evalue3) #2
  store i8* %gvalue, i8** @unreal_material
  store i8* %gvalue2, i8** @unity_material
  store i8* %gvalue4, i8** @maya_shading_group
  ret void
}

declare i8* @"_export@SSS"(i8*, i8*)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @__vex_snippet(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @3, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @3, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @3, i64 0, i64 0))
  ret void
}

attributes #0 = { alwaysinline nounwind }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"19.0.498"}
!2 = !{!"64"}

;_code_end
