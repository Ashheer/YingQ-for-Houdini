;_name	<vexpression>
; ModuleID = '__vex_snippet'
source_filename = "__vex_snippet"

@0 = private constant [9 x i8] c"nodepath\00"
@1 = private constant [11 x i8] c"__nodepath\00"
@2 = private constant [11 x i8] c"__nodetype\00"
@3 = private constant [10 x i8] c"node_type\00"
@__parms = external global i62
@parms = external global i62
@4 = private constant [8 x i8] c"__parms\00"
@5 = private constant [6 x i8] c"parms\00"

; Function Attrs: alwaysinline nounwind
define private void @"__vex_snippet_snippet@DD"(i62* %_bound___parms, i62* %_bound_parms) #0 {
__llvm_entry:
  %return = call i8* @"chsop@SS"(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @0, i64 0, i64 0))
  %tmp = load i62, i62* %_bound___parms
  %return3 = call { i8*, i62 } @"setcomp@SDSS"(i62 %tmp, i8* %return, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @1, i64 0, i64 0))
  %output = extractvalue { i8*, i62 } %return3, 1
  %return5 = call i8* @"chs@SS"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @3, i64 0, i64 0))
  %return7 = call { i8*, i62 } @"setcomp@SDSS"(i62 %output, i8* %return5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @2, i64 0, i64 0))
  %output9 = extractvalue { i8*, i62 } %return7, 1
  store i62 %output9, i62* %_bound___parms
  %tmp12 = load i62, i62* %_bound_parms
  %return13 = call { i62, i62 } @"setcomp@DDDS"(i62 %tmp12, i62 %output9, i8* %return)
  %output15 = extractvalue { i62, i62 } %return13, 1
  store i62 %output15, i62* %_bound_parms
  ret void
}

; Function Attrs: nounwind readnone
declare i8* @"chsop@SS"(i8*) #1

; Function Attrs: nounwind readnone
declare i8* @"chs@SS"(i8*) #1

; Function Attrs: nounwind readnone
declare { i8*, i62 } @"setcomp@SDSS"(i62, i8*, i8*) #1

; Function Attrs: nounwind readnone
declare { i62, i62 } @"setcomp@DDDS"(i62, i62, i8*) #1

; Function Attrs: nounwind
define void @__vex_snippet(i62 %__parms, i62 %parms) #2 {
__llvm_entry:
  %"<parms>" = alloca i62
  %"<__parms>" = alloca i62
  store i62 %__parms, i62* %"<__parms>"
  store i62 %parms, i62* %"<parms>"
  call void @"__vex_snippet_snippet@DD"(i62* %"<__parms>", i62* %"<parms>")
  %evalue = load i62, i62* %"<__parms>"
  %gvalue = call i62 @"_export@DSD"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @4, i64 0, i64 0), i62 %evalue) #3
  %evalue1 = load i62, i62* %"<parms>"
  %gvalue2 = call i62 @"_export@DSD"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @5, i64 0, i64 0), i62 %evalue1) #3
  store i62 %gvalue, i62* @__parms
  store i62 %gvalue2, i62* @parms
  ret void
}

declare i62 @"_export@DSD"(i8*, i62)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @__vex_snippet(i62 0, i62 0)
  ret void
}

attributes #0 = { alwaysinline nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind }
attributes #3 = { nounwind readonly }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"19.0.531"}
!2 = !{!"64"}

;_code_end
