;_name	<vexpression>
; ModuleID = '__vex_snippet'
source_filename = "__vex_snippet"

@0 = private constant [8 x i8] c"__class\00"
@1 = private constant [7 x i8] c"orient\00"
@ptnum = external global i64
@orient = external global <4 x double>
@2 = private constant [6 x i8] c"ptnum\00"

; Function Attrs: alwaysinline nounwind
define private void @"__vex_snippet_snippet@IP"(i64* %_bound_ptnum, <4 x double>* %_bound_orient) #0 {
__llvm_entry:
  %_bound_ptnum1 = load i64, i64* %_bound_ptnum
  %return = call i64* @"pointprims@[III"(i64 0, i64 %_bound_ptnum1)
  %return2 = call i64 @"getcomp@I[II"(i64* %return, i64 0)
  %return4 = call i64 @"prim@IISI"(i64 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0), i64 %return2)
  %return6 = call <4 x double> @"point@PISI"(i64 2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1, i64 0, i64 0), i64 %return4)
  store <4 x double> %return6, <4 x double>* %_bound_orient
  ret void
}

; Function Attrs: nounwind
declare i64* @"pointprims@[III"(i64, i64) #1

; Function Attrs: nounwind readnone
declare i64 @"getcomp@I[II"(i64*, i64) #2

; Function Attrs: nounwind
declare i64 @"prim@IISI"(i64, i8*, i64) #1

; Function Attrs: nounwind
declare <4 x double> @"point@PISI"(i64, i8*, i64) #1

; Function Attrs: nounwind
define void @__vex_snippet(i64 %ptnum, <4 x double> %orient) #1 {
__llvm_entry:
  %"<orient>" = alloca <4 x double>
  %0 = alloca i64
  store <4 x double> %orient, <4 x double>* %"<orient>"
  store i64 %ptnum, i64* %0
  call void @"__vex_snippet_snippet@IP"(i64* %0, <4 x double>* %"<orient>")
  %gvalue = call i64 @"_export@ISI"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @2, i64 0, i64 0), i64 %ptnum) #3
  %evalue2 = load <4 x double>, <4 x double>* %"<orient>"
  %gvalue3 = call <4 x double> @"_export@PSP"(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1, i64 0, i64 0), <4 x double> %evalue2) #3
  store i64 %gvalue, i64* @ptnum
  store <4 x double> %gvalue3, <4 x double>* @orient
  ret void
}

declare i64 @"_export@ISI"(i8*, i64)

declare <4 x double> @"_export@PSP"(i8*, <4 x double>)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @__vex_snippet(i64 0, <4 x double> <double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 1.000000e+00>)
  ret void
}

attributes #0 = { alwaysinline nounwind }
attributes #1 = { nounwind }
attributes #2 = { nounwind readnone }
attributes #3 = { nounwind readonly }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"19.0.498"}
!2 = !{!"64"}

;_code_end
