;_name	<vexpression>
; ModuleID = '__vex_snippet'
source_filename = "__vex_snippet"

@0 = private constant [9 x i8] c"typename\00"
@1 = private constant [5 x i8] c"Poly\00"
@2 = private constant [6 x i8] c"class\00"
@3 = private constant [5 x i8] c"prim\00"
@primnum = external global i64
@group___packed = external global i64
@4 = private constant [8 x i8] c"primnum\00"
@5 = private constant [15 x i8] c"group___packed\00"

; Function Attrs: alwaysinline nounwind
define private void @"__vex_snippet_snippet@II"(i64* %_bound_primnum, i64* %_bound_group___packed) #0 {
__llvm_entry:
  %_bound_primnum1 = load i64, i64* %_bound_primnum
  %return = call i64* @"primpoints@[III"(i64 0, i64 %_bound_primnum1)
  %return2 = call i64 @"len@I[I"(i64* %return)
  %return3 = call i64 @"ne@III"(i64 %return2, i64 1)
  %0 = icmp ne i64 %return3, 0
  br i1 %0, label %true, label %end

true:                                             ; preds = %end8, %end, %__llvm_entry
  br label %UnifiedReturnBlock

end:                                              ; preds = %__llvm_entry
  %_bound_primnum4 = load i64, i64* %_bound_primnum
  %return5 = call i8* @"primintrinsic@SISI"(i64 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @0, i64 0, i64 0), i64 %_bound_primnum4)
  %return6 = call i64 @"eq@ISS"(i8* %return5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1, i64 0, i64 0))
  %1 = icmp ne i64 %return6, 0
  br i1 %1, label %true, label %end8

end8:                                             ; preds = %end
  %_bound_primnum9 = load i64, i64* %_bound_primnum
  %return10 = call i64 @"prim@IISI"(i64 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @2, i64 0, i64 0), i64 %_bound_primnum9)
  %return12 = call i64 @"findattribvalcount@IISSI"(i64 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @3, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @2, i64 0, i64 0), i64 %return10)
  %return13 = call i64 @"gt@III"(i64 %return12, i64 1)
  %2 = icmp ne i64 %return13, 0
  br i1 %2, label %true, label %end15

end15:                                            ; preds = %end8
  store i64 1, i64* %_bound_group___packed
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %end15, %true
  ret void
}

; Function Attrs: nounwind
declare i64* @"primpoints@[III"(i64, i64) #1

; Function Attrs: nounwind readnone
declare i64 @"len@I[I"(i64*) #2

; Function Attrs: nounwind readnone
declare i64 @"ne@III"(i64, i64) #2

; Function Attrs: nounwind
declare i8* @"primintrinsic@SISI"(i64, i8*, i64) #1

; Function Attrs: nounwind readnone
declare i64 @"eq@ISS"(i8*, i8*) #2

; Function Attrs: nounwind
declare i64 @"prim@IISI"(i64, i8*, i64) #1

; Function Attrs: nounwind
declare i64 @"findattribvalcount@IISSI"(i64, i8*, i8*, i64) #1

; Function Attrs: nounwind readnone
declare i64 @"gt@III"(i64, i64) #2

; Function Attrs: nounwind
define void @__vex_snippet(i64 %primnum, i64 %group___packed) #1 {
__llvm_entry:
  %"<group___packed>" = alloca i64
  %0 = alloca i64
  store i64 %group___packed, i64* %"<group___packed>"
  store i64 %primnum, i64* %0
  call void @"__vex_snippet_snippet@II"(i64* %0, i64* %"<group___packed>")
  %gvalue = call i64 @"_export@ISI"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @4, i64 0, i64 0), i64 %primnum) #3
  %evalue2 = load i64, i64* %"<group___packed>"
  %gvalue3 = call i64 @"_export@ISI"(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @5, i64 0, i64 0), i64 %evalue2) #3
  store i64 %gvalue, i64* @primnum
  store i64 %gvalue3, i64* @group___packed
  ret void
}

declare i64 @"_export@ISI"(i8*, i64)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @__vex_snippet(i64 0, i64 0)
  ret void
}

attributes #0 = { alwaysinline nounwind }
attributes #1 = { nounwind }
attributes #2 = { nounwind readnone }
attributes #3 = { nounwind readonly }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"19.0.531"}
!2 = !{!"64"}

;_code_end
