;_name	<vexpression>
; ModuleID = '__vex_snippet'
source_filename = "__vex_snippet"

@0 = private constant [5 x i8] c"%s%d\00"
@1 = private constant [21 x i8] c"../clusternameprefix\00"
@2 = private constant [1 x i8] zeroinitializer
@name = external global i8*
@3 = private constant [5 x i8] c"name\00"

; Function Attrs: alwaysinline nounwind
define private void @"__vex_snippet_snippet@IS"(i64* %_bound_cluster, i8** %_bound_name) #0 {
__llvm_entry:
  %_bound_cluster1 = load i64, i64* %_bound_cluster
  %return = call i64 @"ge@III"(i64 %_bound_cluster1, i64 0)
  %0 = icmp ne i64 %return, 0
  br i1 %0, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %return2 = call i8* @"chs@SS"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @1, i64 0, i64 0))
  %return4 = call i8* @"sprintf@SS:SI"(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i64 0, i64 0), i8* %return2, i64 %_bound_cluster1)
  store i8* %return4, i8** %_bound_name
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  ret void
}

; Function Attrs: nounwind readnone
declare i64 @"ge@III"(i64, i64) #1

; Function Attrs: nounwind readnone
declare i8* @"chs@SS"(i8*) #1

; Function Attrs: nounwind readnone
declare i8* @"sprintf@SS:SI"(i8*, i8*, i64) #1

; Function Attrs: nounwind
define void @__vex_snippet(i64 %cluster, i8* %name) #2 {
__llvm_entry:
  %"<name>" = alloca i8*
  %0 = alloca i64
  store i8* %name, i8** %"<name>"
  store i64 %cluster, i64* %0
  call void @"__vex_snippet_snippet@IS"(i64* %0, i8** %"<name>")
  %evalue = load i8*, i8** %"<name>"
  %gvalue = call i8* @"_export@SSS"(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @3, i64 0, i64 0), i8* %evalue) #3
  store i8* %gvalue, i8** @name
  ret void
}

declare i8* @"_export@SSS"(i8*, i8*)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @__vex_snippet(i64 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @2, i64 0, i64 0))
  ret void
}

attributes #0 = { alwaysinline nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind }
attributes #3 = { nounwind readonly }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"19.0.531"}
!2 = !{!"64"}

;_code_end
