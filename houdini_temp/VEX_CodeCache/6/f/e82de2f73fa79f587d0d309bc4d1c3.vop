;_name	<vexpression>
; ModuleID = '__vex_snippet'
source_filename = "__vex_snippet"

@0 = private constant [8 x i8] c"soppath\00"
@1 = private constant [19 x i8] c"/obj/tiles/module0\00"
@2 = private constant [19 x i8] c"/obj/tiles/module1\00"
@3 = private constant [7 x i8] c"module\00"
@4 = private constant [12 x i8] c"/obj/tiles/\00"

; Function Attrs: alwaysinline nounwind
define private void @__vex_snippet_snippet() #0 {
__llvm_entry:
  %return = call i64 @"addpoint@IIV"(i64 0, <3 x double> zeroinitializer)
  %return2 = call i64 @"setpointattrib@IISIS"(i64 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0), i64 %return, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @1, i64 0, i64 0))
  %return3 = call i64 @"addpoint@IIV"(i64 0, <3 x double> zeroinitializer)
  %return5 = call i64 @"setpointattrib@IISIS"(i64 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0), i64 %return3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @2, i64 0, i64 0))
  br label %cond

cond:                                             ; preds = %body, %__llvm_entry
  %i.0 = phi i64 [ 13, %__llvm_entry ], [ %output, %body ]
  %return7 = call i64 @"le@III"(i64 %i.0, i64 24)
  %0 = icmp ne i64 %return7, 0
  br i1 %0, label %body, label %end

body:                                             ; preds = %cond
  %return8 = call i64 @"addpoint@IIV"(i64 0, <3 x double> zeroinitializer)
  %return10 = call i8* @"itoa@SI"(i64 %i.0)
  %return11 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @3, i64 0, i64 0), i8* %return10)
  %return13 = call i8* @"concat@SSS"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @4, i64 0, i64 0), i8* %return11)
  %return16 = call i64 @"setpointattrib@IISIS"(i64 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @0, i64 0, i64 0), i64 %return8, i8* %return13)
  %output = add i64 %i.0, 1
  br label %cond

end:                                              ; preds = %cond
  ret void
}

; Function Attrs: nounwind
declare i64 @"addpoint@IIV"(i64, <3 x double>) #1

; Function Attrs: nounwind
declare i64 @"setpointattrib@IISIS"(i64, i8*, i64, i8*) #1

; Function Attrs: nounwind readnone
declare i64 @"le@III"(i64, i64) #2

; Function Attrs: nounwind readnone
declare i8* @"itoa@SI"(i64) #2

; Function Attrs: nounwind readnone
declare i8* @"concat@SSS"(i8*, i8*) #2

; Function Attrs: nounwind
define void @__vex_snippet() #1 {
__llvm_entry:
  call void @__vex_snippet_snippet()
  ret void
}

define void @__shader_default_arguments() {
__llvm_entry:
  call void @__vex_snippet()
  ret void
}

attributes #0 = { alwaysinline nounwind }
attributes #1 = { nounwind }
attributes #2 = { nounwind readnone }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"19.0.531"}
!2 = !{!"64"}

;_code_end
