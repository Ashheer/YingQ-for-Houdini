;_name	<vexpression>
; ModuleID = '__vex_snippet'
source_filename = "__vex_snippet"

@0 = private constant [13 x i8] c"NOCORNERCV_R\00"
@1 = private constant [1 x i8] zeroinitializer
@name = external global i8*
@MODULE_DIMENSION = external global <2 x double>
@2 = private constant [5 x i8] c"name\00"
@3 = private constant [17 x i8] c"MODULE_DIMENSION\00"

; Function Attrs: alwaysinline nounwind
define private void @"__vex_snippet_snippet@SU"(i8** %_bound_name, <2 x double>* %_bound_MODULE_DIMENSION) #0 {
__llvm_entry:
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @0, i64 0, i64 0), i8** %_bound_name
  %return = call <2 x double> @"set@UFF"(double 1.000000e-01, double 1.000000e+00)
  store <2 x double> %return, <2 x double>* %_bound_MODULE_DIMENSION
  ret void
}

; Function Attrs: nounwind readnone
declare <2 x double> @"set@UFF"(double, double) #1

; Function Attrs: nounwind
define void @__vex_snippet(i8* %name, <2 x double> %MODULE_DIMENSION) #2 {
__llvm_entry:
  %"<MODULE_DIMENSION>" = alloca <2 x double>
  %"<name>" = alloca i8*
  store i8* %name, i8** %"<name>"
  store <2 x double> %MODULE_DIMENSION, <2 x double>* %"<MODULE_DIMENSION>"
  call void @"__vex_snippet_snippet@SU"(i8** %"<name>", <2 x double>* %"<MODULE_DIMENSION>")
  %evalue = load i8*, i8** %"<name>"
  %gvalue = call i8* @"_export@SSS"(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @2, i64 0, i64 0), i8* %evalue) #3
  %evalue1 = load <2 x double>, <2 x double>* %"<MODULE_DIMENSION>"
  %gvalue2 = call <2 x double> @"_export@USU"(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @3, i64 0, i64 0), <2 x double> %evalue1) #3
  store i8* %gvalue, i8** @name
  store <2 x double> %gvalue2, <2 x double>* @MODULE_DIMENSION
  ret void
}

declare i8* @"_export@SSS"(i8*, i8*)

declare <2 x double> @"_export@USU"(i8*, <2 x double>)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @__vex_snippet(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @1, i64 0, i64 0), <2 x double> zeroinitializer)
  ret void
}

attributes #0 = { alwaysinline nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind }
attributes #3 = { nounwind readonly }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"19.0.531"}
!2 = !{!"64"}

;_code_end
