;_name	<vexpression>
; ModuleID = '__vex_snippet'
source_filename = "__vex_snippet"

@0 = private constant [5 x i8] c"seed\00"
@frequency = external global double
@ptnum = external global i64
@1 = private constant [10 x i8] c"frequency\00"
@2 = private constant [6 x i8] c"ptnum\00"

; Function Attrs: alwaysinline nounwind
define private void @"__vex_snippet_snippet@FI"(double* %_bound_frequency, i64* %_bound_ptnum) #0 {
__llvm_entry:
  %return = call double @"chf@FS"(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i64 0, i64 0))
  %_bound_ptnum1 = load i64, i64* %_bound_ptnum
  %cast = sitofp i64 %_bound_ptnum1 to double
  %return2 = call double @"rand@FF"(double %cast)
  %output = fadd double %return2, %return
  store double %output, double* %_bound_frequency
  ret void
}

; Function Attrs: nounwind readnone
declare double @"chf@FS"(i8*) #1

; Function Attrs: nounwind
declare double @"rand@FF"(double) #2

; Function Attrs: nounwind
define void @__vex_snippet(double %frequency, i64 %ptnum) #2 {
__llvm_entry:
  %0 = alloca i64
  %"<frequency>" = alloca double
  store double %frequency, double* %"<frequency>"
  store i64 %ptnum, i64* %0
  call void @"__vex_snippet_snippet@FI"(double* %"<frequency>", i64* %0)
  %evalue = load double, double* %"<frequency>"
  %gvalue = call double @"_export@FSF"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1, i64 0, i64 0), double %evalue) #3
  %gvalue3 = call i64 @"_export@ISI"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @2, i64 0, i64 0), i64 %ptnum) #3
  store double %gvalue, double* @frequency
  store i64 %gvalue3, i64* @ptnum
  ret void
}

declare double @"_export@FSF"(i8*, double)

declare i64 @"_export@ISI"(i8*, i64)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @__vex_snippet(double 0.000000e+00, i64 0)
  ret void
}

attributes #0 = { alwaysinline nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind }
attributes #3 = { nounwind readonly }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"19.0.531"}
!2 = !{!"64"}

;_code_end
