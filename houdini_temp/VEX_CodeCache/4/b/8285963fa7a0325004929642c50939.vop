;_name	<vexpression>
; ModuleID = '__vex_snippet'
source_filename = "__vex_snippet"

@0 = private constant [10 x i8] c"primitive\00"
@1 = private constant [13 x i8] c"__pointpairs\00"
@2 = private constant [1 x i8] zeroinitializer
@group___todelete = external global i64
@3 = private constant [17 x i8] c"group___todelete\00"

; Function Attrs: alwaysinline nounwind
define private void @"__vex_snippet_snippet@SII"(i8** %_bound___pointpairs, i64* %_bound_primnum, i64* %_bound_group___todelete) #0 {
__llvm_entry:
  %_bound___pointpairs1 = load i8*, i8** %_bound___pointpairs
  %return = call i64 @"findattribval@IISSS"(i64 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @0, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @1, i64 0, i64 0), i8* %_bound___pointpairs1)
  %_bound_primnum3 = load i64, i64* %_bound_primnum
  %return4 = call i64 @"ne@III"(i64 %return, i64 %_bound_primnum3)
  %0 = icmp ne i64 %return4, 0
  br i1 %0, label %true, label %end

true:                                             ; preds = %__llvm_entry
  store i64 1, i64* %_bound_group___todelete
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  ret void
}

; Function Attrs: nounwind
declare i64 @"findattribval@IISSS"(i64, i8*, i8*, i8*) #1

; Function Attrs: nounwind readnone
declare i64 @"ne@III"(i64, i64) #2

; Function Attrs: nounwind
define void @__vex_snippet(i8* %__pointpairs, i64 %primnum, i64 %group___todelete) #1 {
__llvm_entry:
  %"<group___todelete>" = alloca i64
  %0 = alloca i8*
  %1 = alloca i64
  store i64 %group___todelete, i64* %"<group___todelete>"
  store i8* %__pointpairs, i8** %0
  store i64 %primnum, i64* %1
  call void @"__vex_snippet_snippet@SII"(i8** %0, i64* %1, i64* %"<group___todelete>")
  %evalue = load i64, i64* %"<group___todelete>"
  %gvalue = call i64 @"_export@ISI"(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @3, i64 0, i64 0), i64 %evalue) #3
  store i64 %gvalue, i64* @group___todelete
  ret void
}

declare i64 @"_export@ISI"(i8*, i64)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @__vex_snippet(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @2, i64 0, i64 0), i64 0, i64 0)
  ret void
}

attributes #0 = { alwaysinline nounwind }
attributes #1 = { nounwind }
attributes #2 = { nounwind readnone }
attributes #3 = { nounwind readonly }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"19.0.498"}
!2 = !{!"64"}

;_code_end
