;_name	<vexpression>
; ModuleID = '__vex_snippet'
source_filename = "__vex_snippet"

@N = external global <3 x double>
@top = external global i64
@0 = private constant [2 x i8] c"N\00"
@1 = private constant [4 x i8] c"top\00"

; Function Attrs: alwaysinline nounwind
define private void @"__vex_snippet_snippet@VI"(<3 x double>* %_bound_N, i64* %_bound_top) #0 {
__llvm_entry:
  %_bound_N1 = load <3 x double>, <3 x double>* %_bound_N
  %return = call double @"getcomp@FVI"(<3 x double> %_bound_N1, i64 1)
  %return2 = fcmp ogt double %return, 9.999000e-01
  br i1 %return2, label %true, label %end

true:                                             ; preds = %__llvm_entry
  store i64 1, i64* %_bound_top
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  ret void
}

; Function Attrs: nounwind readnone
declare double @"getcomp@FVI"(<3 x double>, i64) #1

; Function Attrs: nounwind
define void @__vex_snippet(<3 x double> %N, i64 %top) #2 {
__llvm_entry:
  %"<top>" = alloca i64
  %0 = alloca <3 x double>
  store i64 %top, i64* %"<top>"
  store <3 x double> %N, <3 x double>* %0
  call void @"__vex_snippet_snippet@VI"(<3 x double>* %0, i64* %"<top>")
  %gvalue = call <3 x double> @"_export@VSV"(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @0, i64 0, i64 0), <3 x double> %N) #3
  %evalue2 = load i64, i64* %"<top>"
  %gvalue3 = call i64 @"_export@ISI"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @1, i64 0, i64 0), i64 %evalue2) #3
  store <3 x double> %gvalue, <3 x double>* @N
  store i64 %gvalue3, i64* @top
  ret void
}

declare <3 x double> @"_export@VSV"(i8*, <3 x double>)

declare i64 @"_export@ISI"(i8*, i64)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @__vex_snippet(<3 x double> zeroinitializer, i64 0)
  ret void
}

attributes #0 = { alwaysinline nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind }
attributes #3 = { nounwind readonly }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"19.0.531"}
!2 = !{!"64"}

;_code_end
