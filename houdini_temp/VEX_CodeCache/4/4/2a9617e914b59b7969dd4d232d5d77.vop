;_name	/obj/geo1/polyexpand_fee1/pointwrangle1/attribvop1
; ModuleID = 'obj_geo1_polyexpand_fee1_pointwrangle1_attribvop1'

@0 = private constant [14 x i8] c"../peak1/dist\00"
@N = external global <3 x double>
@P = external global <3 x double>
@opinput1_P = external global <3 x double>
@1 = private constant [2 x i8] c"N\00"
@2 = private constant [2 x i8] c"P\00"
@3 = private constant [11 x i8] c"opinput1_P\00"

define private void @"_obj_geo1_polyexpand_fee1_pointwrangle1_attribvop1_snippet1@VVV"(<3 x double>* %_bound_N, <3 x double>* %_bound_P, <3 x double>* %_bound_opinput1_P) nounwind alwaysinline {
__llvm_entry:
  %return = call i64 @"neg@II"(i64 1)
  %return1 = call double @"chf@FS"(i8* getelementptr inbounds ([14 x i8]* @0, i64 0, i64 0))
  %cast = sitofp i64 %return to double
  %output = call double @"div@FF"(double %cast, double %return1)
  %_bound_P2 = load <3 x double>* %_bound_P
  %_bound_opinput1_P3 = load <3 x double>* %_bound_opinput1_P
  %output4 = call <3 x double> @"sub@VV"(<3 x double> %_bound_P2, <3 x double> %_bound_opinput1_P3)
  %cast5 = call <3 x double> @"set@VF"(double %output)
  %output6 = call <3 x double> @"mul@VV"(<3 x double> %cast5, <3 x double> %output4)
  store <3 x double> %output6, <3 x double>* %_bound_N
  ret void
}

declare i64 @"neg@II"(i64) nounwind readnone

declare double @"chf@FS"(i8*) nounwind readnone

declare double @"div@FF"(double, double) nounwind readnone

declare <3 x double> @"sub@VV"(<3 x double>, <3 x double>) nounwind readnone

declare <3 x double> @"set@VF"(double) nounwind readnone

declare <3 x double> @"mul@VV"(<3 x double>, <3 x double>) nounwind readnone

define void @obj_geo1_polyexpand_fee1_pointwrangle1_attribvop1(<3 x double> %N, <3 x double> %P, <3 x double> %opinput1_P) nounwind {
__llvm_entry:
  %0 = alloca <3 x double>
  %1 = alloca <3 x double>
  %"<N>" = alloca <3 x double>
  store <3 x double> %N, <3 x double>* %"<N>"
  store <3 x double> %P, <3 x double>* %0
  store <3 x double> %opinput1_P, <3 x double>* %1
  call void @"_obj_geo1_polyexpand_fee1_pointwrangle1_attribvop1_snippet1@VVV"(<3 x double>* %"<N>", <3 x double>* %0, <3 x double>* %1)
  %evalue = load <3 x double>* %"<N>"
  %gvalue = call <3 x double> @"_export@VSV"(i8* getelementptr inbounds ([2 x i8]* @1, i64 0, i64 0), <3 x double> %evalue) nounwind readonly
  %gvalue4 = call <3 x double> @"_export@VSV"(i8* getelementptr inbounds ([2 x i8]* @2, i64 0, i64 0), <3 x double> %P) nounwind readonly
  %gvalue6 = call <3 x double> @"_export@VSV"(i8* getelementptr inbounds ([11 x i8]* @3, i64 0, i64 0), <3 x double> %opinput1_P) nounwind readonly
  store <3 x double> %gvalue, <3 x double>* @N
  store <3 x double> %gvalue4, <3 x double>* @P
  store <3 x double> %gvalue6, <3 x double>* @opinput1_P
  ret void
}

declare <3 x double> @"_export@VSV"(i8*, <3 x double>)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @obj_geo1_polyexpand_fee1_pointwrangle1_attribvop1(<3 x double> zeroinitializer, <3 x double> zeroinitializer, <3 x double> zeroinitializer)
  ret void
}

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = metadata !{metadata !"cvex"}
!1 = metadata !{metadata !"18.5.633"}
!2 = metadata !{metadata !"64"}

;_code_end
