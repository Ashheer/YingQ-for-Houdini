;_name	/obj/Fluids/particlefluidsurface2/viz_vel
; ModuleID = 'obj_Fluids_particlefluidsurface2_viz_vel'
source_filename = "obj_Fluids_particlefluidsurface2_viz_vel"

@0 = private constant [1 x i8] zeroinitializer
@1 = private constant [7 x i8] c"linear\00"
@2 = private constant [2 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1, i64 0, i64 0)]
@3 = private constant [2 x double] [double 0.000000e+00, double 1.000000e+00]
@4 = private constant [2 x <3 x double>] [<3 x double> zeroinitializer, <3 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>]
@Cd = external global <3 x double>
@5 = private constant [11 x i8] c"colorspace\00"
@6 = private constant [11 x i8] c"cspace:rgb\00"
@7 = private constant [3 x i8] c"Cd\00"

; Function Attrs: nounwind
define void @obj_Fluids_particlefluidsurface2_viz_vel(i64 %ptnum, i64 %vtxnum, i64 %primnum, i64 %id, i64 %numpt, i64 %numvtx, i64 %numprim, double %Time, double %TimeInc, double %Frame, double %life, double %age, i8* %OpInput2, i8* %OpInput3, i8* %OpInput4, i8* %OpInput1, <3 x double> %uv, <3 x double> %P, <3 x double> %v, <3 x double> %force, <3 x double> %Cd, <3 x double> %N, i8** %ramp_the_basis_strings, double* %ramp_the_key_positions, <3 x double>* %ramp_the_key_values, double %srcmin, double %srcmax) #0 {
__llvm_entry:
  %return = call double @"length@FV"(<3 x double> %v)
  %return34 = call double @"fit@FFFFFF"(double %return, double %srcmin, double %srcmax, double 0.000000e+00, double 1.000000e+00)
  %return39 = call <3 x double> @"spline@V[SF[V[F:SS"(i8** %ramp_the_basis_strings, double %return34, <3 x double>* %ramp_the_key_values, double* %ramp_the_key_positions, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @5, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @6, i64 0, i64 0))
  %gvalue = call <3 x double> @"_export@VSV"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @7, i64 0, i64 0), <3 x double> %return39) #2
  store <3 x double> %gvalue, <3 x double>* @Cd
  ret void
}

; Function Attrs: nounwind
declare double @"length@FV"(<3 x double>) #0

; Function Attrs: nounwind
declare double @"fit@FFFFFF"(double, double, double, double, double) #0

; Function Attrs: nounwind readnone
declare <3 x double> @"spline@V[SF[V[F:SS"(i8**, double, <3 x double>*, double*, i8*, i8*) #1

declare <3 x double> @"_export@VSV"(i8*, <3 x double>)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @obj_Fluids_particlefluidsurface2_viz_vel(i64 0, i64 0, i64 0, i64 -1, i64 0, i64 0, i64 0, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @0, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @0, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @0, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @0, i64 0, i64 0), <3 x double> zeroinitializer, <3 x double> zeroinitializer, <3 x double> zeroinitializer, <3 x double> zeroinitializer, <3 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, <3 x double> zeroinitializer, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @2, i64 0, i64 0), double* getelementptr inbounds ([2 x double], [2 x double]* @3, i64 0, i64 0), <3 x double>* getelementptr inbounds ([2 x <3 x double>], [2 x <3 x double>]* @4, i64 0, i64 0), double 0.000000e+00, double 1.000000e+00)
  ret void
}

attributes #0 = { nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind readonly }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"19.0.498"}
!2 = !{!"64"}

;_code_end
