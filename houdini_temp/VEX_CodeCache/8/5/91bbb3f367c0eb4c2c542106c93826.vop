;_name	/obj/geo1/scifi_panels1/add_random_color/attribvop1
; ModuleID = 'obj_geo1_scifi_panels1_add_random_color_attribvop1'

@rand_color = external global double
@primnum = external global i64
@0 = private constant [11 x i8] c"rand_color\00"
@1 = private constant [8 x i8] c"primnum\00"

define private void @"_obj_geo1_scifi_panels1_add_random_color_attribvop1_snippet1@FI"(double* %_bound_rand_color, i64* %_bound_primnum) nounwind alwaysinline {
__llvm_entry:
  %_bound_primnum1 = load i64* %_bound_primnum
  %cast = sitofp i64 %_bound_primnum1 to double
  %return = call double @"rand@FF"(double %cast)
  store double %return, double* %_bound_rand_color
  ret void
}

declare double @"rand@FF"(double) nounwind

define void @obj_geo1_scifi_panels1_add_random_color_attribvop1(double %rand_color, i64 %primnum) nounwind {
__llvm_entry:
  %0 = alloca i64
  %"<rand_color>" = alloca double
  store double %rand_color, double* %"<rand_color>"
  store i64 %primnum, i64* %0
  call void @"_obj_geo1_scifi_panels1_add_random_color_attribvop1_snippet1@FI"(double* %"<rand_color>", i64* %0)
  %evalue = load double* %"<rand_color>"
  %gvalue = call double @"_export@FSF"(i8* getelementptr inbounds ([11 x i8]* @0, i64 0, i64 0), double %evalue) nounwind readonly
  %gvalue3 = call i64 @"_export@ISI"(i8* getelementptr inbounds ([8 x i8]* @1, i64 0, i64 0), i64 %primnum) nounwind readonly
  store double %gvalue, double* @rand_color
  store i64 %gvalue3, i64* @primnum
  ret void
}

declare double @"_export@FSF"(i8*, double)

declare i64 @"_export@ISI"(i8*, i64)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @obj_geo1_scifi_panels1_add_random_color_attribvop1(double 0.000000e+00, i64 0)
  ret void
}

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = metadata !{metadata !"cvex"}
!1 = metadata !{metadata !"18.5.633"}
!2 = metadata !{metadata !"64"}

;_code_end
