;_name	<vexpression>
; ModuleID = '__vex_snippet'
source_filename = "__vex_snippet"

@scale = external global <3 x double>
@transform = external global <9 x double>
@0 = private constant [6 x i8] c"scale\00"
@1 = private constant [10 x i8] c"transform\00"

; Function Attrs: alwaysinline nounwind
define private void @"__vex_snippet_snippet@V3"(<3 x double>* %_bound_scale, <9 x double>* %_bound_transform) #0 {
__llvm_entry:
  %return = call <9 x double> @"ident@3"()
  %_bound_scale2 = load <3 x double>, <3 x double>* %_bound_scale
  %output = call <9 x double> @"prescale@3V"(<9 x double> %return, <3 x double> %_bound_scale2)
  store <9 x double> %output, <9 x double>* %_bound_transform
  ret void
}

; Function Attrs: nounwind
declare <9 x double> @"ident@3"() #1

; Function Attrs: nounwind readnone
declare <9 x double> @"prescale@3V"(<9 x double>, <3 x double>) #2

; Function Attrs: nounwind
define void @__vex_snippet(<3 x double> %scale, <9 x double> %transform) #1 {
__llvm_entry:
  %"<transform>" = alloca <9 x double>
  %0 = alloca <3 x double>
  store <9 x double> %transform, <9 x double>* %"<transform>"
  store <3 x double> %scale, <3 x double>* %0
  call void @"__vex_snippet_snippet@V3"(<3 x double>* %0, <9 x double>* %"<transform>")
  %gvalue = call <3 x double> @"_export@VSV"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @0, i64 0, i64 0), <3 x double> %scale) #3
  %evalue2 = load <9 x double>, <9 x double>* %"<transform>"
  %gvalue3 = call <9 x double> @"_export@3S3"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1, i64 0, i64 0), <9 x double> %evalue2) #3
  store <3 x double> %gvalue, <3 x double>* @scale
  store <9 x double> %gvalue3, <9 x double>* @transform
  ret void
}

declare <3 x double> @"_export@VSV"(i8*, <3 x double>)

declare <9 x double> @"_export@3S3"(i8*, <9 x double>)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @__vex_snippet(<3 x double> zeroinitializer, <9 x double> zeroinitializer)
  ret void
}

attributes #0 = { alwaysinline nounwind }
attributes #1 = { nounwind }
attributes #2 = { nounwind readnone }
attributes #3 = { nounwind readonly }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"19.0.498"}
!2 = !{!"64"}

;_code_end
