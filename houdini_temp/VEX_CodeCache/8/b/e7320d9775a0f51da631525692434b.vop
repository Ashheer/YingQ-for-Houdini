;_name	<vexpression>
; ModuleID = '__vex_snippet'
source_filename = "__vex_snippet"

@0 = private constant [0 x i64] zeroinitializer
@1 = private constant [0 x double] zeroinitializer
@2 = private constant [5 x i8] c"prim\00"
@3 = private constant [9 x i8] c"__clippt\00"
@4 = private constant [11 x i8] c"__centroid\00"
@5 = private constant [8 x i8] c"__piece\00"
@__clippiece = external global i64
@6 = private constant [12 x i8] c"__clippiece\00"

; Function Attrs: alwaysinline nounwind
define private void @"__vex_snippet_snippet@IVI"(i64* %_bound___origpt, <3 x double>* %_bound___centroid, i64* %_bound___clippiece) #0 {
__llvm_entry:
  %_bound___origpt1 = load i64, i64* %_bound___origpt
  %return = call i64 @"findattribvalcount@IISSI"(i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @2, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @3, i64 0, i64 0), i64 %_bound___origpt1)
  br label %cond

cond:                                             ; preds = %body, %__llvm_entry
  %i.0 = phi i64 [ 0, %__llvm_entry ], [ %output18, %body ]
  %distances.0 = phi double* [ getelementptr inbounds ([0 x double], [0 x double]* @1, i64 0, i64 0), %__llvm_entry ], [ %output, %body ]
  %other_prims.0 = phi i64* [ getelementptr inbounds ([0 x i64], [0 x i64]* @0, i64 0, i64 0), %__llvm_entry ], [ %output16, %body ]
  %return4 = call i64 @"lt@III"(i64 %i.0, i64 %return)
  %0 = icmp ne i64 %return4, 0
  br i1 %0, label %body, label %end

body:                                             ; preds = %cond
  %_bound___origpt5 = load i64, i64* %_bound___origpt
  %return7 = call i64 @"findattribval@IISSII"(i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @2, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @3, i64 0, i64 0), i64 %_bound___origpt5, i64 %i.0)
  %return9 = call <3 x double> @"prim@VISI"(i64 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @4, i64 0, i64 0), i64 %return7)
  %_bound___centroid11 = load <3 x double>, <3 x double>* %_bound___centroid
  %return13 = call double @"distance2@FVV"(<3 x double> %_bound___centroid11, <3 x double> %return9)
  %output = call double* @"append@[FF"(double* %distances.0, double %return13)
  %output16 = call i64* @"append@[II"(i64* %other_prims.0, i64 %return7)
  %output18 = add i64 %i.0, 1
  br label %cond

end:                                              ; preds = %cond
  %return20 = call i64* @"argsort@[I[F"(double* %distances.0)
  %return23 = call i64 @"getcomp@I[II"(i64* %return20, i64 0)
  %return24 = call i64 @"getcomp@I[II"(i64* %other_prims.0, i64 %return23)
  %return26 = call i64 @"prim@IISI"(i64 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @5, i64 0, i64 0), i64 %return24)
  store i64 %return26, i64* %_bound___clippiece
  ret void
}

; Function Attrs: nounwind
declare i64 @"findattribvalcount@IISSI"(i64, i8*, i8*, i64) #1

; Function Attrs: nounwind readnone
declare i64 @"lt@III"(i64, i64) #2

; Function Attrs: nounwind
declare i64 @"findattribval@IISSII"(i64, i8*, i8*, i64, i64) #1

; Function Attrs: nounwind
declare <3 x double> @"prim@VISI"(i64, i8*, i64) #1

; Function Attrs: nounwind
declare double @"distance2@FVV"(<3 x double>, <3 x double>) #1

; Function Attrs: nounwind
declare double* @"append@[FF"(double*, double) #1

; Function Attrs: nounwind
declare i64* @"append@[II"(i64*, i64) #1

; Function Attrs: nounwind readnone
declare i64* @"argsort@[I[F"(double*) #2

; Function Attrs: nounwind readnone
declare i64 @"getcomp@I[II"(i64*, i64) #2

; Function Attrs: nounwind
declare i64 @"prim@IISI"(i64, i8*, i64) #1

; Function Attrs: nounwind
define void @__vex_snippet(i64 %__origpt, <3 x double> %__centroid, i64 %__clippiece) #1 {
__llvm_entry:
  %"<__clippiece>" = alloca i64
  %0 = alloca i64
  %1 = alloca <3 x double>
  store i64 %__clippiece, i64* %"<__clippiece>"
  store i64 %__origpt, i64* %0
  store <3 x double> %__centroid, <3 x double>* %1
  call void @"__vex_snippet_snippet@IVI"(i64* %0, <3 x double>* %1, i64* %"<__clippiece>")
  %evalue = load i64, i64* %"<__clippiece>"
  %gvalue = call i64 @"_export@ISI"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @6, i64 0, i64 0), i64 %evalue) #3
  store i64 %gvalue, i64* @__clippiece
  ret void
}

declare i64 @"_export@ISI"(i8*, i64)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @__vex_snippet(i64 0, <3 x double> zeroinitializer, i64 0)
  ret void
}

attributes #0 = { alwaysinline nounwind }
attributes #1 = { nounwind }
attributes #2 = { nounwind readnone }
attributes #3 = { nounwind readonly }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"19.0.498"}
!2 = !{!"64"}

;_code_end
