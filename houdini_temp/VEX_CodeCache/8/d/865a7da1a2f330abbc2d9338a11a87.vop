;_name	/obj/rope/dopnet1/popgrains1/create_constraint_attribs/geometryvop1
; ModuleID = 'obj_rope_dopnet1_popgrains1_create_constraint_attribs_geometryvop1'
source_filename = "obj_rope_dopnet1_popgrains1_create_constraint_attribs_geometryvop1"

@0 = private constant [0 x i64] zeroinitializer
@1 = private constant [0 x double] zeroinitializer
@2 = private constant [8 x i8] c"isrigid\00"
@3 = private constant [7 x i8] c"strain\00"
@4 = private constant [11 x i8] c"restlength\00"
@5 = private constant [9 x i8] c"strength\00"
@ptnum = external global i64
@ec = external global i64*
@eprim = external global i64*
@ed = external global double*
@estrain = external global double*
@estrength = external global double*
@6 = private constant [6 x i8] c"ptnum\00"
@7 = private constant [3 x i8] c"ec\00"
@8 = private constant [6 x i8] c"eprim\00"
@9 = private constant [3 x i8] c"ed\00"
@10 = private constant [8 x i8] c"estrain\00"
@11 = private constant [10 x i8] c"estrength\00"

; Function Attrs: alwaysinline nounwind
define private void @"_obj_rope_dopnet1_popgrains1_create_constraint_attribs_geometryvop1_snippet1@I[I[I[F[F[F"(i64* %_bound_ptnum, i64** %_bound_ec, i64** %_bound_eprim, double** %_bound_ed, double** %_bound_estrain, double** %_bound_estrength) #0 {
__llvm_entry:
  %_bound_ptnum1 = load i64, i64* %_bound_ptnum
  %return = call i64* @"pointprims@[III"(i64 0, i64 %_bound_ptnum1)
  %return3 = call i64 @"len@I[I"(i64* %return)
  br label %cond

cond:                                             ; preds = %iter, %__llvm_entry
  %estrength.0 = phi double* [ getelementptr inbounds ([0 x double], [0 x double]* @1, i64 0, i64 0), %__llvm_entry ], [ %estrength.1, %iter ]
  %__impl_foreach_index_1.0 = phi i64 [ 0, %__llvm_entry ], [ %output47, %iter ]
  %estrain.0 = phi double* [ getelementptr inbounds ([0 x double], [0 x double]* @1, i64 0, i64 0), %__llvm_entry ], [ %estrain.1, %iter ]
  %ed.0 = phi double* [ getelementptr inbounds ([0 x double], [0 x double]* @1, i64 0, i64 0), %__llvm_entry ], [ %ed.1, %iter ]
  %eprim.0 = phi i64* [ getelementptr inbounds ([0 x i64], [0 x i64]* @0, i64 0, i64 0), %__llvm_entry ], [ %eprim.1, %iter ]
  %ec.0 = phi i64* [ getelementptr inbounds ([0 x i64], [0 x i64]* @0, i64 0, i64 0), %__llvm_entry ], [ %ec.1, %iter ]
  %return6 = call i64 @"lt@III"(i64 %__impl_foreach_index_1.0, i64 %return3)
  %0 = icmp ne i64 %return6, 0
  br i1 %0, label %body, label %end

body:                                             ; preds = %cond
  %return9 = call i64 @"getcomp@I[II"(i64* %return, i64 %__impl_foreach_index_1.0)
  %return11 = call i64 @"prim@IISI"(i64 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @2, i64 0, i64 0), i64 %return9)
  %1 = icmp ne i64 %return11, 0
  br i1 %1, label %iter, label %end13

end:                                              ; preds = %cond
  store i64* %ec.0, i64** %_bound_ec
  store i64* %eprim.0, i64** %_bound_eprim
  store double* %ed.0, double** %_bound_ed
  store double* %estrain.0, double** %_bound_estrain
  store double* %estrength.0, double** %_bound_estrength
  ret void

iter:                                             ; preds = %body, %end23
  %estrength.1 = phi double* [ %estrength.0, %body ], [ %output45, %end23 ]
  %estrain.1 = phi double* [ %estrain.0, %body ], [ %output42, %end23 ]
  %ed.1 = phi double* [ %ed.0, %body ], [ %output39, %end23 ]
  %eprim.1 = phi i64* [ %eprim.0, %body ], [ %output36, %end23 ]
  %ec.1 = phi i64* [ %ec.0, %body ], [ %output, %end23 ]
  %output47 = add i64 %__impl_foreach_index_1.0, 1
  br label %cond

end13:                                            ; preds = %body
  %return15 = call i64* @"primpoints@[III"(i64 0, i64 %return9)
  %return17 = call i64 @"getcomp@I[II"(i64* %return15, i64 0)
  %_bound_ptnum20 = load i64, i64* %_bound_ptnum
  %return21 = call i64 @"eq@III"(i64 %return17, i64 %_bound_ptnum20)
  %2 = icmp ne i64 %return21, 0
  br i1 %2, label %true22, label %end23

true22:                                           ; preds = %end13
  %return25 = call i64 @"getcomp@I[II"(i64* %return15, i64 1)
  br label %end23

end23:                                            ; preds = %true22, %end13
  %ptj.0 = phi i64 [ %return25, %true22 ], [ %return17, %end13 ]
  %return27 = call double @"prim@FISI"(i64 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @3, i64 0, i64 0), i64 %return9)
  %return29 = call double @"prim@FISI"(i64 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @4, i64 0, i64 0), i64 %return9)
  %return31 = call double @"prim@FISI"(i64 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @5, i64 0, i64 0), i64 %return9)
  %output = call i64* @"append@[II"(i64* %ec.0, i64 %ptj.0)
  %output36 = call i64* @"append@[II"(i64* %eprim.0, i64 %return9)
  %output39 = call double* @"append@[FF"(double* %ed.0, double %return29)
  %output42 = call double* @"append@[FF"(double* %estrain.0, double %return27)
  %output45 = call double* @"append@[FF"(double* %estrength.0, double %return31)
  br label %iter
}

; Function Attrs: nounwind
declare i64* @"pointprims@[III"(i64, i64) #1

; Function Attrs: nounwind readnone
declare i64 @"len@I[I"(i64*) #2

; Function Attrs: nounwind readnone
declare i64 @"lt@III"(i64, i64) #2

; Function Attrs: nounwind readnone
declare i64 @"getcomp@I[II"(i64*, i64) #2

; Function Attrs: nounwind
declare i64 @"prim@IISI"(i64, i8*, i64) #1

; Function Attrs: nounwind
declare i64* @"primpoints@[III"(i64, i64) #1

; Function Attrs: nounwind readnone
declare i64 @"eq@III"(i64, i64) #2

; Function Attrs: nounwind
declare double @"prim@FISI"(i64, i8*, i64) #1

; Function Attrs: nounwind
declare i64* @"append@[II"(i64*, i64) #1

; Function Attrs: nounwind
declare double* @"append@[FF"(double*, double) #1

; Function Attrs: nounwind
define void @obj_rope_dopnet1_popgrains1_create_constraint_attribs_geometryvop1(i64 %ptnum, i64* %ec, i64* %eprim, double* %ed, double* %estrain, double* %estrength) #1 {
__llvm_entry:
  %"<ec>" = alloca i64*
  %"<eprim>" = alloca i64*
  %"<ed>" = alloca double*
  %"<estrain>" = alloca double*
  %"<estrength>" = alloca double*
  %0 = alloca i64
  store i64* %ec, i64** %"<ec>"
  store i64* %eprim, i64** %"<eprim>"
  store double* %ed, double** %"<ed>"
  store double* %estrain, double** %"<estrain>"
  store double* %estrength, double** %"<estrength>"
  store i64 %ptnum, i64* %0
  call void @"_obj_rope_dopnet1_popgrains1_create_constraint_attribs_geometryvop1_snippet1@I[I[I[F[F[F"(i64* %0, i64** %"<ec>", i64** %"<eprim>", double** %"<ed>", double** %"<estrain>", double** %"<estrength>")
  %gvalue = call i64 @"_export@ISI"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @6, i64 0, i64 0), i64 %ptnum) #3
  %evalue2 = load i64*, i64** %"<ec>"
  %gvalue3 = call i64* @"_export@[IS[I"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @7, i64 0, i64 0), i64* %evalue2) #3
  %evalue4 = load i64*, i64** %"<eprim>"
  %gvalue5 = call i64* @"_export@[IS[I"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @8, i64 0, i64 0), i64* %evalue4) #3
  %evalue6 = load double*, double** %"<ed>"
  %gvalue7 = call double* @"_export@[FS[F"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @9, i64 0, i64 0), double* %evalue6) #3
  %evalue8 = load double*, double** %"<estrain>"
  %gvalue9 = call double* @"_export@[FS[F"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @10, i64 0, i64 0), double* %evalue8) #3
  %evalue10 = load double*, double** %"<estrength>"
  %gvalue11 = call double* @"_export@[FS[F"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @11, i64 0, i64 0), double* %evalue10) #3
  store i64 %gvalue, i64* @ptnum
  store i64* %gvalue3, i64** @ec
  store i64* %gvalue5, i64** @eprim
  store double* %gvalue7, double** @ed
  store double* %gvalue9, double** @estrain
  store double* %gvalue11, double** @estrength
  ret void
}

declare i64 @"_export@ISI"(i8*, i64)

declare i64* @"_export@[IS[I"(i8*, i64*)

declare double* @"_export@[FS[F"(i8*, double*)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @obj_rope_dopnet1_popgrains1_create_constraint_attribs_geometryvop1(i64 0, i64* getelementptr inbounds ([0 x i64], [0 x i64]* @0, i64 0, i64 0), i64* getelementptr inbounds ([0 x i64], [0 x i64]* @0, i64 0, i64 0), double* getelementptr inbounds ([0 x double], [0 x double]* @1, i64 0, i64 0), double* getelementptr inbounds ([0 x double], [0 x double]* @1, i64 0, i64 0), double* getelementptr inbounds ([0 x double], [0 x double]* @1, i64 0, i64 0))
  ret void
}

attributes #0 = { alwaysinline nounwind }
attributes #1 = { nounwind }
attributes #2 = { nounwind readnone }
attributes #3 = { nounwind readonly }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"19.0.531"}
!2 = !{!"64"}

;_code_end
