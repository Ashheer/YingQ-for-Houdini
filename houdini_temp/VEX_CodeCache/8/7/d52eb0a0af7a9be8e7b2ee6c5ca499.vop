;_name	/obj/cable_ying1/cable_ying1/vellumsolver1/dopnet1/vellumsolver1/point_update_2nd_order_fallback/geometrywrangle1/geometryvop1
; ModuleID = 'obj_cable_ying1_cable_ying1_vellumsolver1_dopnet1_vellumsolver1_point_update_2nd_order_fallback_geometrywrangle1_geometryvop1'
source_filename = "obj_cable_ying1_cable_ying1_vellumsolver1_dopnet1_vellumsolver1_point_update_2nd_order_fallback_geometrywrangle1_geometryvop1"

@P = external global <3 x double>
@0 = private constant [2 x i8] c"P\00"

; Function Attrs: alwaysinline nounwind
define private void @"_obj_cable_ying1_cable_ying1_vellumsolver1_dopnet1_vellumsolver1_point_update_2nd_order_fallback_geometrywrangle1_geometryvop1_snippet1@IFIVFVVVVVF"(i64* %_bound_fallback, double* %_bound_mass, i64* %_bound_stopped, <3 x double>* %_bound_P, double* %_bound_TimeInc, <3 x double>* %_bound_v, <3 x double>* %_bound_vprevious, <3 x double>* %_bound_vlast, <3 x double>* %_bound_pprevious, <3 x double>* %_bound_plast, double* %_bound_Timeinc) #0 {
__llvm_entry:
  %_bound_fallback1 = load i64, i64* %_bound_fallback
  %0 = icmp ne i64 %_bound_fallback1, 0
  %_bound_mass2 = load double, double* %_bound_mass
  %return = fcmp ogt double %_bound_mass2, 0.000000e+00
  %return3 = zext i1 %return to i64
  %_bound_stopped4 = load i64, i64* %_bound_stopped
  %return5 = and i64 %_bound_stopped4, 1
  %return6 = call i64 @"not@II"(i64 %return5)
  %return7 = call i64 @"and@III"(i64 %return3, i64 %return6)
  %1 = icmp ne i64 %return7, 0
  br i1 %0, label %true, label %false

true:                                             ; preds = %__llvm_entry
  br i1 %1, label %true8, label %end

false:                                            ; preds = %__llvm_entry
  br i1 %1, label %true21, label %end

end:                                              ; preds = %false, %true21, %true, %true8
  ret void

true8:                                            ; preds = %true
  %_bound_P10 = load <3 x double>, <3 x double>* %_bound_P
  %_bound_TimeInc11 = load double, double* %_bound_TimeInc
  %_bound_v12 = load <3 x double>, <3 x double>* %_bound_v
  %cast = call <3 x double> @"set@VF"(double %_bound_TimeInc11)
  %output = call <3 x double> @"mul@VV"(<3 x double> %cast, <3 x double> %_bound_v12)
  %output13 = call <3 x double> @"add@VV"(<3 x double> %_bound_P10, <3 x double> %output)
  store <3 x double> %output13, <3 x double>* %_bound_P
  br label %end

true21:                                           ; preds = %false
  %_bound_v23 = load <3 x double>, <3 x double>* %_bound_v
  %_bound_vprevious24 = load <3 x double>, <3 x double>* %_bound_vprevious
  %output25 = call <3 x double> @"sub@VV"(<3 x double> %_bound_v23, <3 x double> %_bound_vprevious24)
  %cast27 = call <3 x double> @"set@VI"(i64 4)
  %output28 = call <3 x double> @"mul@VV"(<3 x double> %cast27, <3 x double> %_bound_vprevious24)
  %_bound_vlast29 = load <3 x double>, <3 x double>* %_bound_vlast
  %output30 = call <3 x double> @"sub@VV"(<3 x double> %output28, <3 x double> %_bound_vlast29)
  %cast32 = call <3 x double> @"set@VI"(i64 2)
  %output33 = call <3 x double> @"mul@VV"(<3 x double> %cast32, <3 x double> %output25)
  %output34 = call <3 x double> @"add@VV"(<3 x double> %output30, <3 x double> %output33)
  %cast35 = call <3 x double> @"set@VI"(i64 3)
  %output36 = call <3 x double> @"div@VV"(<3 x double> %output34, <3 x double> %cast35)
  %_bound_pprevious37 = load <3 x double>, <3 x double>* %_bound_pprevious
  %output39 = call <3 x double> @"mul@VV"(<3 x double> %cast27, <3 x double> %_bound_pprevious37)
  %_bound_plast40 = load <3 x double>, <3 x double>* %_bound_plast
  %output41 = call <3 x double> @"sub@VV"(<3 x double> %output39, <3 x double> %_bound_plast40)
  %_bound_Timeinc42 = load double, double* %_bound_Timeinc
  %output43 = fmul double 2.000000e+00, %_bound_Timeinc42
  %cast45 = call <3 x double> @"set@VF"(double %output43)
  %output46 = call <3 x double> @"mul@VV"(<3 x double> %cast45, <3 x double> %output36)
  %output47 = call <3 x double> @"add@VV"(<3 x double> %output41, <3 x double> %output46)
  %output49 = call <3 x double> @"div@VV"(<3 x double> %output47, <3 x double> %cast35)
  store <3 x double> %output49, <3 x double>* %_bound_P
  br label %end
}

; Function Attrs: nounwind readnone
declare i64 @"not@II"(i64) #1

; Function Attrs: nounwind readnone
declare i64 @"and@III"(i64, i64) #1

; Function Attrs: nounwind readnone
declare <3 x double> @"set@VF"(double) #1

; Function Attrs: nounwind readnone
declare <3 x double> @"mul@VV"(<3 x double>, <3 x double>) #1

; Function Attrs: nounwind readnone
declare <3 x double> @"add@VV"(<3 x double>, <3 x double>) #1

; Function Attrs: nounwind readnone
declare <3 x double> @"sub@VV"(<3 x double>, <3 x double>) #1

; Function Attrs: nounwind readnone
declare <3 x double> @"set@VI"(i64) #1

; Function Attrs: nounwind readnone
declare <3 x double> @"div@VV"(<3 x double>, <3 x double>) #1

; Function Attrs: nounwind
define void @obj_cable_ying1_cable_ying1_vellumsolver1_dopnet1_vellumsolver1_point_update_2nd_order_fallback_geometrywrangle1_geometryvop1(i64 %fallback, double %mass, i64 %stopped, <3 x double> %P, double %TimeInc, <3 x double> %v, <3 x double> %vprevious, <3 x double> %vlast, <3 x double> %pprevious, <3 x double> %plast, double %Timeinc) #2 {
__llvm_entry:
  %"<P>" = alloca <3 x double>
  %0 = alloca i64
  %1 = alloca double
  %2 = alloca i64
  %3 = alloca double
  %4 = alloca <3 x double>
  %5 = alloca <3 x double>
  %6 = alloca <3 x double>
  %7 = alloca <3 x double>
  %8 = alloca <3 x double>
  %9 = alloca double
  store <3 x double> %P, <3 x double>* %"<P>"
  store i64 %fallback, i64* %0
  store double %mass, double* %1
  store i64 %stopped, i64* %2
  store double %TimeInc, double* %3
  store <3 x double> %v, <3 x double>* %4
  store <3 x double> %vprevious, <3 x double>* %5
  store <3 x double> %vlast, <3 x double>* %6
  store <3 x double> %pprevious, <3 x double>* %7
  store <3 x double> %plast, <3 x double>* %8
  store double %Timeinc, double* %9
  call void @"_obj_cable_ying1_cable_ying1_vellumsolver1_dopnet1_vellumsolver1_point_update_2nd_order_fallback_geometrywrangle1_geometryvop1_snippet1@IFIVFVVVVVF"(i64* %0, double* %1, i64* %2, <3 x double>* %"<P>", double* %3, <3 x double>* %4, <3 x double>* %5, <3 x double>* %6, <3 x double>* %7, <3 x double>* %8, double* %9)
  %evalue = load <3 x double>, <3 x double>* %"<P>"
  %gvalue = call <3 x double> @"_export@VSV"(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @0, i64 0, i64 0), <3 x double> %evalue) #3
  store <3 x double> %gvalue, <3 x double>* @P
  ret void
}

declare <3 x double> @"_export@VSV"(i8*, <3 x double>)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @obj_cable_ying1_cable_ying1_vellumsolver1_dopnet1_vellumsolver1_point_update_2nd_order_fallback_geometrywrangle1_geometryvop1(i64 0, double 0.000000e+00, i64 0, <3 x double> zeroinitializer, double 0.000000e+00, <3 x double> zeroinitializer, <3 x double> zeroinitializer, <3 x double> zeroinitializer, <3 x double> zeroinitializer, <3 x double> zeroinitializer, double 0.000000e+00)
  ret void
}

attributes #0 = { alwaysinline nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind }
attributes #3 = { nounwind readonly }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"19.0.531"}
!2 = !{!"64"}

;_code_end
