;_name	<vexpression>
; ModuleID = '__vex_snippet'
source_filename = "__vex_snippet"

@0 = private constant [7 x i8] c"closed\00"
@primnum = external global i64
@outgrp = external global i64
@1 = private constant [8 x i8] c"primnum\00"
@2 = private constant [7 x i8] c"outgrp\00"

; Function Attrs: alwaysinline nounwind
define private void @"__vex_snippet_snippet@II"(i64* %_bound_primnum, i64* %_bound_outgrp) #0 {
__llvm_entry:
  %return = call i64 @"nprimitives@II"(i64 1)
  %return1 = call i64 @"gt@III"(i64 %return, i64 1)
  %_bound_primnum3 = load i64, i64* %_bound_primnum
  %return4 = call i64 @"primvertexcount@III"(i64 %return1, i64 %_bound_primnum3)
  %_bound_primnum6 = load i64, i64* %_bound_primnum
  %return7 = call i64 @"primpoint@IIII"(i64 %return1, i64 %_bound_primnum6, i64 0)
  %_bound_primnum9 = load i64, i64* %_bound_primnum
  %output = sub i64 %return4, 1
  %return11 = call i64 @"primpoint@IIII"(i64 %return1, i64 %_bound_primnum9, i64 %output)
  %_bound_primnum13 = load i64, i64* %_bound_primnum
  %return14 = call i64 @"primintrinsic@IISI"(i64 %return1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @0, i64 0, i64 0), i64 %_bound_primnum13)
  %return17 = call i64 @"eq@III"(i64 %return7, i64 %return11)
  %return18 = call i64 @"or@III"(i64 %return14, i64 %return17)
  store i64 %return18, i64* %_bound_outgrp
  ret void
}

; Function Attrs: nounwind
declare i64 @"nprimitives@II"(i64) #1

; Function Attrs: nounwind readnone
declare i64 @"gt@III"(i64, i64) #2

; Function Attrs: nounwind
declare i64 @"primvertexcount@III"(i64, i64) #1

; Function Attrs: nounwind
declare i64 @"primpoint@IIII"(i64, i64, i64) #1

; Function Attrs: nounwind
declare i64 @"primintrinsic@IISI"(i64, i8*, i64) #1

; Function Attrs: nounwind readnone
declare i64 @"eq@III"(i64, i64) #2

; Function Attrs: nounwind readnone
declare i64 @"or@III"(i64, i64) #2

; Function Attrs: nounwind
define void @__vex_snippet(i64 %primnum, i64 %outgrp) #1 {
__llvm_entry:
  %"<outgrp>" = alloca i64
  %0 = alloca i64
  store i64 %outgrp, i64* %"<outgrp>"
  store i64 %primnum, i64* %0
  call void @"__vex_snippet_snippet@II"(i64* %0, i64* %"<outgrp>")
  %gvalue = call i64 @"_export@ISI"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1, i64 0, i64 0), i64 %primnum) #3
  %evalue2 = load i64, i64* %"<outgrp>"
  %gvalue3 = call i64 @"_export@ISI"(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @2, i64 0, i64 0), i64 %evalue2) #3
  store i64 %gvalue, i64* @primnum
  store i64 %gvalue3, i64* @outgrp
  ret void
}

declare i64 @"_export@ISI"(i8*, i64)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @__vex_snippet(i64 0, i64 0)
  ret void
}

attributes #0 = { alwaysinline nounwind }
attributes #1 = { nounwind }
attributes #2 = { nounwind readnone }
attributes #3 = { nounwind readonly }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"19.0.531"}
!2 = !{!"64"}

;_code_end
