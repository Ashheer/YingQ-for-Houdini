;_name	/obj/geo1/MOPs_Move_Along_Spline/Extract_Attributes1/do_extraction_prims/attribvop1
; ModuleID = 'obj_geo1_MOPs_Move_Along_Spline_Extract_Attributes1_do_extraction_prims_attribvop1'

@0 = private constant [9 x i8] c"typename\00"
@1 = private constant [15 x i8] c"PackedGeometry\00"
@2 = private constant [15 x i8] c"PackedFragment\00"
@3 = private constant [19 x i8] c"PackedDiskSequence\00"
@4 = private constant [11 x i8] c"AlembicRef\00"
@5 = private constant [10 x i8] c"PackedUSD\00"
@6 = private constant [10 x i8] c"transform\00"
@7 = private constant [18 x i8] c"do_full_transform\00"
@8 = private constant [20 x i8] c"packedfulltransform\00"
@9 = private constant [15 x i8] c"simplify_scale\00"
@10 = private constant [9 x i8] c"do_pivot\00"
@11 = private constant [6 x i8] c"pivot\00"
@elemnum = external global i64
@__haspackedtransform = external global i64
@orient = external global <4 x double>
@N = external global <3 x double>
@up = external global <3 x double>
@pscale = external global double
@scale = external global <3 x double>
@pivot = external global <3 x double>
@12 = private constant [8 x i8] c"elemnum\00"
@13 = private constant [21 x i8] c"__haspackedtransform\00"
@14 = private constant [7 x i8] c"orient\00"
@15 = private constant [2 x i8] c"N\00"
@16 = private constant [3 x i8] c"up\00"
@17 = private constant [7 x i8] c"pscale\00"
@18 = private constant [6 x i8] c"scale\00"

define private void @"_obj_geo1_MOPs_Move_Along_Spline_Extract_Attributes1_do_extraction_prims_attribvop1_snippet1@IIPVVFVV"(i64* %_bound_elemnum, i64* %_bound___haspackedtransform, <4 x double>* %_bound_orient, <3 x double>* %_bound_N, <3 x double>* %_bound_up, double* %_bound_pscale, <3 x double>* %_bound_scale, <3 x double>* %_bound_pivot) nounwind alwaysinline {
__llvm_entry:
  %_bound_elemnum1 = load i64* %_bound_elemnum
  %return = call i8* @"primintrinsic@SISI"(i64 0, i8* getelementptr inbounds ([9 x i8]* @0, i64 0, i64 0), i64 %_bound_elemnum1)
  store i64 0, i64* %_bound___haspackedtransform
  %return3 = call i64 @"eq@ISS"(i8* %return, i8* getelementptr inbounds ([15 x i8]* @1, i64 0, i64 0))
  %return5 = call i64 @"eq@ISS"(i8* %return, i8* getelementptr inbounds ([15 x i8]* @2, i64 0, i64 0))
  %return6 = call i64 @"or@III"(i64 %return3, i64 %return5)
  %return8 = call i64 @"eq@ISS"(i8* %return, i8* getelementptr inbounds ([19 x i8]* @3, i64 0, i64 0))
  %return9 = call i64 @"or@III"(i64 %return6, i64 %return8)
  %return11 = call i64 @"eq@ISS"(i8* %return, i8* getelementptr inbounds ([11 x i8]* @4, i64 0, i64 0))
  %return12 = call i64 @"or@III"(i64 %return9, i64 %return11)
  %return14 = call i64 @"eq@ISS"(i8* %return, i8* getelementptr inbounds ([10 x i8]* @5, i64 0, i64 0))
  %return15 = call i64 @"or@III"(i64 %return12, i64 %return14)
  %0 = icmp ne i64 %return15, 0
  br i1 %0, label %true, label %end

true:                                             ; preds = %__llvm_entry
  store i64 1, i64* %_bound___haspackedtransform
  %_bound_elemnum16 = load i64* %_bound_elemnum
  %return17 = call <9 x double> @"primintrinsic@3ISI"(i64 0, i8* getelementptr inbounds ([10 x i8]* @6, i64 0, i64 0), i64 %_bound_elemnum16)
  %return18 = call i64 @"chi@IS"(i8* getelementptr inbounds ([18 x i8]* @7, i64 0, i64 0))
  %1 = icmp ne i64 %return18, 0
  br i1 %1, label %true19, label %end20

end:                                              ; preds = %end37, %true64, %__llvm_entry
  ret void

true19:                                           ; preds = %true
  %_bound_elemnum21 = load i64* %_bound_elemnum
  %return22 = call <16 x double> @"primintrinsic@4ISI"(i64 0, i8* getelementptr inbounds ([20 x i8]* @8, i64 0, i64 0), i64 %_bound_elemnum21)
  %cast = call <9 x double> @"set@34"(<16 x double> %return22)
  br label %end20

end20:                                            ; preds = %true19, %true
  %m.0 = phi <9 x double> [ %cast, %true19 ], [ %return17, %true ]
  %cast25 = call <16 x double> @"set@43"(<9 x double> %m.0)
  %return26 = call <3 x double> @"cracktransform@VIIIV4"(i64 0, i64 0, i64 2, <3 x double> zeroinitializer, <16 x double> %cast25)
  %return28 = call <4 x double> @"quaternion@P3"(<9 x double> %m.0)
  store <4 x double> %return28, <4 x double>* %_bound_orient
  %output = call <3 x double> @"mul@V3"(<3 x double> <double 0.000000e+00, double 0.000000e+00, double 1.000000e+00>, <9 x double> %m.0)
  %return31 = call <3 x double> @"normalize@VV"(<3 x double> %output)
  store <3 x double> %return31, <3 x double>* %_bound_N
  %output33 = call <3 x double> @"mul@V3"(<3 x double> <double 0.000000e+00, double 1.000000e+00, double 0.000000e+00>, <9 x double> %m.0)
  %return34 = call <3 x double> @"normalize@VV"(<3 x double> %output33)
  store <3 x double> %return34, <3 x double>* %_bound_up
  store double 1.000000e+00, double* %_bound_pscale
  %return35 = call i64 @"chi@IS"(i8* getelementptr inbounds ([15 x i8]* @9, i64 0, i64 0))
  %2 = icmp ne i64 %return35, 0
  br i1 %2, label %true36, label %end37

true36:                                           ; preds = %end20
  %return39 = call double @"getcomp@FVI"(<3 x double> %return26, i64 0)
  %return41 = call double @"getcomp@FVI"(<3 x double> %return26, i64 1)
  %output42 = fsub double %return39, %return41
  %return43 = call double @"abs@FF"(double %output42)
  %return45 = fcmp olt double %return43, 1.000000e-06
  %return46 = zext i1 %return45 to i64
  %return50 = call double @"getcomp@FVI"(<3 x double> %return26, i64 2)
  %output51 = fsub double %return41, %return50
  %return52 = call double @"abs@FF"(double %output51)
  %return54 = fcmp olt double %return52, 1.000000e-06
  %return55 = zext i1 %return54 to i64
  %return56 = call i64 @"and@III"(i64 %return46, i64 %return55)
  %3 = icmp ne i64 %return56, 0
  br i1 %3, label %true57, label %end37

end37:                                            ; preds = %true36, %true57, %end20
  %scale.0 = phi <3 x double> [ %cast61, %true57 ], [ %return26, %true36 ], [ %return26, %end20 ]
  store <3 x double> %scale.0, <3 x double>* %_bound_scale
  %return63 = call i64 @"chi@IS"(i8* getelementptr inbounds ([9 x i8]* @10, i64 0, i64 0))
  %4 = icmp ne i64 %return63, 0
  br i1 %4, label %true64, label %end

true57:                                           ; preds = %true36
  store double %return39, double* %_bound_pscale
  %cast61 = call <3 x double> @"set@VI"(i64 1)
  br label %end37

true64:                                           ; preds = %end37
  %_bound_elemnum66 = load i64* %_bound_elemnum
  %return67 = call <3 x double> @"primintrinsic@VISI"(i64 0, i8* getelementptr inbounds ([6 x i8]* @11, i64 0, i64 0), i64 %_bound_elemnum66)
  store <3 x double> %return67, <3 x double>* %_bound_pivot
  br label %end
}

declare i8* @"primintrinsic@SISI"(i64, i8*, i64) nounwind

declare i64 @"eq@ISS"(i8*, i8*) nounwind readnone

declare i64 @"or@III"(i64, i64) nounwind readnone

declare <9 x double> @"primintrinsic@3ISI"(i64, i8*, i64) nounwind

declare i64 @"chi@IS"(i8*) nounwind readnone

declare <16 x double> @"primintrinsic@4ISI"(i64, i8*, i64) nounwind

declare <9 x double> @"set@34"(<16 x double>) nounwind

declare <16 x double> @"set@43"(<9 x double>) nounwind

declare <3 x double> @"cracktransform@VIIIV4"(i64, i64, i64, <3 x double>, <16 x double>) nounwind readnone

declare <4 x double> @"quaternion@P3"(<9 x double>) nounwind readnone

declare <3 x double> @"mul@V3"(<3 x double>, <9 x double>) nounwind

declare <3 x double> @"normalize@VV"(<3 x double>) nounwind

declare double @"getcomp@FVI"(<3 x double>, i64) nounwind readnone

declare double @"abs@FF"(double) nounwind

declare i64 @"and@III"(i64, i64) nounwind readnone

declare <3 x double> @"set@VI"(i64) nounwind readnone

declare <3 x double> @"primintrinsic@VISI"(i64, i8*, i64) nounwind

define void @obj_geo1_MOPs_Move_Along_Spline_Extract_Attributes1_do_extraction_prims_attribvop1(i64 %elemnum, i64 %__haspackedtransform, <4 x double> %orient, <3 x double> %N, <3 x double> %up, double %pscale, <3 x double> %scale, <3 x double> %pivot) nounwind {
__llvm_entry:
  %"<__haspackedtransform>" = alloca i64
  %"<orient>" = alloca <4 x double>
  %"<N>" = alloca <3 x double>
  %"<up>" = alloca <3 x double>
  %"<pscale>" = alloca double
  %"<scale>" = alloca <3 x double>
  %"<pivot>" = alloca <3 x double>
  %0 = alloca i64
  store i64 %__haspackedtransform, i64* %"<__haspackedtransform>"
  store <4 x double> %orient, <4 x double>* %"<orient>"
  store <3 x double> %N, <3 x double>* %"<N>"
  store <3 x double> %up, <3 x double>* %"<up>"
  store double %pscale, double* %"<pscale>"
  store <3 x double> %scale, <3 x double>* %"<scale>"
  store <3 x double> %pivot, <3 x double>* %"<pivot>"
  store i64 %elemnum, i64* %0
  call void @"_obj_geo1_MOPs_Move_Along_Spline_Extract_Attributes1_do_extraction_prims_attribvop1_snippet1@IIPVVFVV"(i64* %0, i64* %"<__haspackedtransform>", <4 x double>* %"<orient>", <3 x double>* %"<N>", <3 x double>* %"<up>", double* %"<pscale>", <3 x double>* %"<scale>", <3 x double>* %"<pivot>")
  %gvalue = call i64 @"_export@ISI"(i8* getelementptr inbounds ([8 x i8]* @12, i64 0, i64 0), i64 %elemnum) nounwind readonly
  %evalue2 = load i64* %"<__haspackedtransform>"
  %gvalue3 = call i64 @"_export@ISI"(i8* getelementptr inbounds ([21 x i8]* @13, i64 0, i64 0), i64 %evalue2) nounwind readonly
  %evalue4 = load <4 x double>* %"<orient>"
  %gvalue5 = call <4 x double> @"_export@PSP"(i8* getelementptr inbounds ([7 x i8]* @14, i64 0, i64 0), <4 x double> %evalue4) nounwind readonly
  %evalue6 = load <3 x double>* %"<N>"
  %gvalue7 = call <3 x double> @"_export@VSV"(i8* getelementptr inbounds ([2 x i8]* @15, i64 0, i64 0), <3 x double> %evalue6) nounwind readonly
  %evalue8 = load <3 x double>* %"<up>"
  %gvalue9 = call <3 x double> @"_export@VSV"(i8* getelementptr inbounds ([3 x i8]* @16, i64 0, i64 0), <3 x double> %evalue8) nounwind readonly
  %evalue10 = load double* %"<pscale>"
  %gvalue11 = call double @"_export@FSF"(i8* getelementptr inbounds ([7 x i8]* @17, i64 0, i64 0), double %evalue10) nounwind readonly
  %evalue12 = load <3 x double>* %"<scale>"
  %gvalue13 = call <3 x double> @"_export@VSV"(i8* getelementptr inbounds ([6 x i8]* @18, i64 0, i64 0), <3 x double> %evalue12) nounwind readonly
  %evalue14 = load <3 x double>* %"<pivot>"
  %gvalue15 = call <3 x double> @"_export@VSV"(i8* getelementptr inbounds ([6 x i8]* @11, i64 0, i64 0), <3 x double> %evalue14) nounwind readonly
  store i64 %gvalue, i64* @elemnum
  store i64 %gvalue3, i64* @__haspackedtransform
  store <4 x double> %gvalue5, <4 x double>* @orient
  store <3 x double> %gvalue7, <3 x double>* @N
  store <3 x double> %gvalue9, <3 x double>* @up
  store double %gvalue11, double* @pscale
  store <3 x double> %gvalue13, <3 x double>* @scale
  store <3 x double> %gvalue15, <3 x double>* @pivot
  ret void
}

declare i64 @"_export@ISI"(i8*, i64)

declare <4 x double> @"_export@PSP"(i8*, <4 x double>)

declare <3 x double> @"_export@VSV"(i8*, <3 x double>)

declare double @"_export@FSF"(i8*, double)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @obj_geo1_MOPs_Move_Along_Spline_Extract_Attributes1_do_extraction_prims_attribvop1(i64 0, i64 0, <4 x double> <double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 1.000000e+00>, <3 x double> zeroinitializer, <3 x double> zeroinitializer, double 0.000000e+00, <3 x double> zeroinitializer, <3 x double> zeroinitializer)
  ret void
}

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = metadata !{metadata !"cvex"}
!1 = metadata !{metadata !"18.5.633"}
!2 = metadata !{metadata !"64"}

;_code_end
