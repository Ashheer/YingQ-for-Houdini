;_name	<vexpression>
; ModuleID = '__vex_snippet'
source_filename = "__vex_snippet"

@0 = private constant [0 x i64] zeroinitializer
@1 = private constant [7 x i8] c"closed\00"
@2 = private constant [6 x i8] c"point\00"
@3 = private constant [13 x i8] c"primcenterpt\00"
@4 = private constant [6 x i8] c"%s %s\00"
@5 = private constant [8 x i8] c"edgepts\00"
@6 = private constant [5 x i8] c"poly\00"
@7 = private constant [9 x i8] c"polyline\00"
@8 = private constant [0 x double] zeroinitializer
@9 = private constant [17 x i8] c"sourceprim_index\00"
@10 = private constant [19 x i8] c"sourceprim_indices\00"
@11 = private constant [19 x i8] c"sourceprim_weights\00"
@12 = private constant [20 x i8] c"origprims_subdivide\00"
@13 = private constant [17 x i8] c"sourcept_weights\00"
@14 = private constant [18 x i8] c"sourcevtx_indices\00"
@15 = private constant [18 x i8] c"sourcevtx_weights\00"
@16 = private constant [23 x i8] c"sourcevtx_groupindices\00"
@17 = private constant [17 x i8] c"newvtx_subdivide\00"
@primnum = external global i64
@18 = private constant [8 x i8] c"primnum\00"

; Function Attrs: alwaysinline nounwind
define private void @"__vex_snippet_snippet@I"(i64* %_bound_primnum) #0 {
__llvm_entry:
  %_bound_primnum1 = load i64, i64* %_bound_primnum
  %return = call i64* @"primpoints@[III"(i64 0, i64 %_bound_primnum1)
  %_bound_primnum2 = load i64, i64* %_bound_primnum
  %return3 = call i64* @"primvertices@[III"(i64 0, i64 %_bound_primnum2)
  %return5 = call i64 @"len@I[I"(i64* %return)
  %_bound_primnum6 = load i64, i64* %_bound_primnum
  %return7 = call i64 @"primintrinsic@IISI"(i64 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1, i64 0, i64 0), i64 %_bound_primnum6)
  %0 = icmp ne i64 %return7, 0
  br i1 %0, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %return11 = call i64 @"getcomp@I[II"(i64* %return, i64 0)
  %output = call i64* @"append@[II"(i64* %return, i64 %return11)
  %return14 = call i64 @"getcomp@I[II"(i64* %return3, i64 0)
  %output15 = call i64* @"append@[II"(i64* %return3, i64 %return14)
  br label %end

false:                                            ; preds = %__llvm_entry
  %output17 = sub i64 %return5, 1
  br label %end

end:                                              ; preds = %false, %true
  %count.0 = phi i64 [ %return5, %true ], [ %output17, %false ]
  %vtx.0 = phi i64* [ %output15, %true ], [ %return3, %false ]
  %pts.0 = phi i64* [ %output, %true ], [ %return, %false ]
  %_bound_primnum18 = load i64, i64* %_bound_primnum
  %return19 = call i64 @"findattribval@IISSI"(i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @2, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @3, i64 0, i64 0), i64 %_bound_primnum18)
  br label %cond

cond:                                             ; preds = %body, %end
  %i.0 = phi i64 [ 0, %end ], [ %output29, %body ]
  %edgepts.0 = phi i64* [ getelementptr inbounds ([0 x i64], [0 x i64]* @0, i64 0, i64 0), %end ], [ %output45, %body ]
  %return22 = call i64 @"lt@III"(i64 %i.0, i64 %count.0)
  %1 = icmp ne i64 %return22, 0
  br i1 %1, label %body, label %end23

body:                                             ; preds = %cond
  %return26 = call i64 @"getcomp@I[II"(i64* %pts.0, i64 %i.0)
  %output29 = add i64 %i.0, 1
  %return30 = call i64 @"getcomp@I[II"(i64* %pts.0, i64 %output29)
  %return31 = call i64 @"min@III"(i64 %return26, i64 %return30)
  %return39 = call i64 @"max@III"(i64 %return26, i64 %return30)
  %return40 = call i8* @"sprintf@SS:II"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @4, i64 0, i64 0), i64 %return31, i64 %return39)
  %return42 = call i64 @"findattribval@IISSS"(i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @2, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @5, i64 0, i64 0), i8* %return40)
  %output45 = call i64* @"append@[II"(i64* %edgepts.0, i64 %return42)
  br label %cond

end23:                                            ; preds = %cond
  br i1 %0, label %true49, label %end50

true49:                                           ; preds = %end23
  %return52 = call i64 @"neg@II"(i64 1)
  %return53 = call { i64, i64* } @"removeindex@I[II"(i64* %pts.0, i64 %return52)
  %output55 = extractvalue { i64, i64* } %return53, 1
  br label %end50

end50:                                            ; preds = %true49, %end23
  %pts.1 = phi i64* [ %output55, %true49 ], [ %pts.0, %end23 ]
  %return57 = call i64 @"not@II"(i64 %return7)
  %2 = icmp ne i64 %return57, 0
  %. = select i1 %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @7, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @6, i64 0, i64 0)
  %_bound_primnum60 = load i64, i64* %_bound_primnum
  %return61 = call i64 @"removeprim@IIII"(i64 0, i64 %_bound_primnum60, i64 0)
  %.count62 = select i1 %2, i64 1, i64 %count.0
  br label %cond69

cond69:                                           ; preds = %end157, %end50
  %newpts.0 = phi i64* [ getelementptr inbounds ([0 x i64], [0 x i64]* @0, i64 0, i64 0), %end50 ], [ %newpts.1, %end157 ]
  %vertexindices.0 = phi i64* [ getelementptr inbounds ([0 x i64], [0 x i64]* @0, i64 0, i64 0), %end50 ], [ %vertexindices.1, %end157 ]
  %i68.0 = phi i64 [ 0, %end50 ], [ %output311, %end157 ]
  %return73 = call i64 @"lt@III"(i64 %i68.0, i64 %.count62)
  %3 = icmp ne i64 %return73, 0
  br i1 %3, label %body70, label %end74

body70:                                           ; preds = %cond69
  %output78 = add i64 %i68.0, %count.0
  %output79 = sub i64 %output78, 1
  %return81 = call i64 @"mod@III"(i64 %output79, i64 %count.0)
  br i1 %0, label %true83, label %false84

end74:                                            ; preds = %cond69
  ret void

true83:                                           ; preds = %body70
  %return88 = call i64 @"getcomp@I[II"(i64* %pts.1, i64 %i68.0)
  %return91 = call i64 @"getcomp@I[II"(i64* %edgepts.0, i64 %i68.0)
  %return95 = call i64 @"getcomp@I[II"(i64* %edgepts.0, i64 %return81)
  %return100 = call i64* @"array@[I:IIII"(i64 %return88, i64 %return91, i64 %return19, i64 %return95)
  br label %end85

false84:                                          ; preds = %body70
  %return102 = call i64 @"len@I[I"(i64* %edgepts.0)
  br label %cond103

end85:                                            ; preds = %cond103, %true83
  %newpts.1 = phi i64* [ %return100, %true83 ], [ %newpts.2, %cond103 ]
  %vertexindices.1 = phi i64* [ %vertexindices.0, %true83 ], [ %vertexindices.2, %cond103 ]
  %output137 = call { i64, i64* } @"addprim@IIS[I[I"(i64 0, i8* %., i64* %newpts.1)
  %output138 = extractvalue { i64, i64* } %output137, 0
  %output139 = extractvalue { i64, i64* } %output137, 1
  %_bound_primnum140 = load i64, i64* %_bound_primnum
  %return141 = call i64* @"array@[I:I"(i64 %_bound_primnum140)
  %return142 = call double* @"array@[F:F"(double 1.000000e+00)
  %return145 = call i64 @"setprimattrib@IISII"(i64 0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @9, i64 0, i64 0), i64 %output138, i64 %_bound_primnum140)
  %return148 = call i64 @"setprimattrib@IISI[I"(i64 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @10, i64 0, i64 0), i64 %output138, i64* %return141)
  %return151 = call i64 @"setprimattrib@IISI[F"(i64 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @11, i64 0, i64 0), i64 %output138, double* %return142)
  %return153 = call i64 @"setprimgroup@IISII"(i64 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @12, i64 0, i64 0), i64 %output138, i64 1)
  br i1 %0, label %cond159, label %false156

cond103:                                          ; preds = %end124, %false84
  %newpts.2 = phi i64* [ %newpts.0, %false84 ], [ %newpts.3, %end124 ]
  %vertexindices.2 = phi i64* [ %vertexindices.0, %false84 ], [ %vertexindices.3, %end124 ]
  %f.0 = phi i64 [ 0, %false84 ], [ %output134, %end124 ]
  %return107 = call i64 @"le@III"(i64 %f.0, i64 %count.0)
  %4 = icmp ne i64 %return107, 0
  br i1 %4, label %body104, label %end85

body104:                                          ; preds = %cond103
  %return113 = call i64 @"getcomp@I[II"(i64* %pts.1, i64 %f.0)
  %output114 = call i64* @"append@[II"(i64* %newpts.2, i64 %return113)
  %return118 = call i64 @"getcomp@I[II"(i64* %vtx.0, i64 %f.0)
  %output119 = call i64* @"append@[II"(i64* %vertexindices.2, i64 %return118)
  %return122 = call i64 @"lt@III"(i64 %f.0, i64 %return102)
  %5 = icmp ne i64 %return122, 0
  br i1 %5, label %true123, label %end124

true123:                                          ; preds = %body104
  %return128 = call i64 @"getcomp@I[II"(i64* %edgepts.0, i64 %f.0)
  %output129 = call i64* @"append@[II"(i64* %output114, i64 %return128)
  %return131 = call i64 @"neg@II"(i64 1)
  %output132 = call i64* @"append@[II"(i64* %output119, i64 %return131)
  br label %end124

end124:                                           ; preds = %true123, %body104
  %newpts.3 = phi i64* [ %output129, %true123 ], [ %output114, %body104 ]
  %vertexindices.3 = phi i64* [ %output132, %true123 ], [ %output119, %body104 ]
  %output134 = add i64 %f.0, 1
  br label %cond103

false156:                                         ; preds = %end85
  %return249 = call i64 @"len@I[I"(i64* %output139)
  br label %cond251

end157:                                           ; preds = %cond251, %cond159
  %output311 = add i64 %i68.0, 1
  br label %cond69

cond159:                                          ; preds = %end85, %end169
  %sourcevtx_indices.0 = phi i64* [ getelementptr inbounds ([0 x i64], [0 x i64]* @0, i64 0, i64 0), %end85 ], [ %sourcevtx_indices.1, %end169 ]
  %sourcevtx_weights.0 = phi double* [ getelementptr inbounds ([0 x double], [0 x double]* @8, i64 0, i64 0), %end85 ], [ %sourcevtx_weights.1, %end169 ]
  %sourcevtx_groupindices.0 = phi i64* [ getelementptr inbounds ([0 x i64], [0 x i64]* @0, i64 0, i64 0), %end85 ], [ %sourcevtx_groupindices.1, %end169 ]
  %f158.0 = phi i64 [ 0, %end85 ], [ %output246, %end169 ]
  %return162 = call i64 @"lt@III"(i64 %f158.0, i64 4)
  %6 = icmp ne i64 %return162, 0
  br i1 %6, label %body160, label %end157

body160:                                          ; preds = %cond159
  %return166 = call i64 @"eq@III"(i64 %f158.0, i64 0)
  %7 = icmp ne i64 %return166, 0
  br i1 %7, label %true167, label %false168

true167:                                          ; preds = %body160
  %return172 = call i64 @"getcomp@I[II"(i64* %vtx.0, i64 %i68.0)
  %return173 = call i64* @"array@[I:I"(i64 %return172)
  br label %end169

false168:                                         ; preds = %body160
  %return177 = call i64 @"eq@III"(i64 %f158.0, i64 1)
  %8 = icmp ne i64 %return177, 0
  br i1 %8, label %true178, label %false179

end169:                                           ; preds = %false196, %true208, %true195, %true178, %true167
  %sourcevtx_indices.1 = phi i64* [ %return173, %true167 ], [ %return188, %true178 ], [ %return200, %true195 ], [ %return217, %true208 ], [ %sourcevtx_indices.0, %false196 ]
  %sourcevtx_weights.1 = phi double* [ %return142, %true167 ], [ %return189, %true178 ], [ %return202, %true195 ], [ %return218, %true208 ], [ %sourcevtx_weights.0, %false196 ]
  %sourcevtx_groupindices.1 = phi i64* [ %return173, %true167 ], [ %return192, %true178 ], [ %return205, %true195 ], [ %return221, %true208 ], [ %sourcevtx_groupindices.0, %false196 ]
  %return224 = call i64 @"getcomp@I[II"(i64* %output139, i64 %f158.0)
  %return225 = call i64 @"neg@II"(i64 1)
  %return227 = call i64 @"setvertexattrib@IISII[I"(i64 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @14, i64 0, i64 0), i64 %return224, i64 %return225, i64* %sourcevtx_indices.1)
  %return233 = call i64 @"setvertexattrib@IISII[F"(i64 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @15, i64 0, i64 0), i64 %return224, i64 %return225, double* %sourcevtx_weights.1)
  %return239 = call i64 @"setvertexattrib@IISII[I"(i64 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @16, i64 0, i64 0), i64 %return224, i64 %return225, i64* %sourcevtx_groupindices.1)
  %return244 = call i64 @"setvertexgroup@IISIII"(i64 0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @17, i64 0, i64 0), i64 %return224, i64 %return225, i64 1)
  %output246 = add i64 %f158.0, 1
  br label %cond159

true178:                                          ; preds = %false168
  %return183 = call i64 @"getcomp@I[II"(i64* %vtx.0, i64 %i68.0)
  %output186 = add i64 %i68.0, 1
  %return187 = call i64 @"getcomp@I[II"(i64* %vtx.0, i64 %output186)
  %return188 = call i64* @"array@[I:II"(i64 %return183, i64 %return187)
  %return189 = call double* @"array@[F:FF"(double 5.000000e-01, double 5.000000e-01)
  %return190 = call i64 @"neg@II"(i64 1)
  %return192 = call i64* @"array@[I:II"(i64 %return190, i64 %return190)
  br label %end169

false179:                                         ; preds = %false168
  %return194 = call i64 @"eq@III"(i64 %f158.0, i64 2)
  %9 = icmp ne i64 %return194, 0
  br i1 %9, label %true195, label %false196

true195:                                          ; preds = %false179
  %return199 = call i64 @"neg@II"(i64 1)
  %return200 = call i64* @"slice@[I[IIIIIII"(i64* %vtx.0, i64 0, i64 0, i64 1, i64 %return199, i64 0, i64 0)
  %return202 = call double* @"point@[FISI"(i64 0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @13, i64 0, i64 0), i64 %return19)
  %return205 = call i64* @"array@[I:II"(i64 %return199, i64 %return199)
  br label %end169

false196:                                         ; preds = %false179
  %return207 = call i64 @"eq@III"(i64 %f158.0, i64 3)
  %10 = icmp ne i64 %return207, 0
  br i1 %10, label %true208, label %end169

true208:                                          ; preds = %false196
  %return212 = call i64 @"getcomp@I[II"(i64* %vtx.0, i64 %return81)
  %output215 = add i64 %return81, 1
  %return216 = call i64 @"getcomp@I[II"(i64* %vtx.0, i64 %output215)
  %return217 = call i64* @"array@[I:II"(i64 %return212, i64 %return216)
  %return218 = call double* @"array@[F:FF"(double 5.000000e-01, double 5.000000e-01)
  %return219 = call i64 @"neg@II"(i64 1)
  %return221 = call i64* @"array@[I:II"(i64 %return219, i64 %return219)
  br label %end169

cond251:                                          ; preds = %end266, %false156
  %f158.1 = phi i64 [ 0, %false156 ], [ %f158.2, %end266 ]
  %f250.0 = phi i64 [ 0, %false156 ], [ %output309, %end266 ]
  %return255 = call i64 @"lt@III"(i64 %f250.0, i64 %return249)
  %11 = icmp ne i64 %return255, 0
  br i1 %11, label %body252, label %end157

body252:                                          ; preds = %cond251
  %return260 = call i64 @"getcomp@I[II"(i64* %vertexindices.1, i64 %f250.0)
  %return262 = call i64 @"neg@II"(i64 1)
  %return263 = call i64 @"ne@III"(i64 %return260, i64 %return262)
  %12 = icmp ne i64 %return263, 0
  br i1 %12, label %true264, label %false265

true264:                                          ; preds = %body252
  %return268 = call i64* @"array@[I:I"(i64 %return260)
  br label %end266

false265:                                         ; preds = %body252
  %return273 = call i64 @"getcomp@I[II"(i64* %vtx.0, i64 %f158.1)
  %output276 = add i64 %f158.1, 1
  %return277 = call i64 @"getcomp@I[II"(i64* %vtx.0, i64 %output276)
  %return278 = call i64* @"array@[I:II"(i64 %return273, i64 %return277)
  %return279 = call double* @"array@[F:FF"(double 5.000000e-01, double 5.000000e-01)
  %return282 = call i64* @"array@[I:II"(i64 %return262, i64 %return262)
  br label %end266

end266:                                           ; preds = %false265, %true264
  %sourcevtx_indices.2 = phi i64* [ %return268, %true264 ], [ %return278, %false265 ]
  %sourcevtx_weights.2 = phi double* [ %return142, %true264 ], [ %return279, %false265 ]
  %sourcevtx_groupindices.2 = phi i64* [ %return268, %true264 ], [ %return282, %false265 ]
  %f158.2 = phi i64 [ %f158.1, %true264 ], [ %output276, %false265 ]
  %return287 = call i64 @"getcomp@I[II"(i64* %output139, i64 %f250.0)
  %return290 = call i64 @"setvertexattrib@IISII[I"(i64 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @14, i64 0, i64 0), i64 %return287, i64 %return262, i64* %sourcevtx_indices.2)
  %return296 = call i64 @"setvertexattrib@IISII[F"(i64 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @15, i64 0, i64 0), i64 %return287, i64 %return262, double* %sourcevtx_weights.2)
  %return302 = call i64 @"setvertexattrib@IISII[I"(i64 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @16, i64 0, i64 0), i64 %return287, i64 %return262, i64* %sourcevtx_groupindices.2)
  %return307 = call i64 @"setvertexgroup@IISIII"(i64 0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @17, i64 0, i64 0), i64 %return287, i64 %return262, i64 1)
  %output309 = add i64 %f250.0, 1
  br label %cond251
}

; Function Attrs: nounwind
declare i64* @"primpoints@[III"(i64, i64) #1

; Function Attrs: nounwind
declare i64* @"primvertices@[III"(i64, i64) #1

; Function Attrs: nounwind readnone
declare i64 @"len@I[I"(i64*) #2

; Function Attrs: nounwind
declare i64 @"primintrinsic@IISI"(i64, i8*, i64) #1

; Function Attrs: nounwind readnone
declare i64 @"getcomp@I[II"(i64*, i64) #2

; Function Attrs: nounwind
declare i64* @"append@[II"(i64*, i64) #1

; Function Attrs: nounwind
declare i64 @"findattribval@IISSI"(i64, i8*, i8*, i64) #1

; Function Attrs: nounwind readnone
declare i64 @"lt@III"(i64, i64) #2

; Function Attrs: nounwind readnone
declare i64 @"min@III"(i64, i64) #2

; Function Attrs: nounwind readnone
declare i64 @"max@III"(i64, i64) #2

; Function Attrs: nounwind readnone
declare i8* @"sprintf@SS:II"(i8*, i64, i64) #2

; Function Attrs: nounwind
declare i64 @"findattribval@IISSS"(i64, i8*, i8*, i8*) #1

; Function Attrs: nounwind readnone
declare i64 @"neg@II"(i64) #2

; Function Attrs: nounwind
declare { i64, i64* } @"removeindex@I[II"(i64*, i64) #1

; Function Attrs: nounwind readnone
declare i64 @"not@II"(i64) #2

; Function Attrs: nounwind
declare i64 @"removeprim@IIII"(i64, i64, i64) #1

; Function Attrs: nounwind readnone
declare i64 @"mod@III"(i64, i64) #2

; Function Attrs: nounwind readnone
declare i64* @"array@[I:IIII"(i64, i64, i64, i64) #2

; Function Attrs: nounwind readnone
declare i64 @"le@III"(i64, i64) #2

; Function Attrs: nounwind
declare { i64, i64* } @"addprim@IIS[I[I"(i64, i8*, i64*) #1

; Function Attrs: nounwind readnone
declare i64* @"array@[I:I"(i64) #2

; Function Attrs: nounwind readnone
declare double* @"array@[F:F"(double) #2

; Function Attrs: nounwind
declare i64 @"setprimattrib@IISII"(i64, i8*, i64, i64) #1

; Function Attrs: nounwind
declare i64 @"setprimattrib@IISI[I"(i64, i8*, i64, i64*) #1

; Function Attrs: nounwind
declare i64 @"setprimattrib@IISI[F"(i64, i8*, i64, double*) #1

; Function Attrs: nounwind
declare i64 @"setprimgroup@IISII"(i64, i8*, i64, i64) #1

; Function Attrs: nounwind readnone
declare i64 @"eq@III"(i64, i64) #2

; Function Attrs: nounwind readnone
declare i64* @"array@[I:II"(i64, i64) #2

; Function Attrs: nounwind readnone
declare double* @"array@[F:FF"(double, double) #2

; Function Attrs: nounwind
declare i64* @"slice@[I[IIIIIII"(i64*, i64, i64, i64, i64, i64, i64) #1

; Function Attrs: nounwind
declare double* @"point@[FISI"(i64, i8*, i64) #1

; Function Attrs: nounwind
declare i64 @"setvertexattrib@IISII[I"(i64, i8*, i64, i64, i64*) #1

; Function Attrs: nounwind
declare i64 @"setvertexattrib@IISII[F"(i64, i8*, i64, i64, double*) #1

; Function Attrs: nounwind
declare i64 @"setvertexgroup@IISIII"(i64, i8*, i64, i64, i64) #1

; Function Attrs: nounwind readnone
declare i64 @"ne@III"(i64, i64) #2

; Function Attrs: nounwind
define void @__vex_snippet(i64 %primnum) #1 {
__llvm_entry:
  %0 = alloca i64
  store i64 %primnum, i64* %0
  call void @"__vex_snippet_snippet@I"(i64* %0)
  %gvalue = call i64 @"_export@ISI"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @18, i64 0, i64 0), i64 %primnum) #3
  store i64 %gvalue, i64* @primnum
  ret void
}

declare i64 @"_export@ISI"(i8*, i64)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @__vex_snippet(i64 0)
  ret void
}

attributes #0 = { alwaysinline nounwind }
attributes #1 = { nounwind }
attributes #2 = { nounwind readnone }
attributes #3 = { nounwind readonly }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"19.0.531"}
!2 = !{!"64"}

;_code_end
