;_name	/obj/sphere1/vellumsolver1/dopnet1/vellumsolver1/calc_w_2nd_order_fallback/geometryvop1
; ModuleID = 'obj_sphere1_vellumsolver1_dopnet1_vellumsolver1_calc_w_2nd_order_fallback_geometryvop1'
source_filename = "obj_sphere1_vellumsolver1_dopnet1_vellumsolver1_calc_w_2nd_order_fallback_geometryvop1"

@w = external global <3 x double>
@0 = private constant [2 x i8] c"w\00"

; Function Attrs: alwaysinline nounwind
define private void @"_obj_sphere1_vellumsolver1_dopnet1_vellumsolver1_calc_w_2nd_order_fallback_geometryvop1_snippet1@PIPVFP"(<4 x double>* %_bound_orient, i64* %_bound_fallback, <4 x double>* %_bound_orientprevious, <3 x double>* %_bound_w, double* %_bound_Timeinc, <4 x double>* %_bound_orientlast) #0 {
__llvm_entry:
  %_bound_orient1 = load <4 x double>, <4 x double>* %_bound_orient
  %output = call <4 x double> @"mul@PP"(<4 x double> %_bound_orient1, <4 x double> <double -1.000000e+00, double -1.000000e+00, double -1.000000e+00, double 1.000000e+00>)
  %_bound_fallback2 = load i64, i64* %_bound_fallback
  %0 = icmp ne i64 %_bound_fallback2, 0
  br i1 %0, label %true, label %false

true:                                             ; preds = %__llvm_entry
  %_bound_orientprevious4 = load <4 x double>, <4 x double>* %_bound_orientprevious
  %output5 = call <4 x double> @"sub@PP"(<4 x double> %_bound_orient1, <4 x double> %_bound_orientprevious4)
  %return = call <4 x double> @"qmultiply@PPP"(<4 x double> %output5, <4 x double> %output)
  %cast = call <3 x double> @"set@VP"(<4 x double> %return)
  %_bound_Timeinc9 = load double, double* %_bound_Timeinc
  %output10 = call double @"div@FF"(double 2.000000e+00, double %_bound_Timeinc9)
  %cast11 = call <3 x double> @"set@VF"(double %output10)
  %output12 = call <3 x double> @"mul@VV"(<3 x double> %cast, <3 x double> %cast11)
  store <3 x double> %output12, <3 x double>* %_bound_w
  br label %end

false:                                            ; preds = %__llvm_entry
  %cast15 = call <4 x double> @"set@PI"(i64 3)
  %output16 = call <4 x double> @"mul@PP"(<4 x double> %cast15, <4 x double> %_bound_orient1)
  %_bound_orientprevious17 = load <4 x double>, <4 x double>* %_bound_orientprevious
  %cast18 = call <4 x double> @"set@PI"(i64 4)
  %output19 = call <4 x double> @"mul@PP"(<4 x double> %cast18, <4 x double> %_bound_orientprevious17)
  %output20 = call <4 x double> @"sub@PP"(<4 x double> %output16, <4 x double> %output19)
  %_bound_orientlast21 = load <4 x double>, <4 x double>* %_bound_orientlast
  %output22 = call <4 x double> @"add@PP"(<4 x double> %output20, <4 x double> %_bound_orientlast21)
  %return25 = call <4 x double> @"qmultiply@PPP"(<4 x double> %output22, <4 x double> %output)
  %cast27 = call <3 x double> @"set@VP"(<4 x double> %return25)
  %_bound_Timeinc28 = load double, double* %_bound_Timeinc
  %cast29 = call <3 x double> @"set@VF"(double %_bound_Timeinc28)
  %output30 = call <3 x double> @"div@VV"(<3 x double> %cast27, <3 x double> %cast29)
  store <3 x double> %output30, <3 x double>* %_bound_w
  br label %end

end:                                              ; preds = %false, %true
  ret void
}

; Function Attrs: nounwind readnone
declare <4 x double> @"mul@PP"(<4 x double>, <4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @"sub@PP"(<4 x double>, <4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @"qmultiply@PPP"(<4 x double>, <4 x double>) #1

; Function Attrs: nounwind
declare <3 x double> @"set@VP"(<4 x double>) #2

; Function Attrs: nounwind readnone
declare double @"div@FF"(double, double) #1

; Function Attrs: nounwind readnone
declare <3 x double> @"set@VF"(double) #1

; Function Attrs: nounwind readnone
declare <3 x double> @"mul@VV"(<3 x double>, <3 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @"set@PI"(i64) #1

; Function Attrs: nounwind readnone
declare <4 x double> @"add@PP"(<4 x double>, <4 x double>) #1

; Function Attrs: nounwind readnone
declare <3 x double> @"div@VV"(<3 x double>, <3 x double>) #1

; Function Attrs: nounwind
define void @obj_sphere1_vellumsolver1_dopnet1_vellumsolver1_calc_w_2nd_order_fallback_geometryvop1(<4 x double> %orient, i64 %fallback, <4 x double> %orientprevious, <3 x double> %w, double %Timeinc, <4 x double> %orientlast) #2 {
__llvm_entry:
  %"<w>" = alloca <3 x double>
  %0 = alloca <4 x double>
  %1 = alloca i64
  %2 = alloca <4 x double>
  %3 = alloca double
  %4 = alloca <4 x double>
  store <3 x double> %w, <3 x double>* %"<w>"
  store <4 x double> %orient, <4 x double>* %0
  store i64 %fallback, i64* %1
  store <4 x double> %orientprevious, <4 x double>* %2
  store double %Timeinc, double* %3
  store <4 x double> %orientlast, <4 x double>* %4
  call void @"_obj_sphere1_vellumsolver1_dopnet1_vellumsolver1_calc_w_2nd_order_fallback_geometryvop1_snippet1@PIPVFP"(<4 x double>* %0, i64* %1, <4 x double>* %2, <3 x double>* %"<w>", double* %3, <4 x double>* %4)
  %evalue = load <3 x double>, <3 x double>* %"<w>"
  %gvalue = call <3 x double> @"_export@VSV"(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @0, i64 0, i64 0), <3 x double> %evalue) #3
  store <3 x double> %gvalue, <3 x double>* @w
  ret void
}

declare <3 x double> @"_export@VSV"(i8*, <3 x double>)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @obj_sphere1_vellumsolver1_dopnet1_vellumsolver1_calc_w_2nd_order_fallback_geometryvop1(<4 x double> <double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 1.000000e+00>, i64 0, <4 x double> zeroinitializer, <3 x double> zeroinitializer, double 0.000000e+00, <4 x double> zeroinitializer)
  ret void
}

attributes #0 = { alwaysinline nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind }
attributes #3 = { nounwind readonly }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"19.0.498"}
!2 = !{!"64"}

;_code_end
