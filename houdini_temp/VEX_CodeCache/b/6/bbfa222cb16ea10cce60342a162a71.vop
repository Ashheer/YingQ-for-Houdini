;_name	<vexpression>
; ModuleID = '__vex_snippet'
source_filename = "__vex_snippet"

@0 = private constant [4 x i8] c"pts\00"
@1 = private constant [12 x i8] c"bezierorder\00"
@2 = private constant [11 x i8] c"outputtype\00"
@3 = private constant [11 x i8] c"activeprim\00"
@4 = private constant [7 x i8] c"closed\00"
@5 = private constant [11 x i8] c"autobezier\00"
@6 = private constant [7 x i8] c"optype\00"
@7 = private constant [13 x i8] c"prependpoint\00"
@8 = private constant [0 x <3 x double>] zeroinitializer
@9 = private constant [3 x i8] c"-s\00"
@10 = private constant [2 x i8] c",\00"
@11 = private constant [7 x i8] c"bezier\00"
@12 = private constant [13 x i8] c"__broken_pts\00"
@13 = private constant [2 x i8] c"P\00"
@14 = private constant [0 x double] zeroinitializer
@15 = private constant [0 x i64] zeroinitializer

; Function Attrs: alwaysinline nounwind
define private void @__vex_snippet_snippet() #0 {
__llvm_entry:
  %return = call i8* @"chs@SS"(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @0, i64 0, i64 0))
  %return1 = call i64 @"chi@IS"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @1, i64 0, i64 0))
  %return2 = call i8* @"chs@SS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @2, i64 0, i64 0))
  %return3 = call i64 @"chi@IS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @3, i64 0, i64 0))
  %return5 = call i64 @"primintrinsic@IISI"(i64 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @4, i64 0, i64 0), i64 %return3)
  %return6 = call i64 @"chi@IS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @5, i64 0, i64 0))
  %return7 = call i8* @"chs@SS"(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @6, i64 0, i64 0))
  %return9 = call i64 @"eq@ISS"(i8* %return7, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @7, i64 0, i64 0))
  %return11 = call i64 @"primvertexcount@III"(i64 0, i64 %return3)
  %return13 = call i8** @"split@[SS"(i8* %return)
  br label %cond

cond:                                             ; preds = %iter, %__llvm_entry
  %i.0 = phi i64 [ 0, %__llvm_entry ], [ %output52, %iter ]
  %snap_close_pt.0 = phi i64 [ 0, %__llvm_entry ], [ %snap_close_pt.1, %iter ]
  %snap_close_flag.0 = phi i64 [ 0, %__llvm_entry ], [ %snap_close_flag.1, %iter ]
  %pts_array.0 = phi <3 x double>* [ getelementptr inbounds ([0 x <3 x double>], [0 x <3 x double>]* @8, i64 0, i64 0), %__llvm_entry ], [ %pts_array.1, %iter ]
  %return16 = call i64 @"len@I[S"(i8** %return13)
  %return17 = call i64 @"lt@III"(i64 %i.0, i64 %return16)
  %0 = icmp ne i64 %return17, 0
  br i1 %0, label %body, label %end

body:                                             ; preds = %cond
  %return20 = call i8* @"getcomp@S[SI"(i8** %return13, i64 %i.0)
  %return21 = call i64 @"eq@ISS"(i8* %return20, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @9, i64 0, i64 0))
  %1 = icmp ne i64 %return21, 0
  br i1 %1, label %true, label %end22

end:                                              ; preds = %cond
  %output54 = sub i64 %return11, 1
  %2 = icmp ne i64 %return9, 0
  br i1 %2, label %true58, label %end59

iter:                                             ; preds = %end22, %end37, %true
  %i.1 = phi i64 [ %output, %true ], [ %i.0, %end22 ], [ %i.0, %end37 ]
  %snap_close_pt.1 = phi i64 [ %return26, %true ], [ %snap_close_pt.0, %end22 ], [ %snap_close_pt.0, %end37 ]
  %snap_close_flag.1 = phi i64 [ 1, %true ], [ %snap_close_flag.0, %end22 ], [ %snap_close_flag.0, %end37 ]
  %pts_array.1 = phi <3 x double>* [ %pts_array.0, %true ], [ %pts_array.0, %end22 ], [ %output50, %end37 ]
  %output52 = add i64 %i.1, 1
  br label %cond

true:                                             ; preds = %body
  %output = add i64 %i.0, 1
  %return25 = call i8* @"getcomp@S[SI"(i8** %return13, i64 %output)
  %return26 = call i64 @"atoi@IS"(i8* %return25)
  br label %iter

end22:                                            ; preds = %body
  %return32 = call i8** @"split@[SSS"(i8* %return20, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @10, i64 0, i64 0))
  %return34 = call i64 @"len@I[S"(i8** %return32)
  %return35 = call i64 @"ne@III"(i64 %return34, i64 3)
  %3 = icmp ne i64 %return35, 0
  br i1 %3, label %iter, label %end37

end37:                                            ; preds = %end22
  %return39 = call i8* @"getcomp@S[SI"(i8** %return32, i64 0)
  %return40 = call double @"atof@FS"(i8* %return39)
  %return42 = call i8* @"getcomp@S[SI"(i8** %return32, i64 1)
  %return43 = call double @"atof@FS"(i8* %return42)
  %return45 = call i8* @"getcomp@S[SI"(i8** %return32, i64 2)
  %return46 = call double @"atof@FS"(i8* %return45)
  %return47 = call <3 x double> @"set@VFFF"(double %return40, double %return43, double %return46)
  %output50 = call <3 x double>* @"push@[VV"(<3 x double>* %pts_array.0, <3 x double> %return47)
  br label %iter

true58:                                           ; preds = %end
  br label %end59

end59:                                            ; preds = %true58, %end
  %prev_last_point.0 = phi i64 [ 0, %true58 ], [ %output54, %end ]
  %return61 = call i64 @"len@I[V"(<3 x double>* %pts_array.0)
  %return62 = call i64 @"gt@III"(i64 %return61, i64 0)
  %return64 = call i64 @"eq@ISS"(i8* %return2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @11, i64 0, i64 0))
  %return65 = call i64 @"and@III"(i64 %return62, i64 %return64)
  %return67 = call i64 @"ge@III"(i64 %return1, i64 4)
  %return68 = call i64 @"and@III"(i64 %return65, i64 %return67)
  %return70 = call i64 @"and@III"(i64 %return68, i64 %return6)
  %4 = icmp ne i64 %return70, 0
  br i1 %4, label %true71, label %false

true71:                                           ; preds = %end59
  %return74 = call i64 @"ge@III"(i64 %return11, i64 4)
  %return77 = call i64 @"primpoint@IIII"(i64 0, i64 %return3, i64 %prev_last_point.0)
  %return78 = call i64 @"inpointgroup@IISI"(i64 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @12, i64 0, i64 0), i64 %return77)
  %return79 = call i64 @"not@II"(i64 %return78)
  %return80 = call i64 @"and@III"(i64 %return74, i64 %return79)
  %5 = icmp ne i64 %return80, 0
  br i1 %5, label %true81, label %false82

false:                                            ; preds = %end59
  %return668 = call i64 @"eq@III"(i64 %return1, i64 3)
  %return669 = call i64 @"and@III"(i64 %return65, i64 %return668)
  %6 = icmp ne i64 %return669, 0
  br i1 %6, label %true670, label %end72

end72:                                            ; preds = %false, %end688, %end560, %end637
  %pts_array.2 = phi <3 x double>* [ %output593, %end560 ], [ %output659, %end637 ], [ %tmp_pts_array672.0, %end688 ], [ %pts_array.0, %false ]
  %7 = icmp ne i64 %snap_close_flag.0, 0
  br i1 %7, label %true716, label %end717

true81:                                           ; preds = %true71
  br label %cond84

false82:                                          ; preds = %true71
  %return599 = call i64 @"eq@III"(i64 %return11, i64 0)
  %8 = icmp ne i64 %return599, 0
  br i1 %8, label %true600, label %false601

cond84:                                           ; preds = %end97, %true81
  %n_controls.0 = phi i64 [ 0, %true81 ], [ %output118, %end97 ]
  %output88 = sub i64 %return1, 1
  %output89 = mul i64 %n_controls.0, %output88
  %return91 = call i64 @"lt@III"(i64 %output89, i64 %return11)
  %9 = icmp ne i64 %return91, 0
  br i1 %9, label %body85, label %end92

body85:                                           ; preds = %cond84
  br i1 %2, label %true95, label %false96

end92:                                            ; preds = %end97, %cond84
  %n_controls.1 = phi i64 [ %output118, %end97 ], [ %n_controls.0, %cond84 ]
  %output122 = add i64 %n_controls.1, 1
  %output125 = call <3 x double>* @"resize@[VI"(<3 x double>* getelementptr inbounds ([0 x <3 x double>], [0 x <3 x double>]* @8, i64 0, i64 0), i64 %output122)
  br label %cond127

true95:                                           ; preds = %body85
  %return103 = call i64 @"primpoint@IIII"(i64 0, i64 %return3, i64 %output89)
  br label %end97

false96:                                          ; preds = %body85
  %output111 = sub i64 %output54, %output89
  %return112 = call i64 @"primpoint@IIII"(i64 0, i64 %return3, i64 %output111)
  br label %end97

end97:                                            ; preds = %false96, %true95
  %pt.0 = phi i64 [ %return103, %true95 ], [ %return112, %false96 ]
  %return114 = call i64 @"inpointgroup@IISI"(i64 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @12, i64 0, i64 0), i64 %pt.0)
  %10 = icmp ne i64 %return114, 0
  %output118 = add i64 %n_controls.0, 1
  br i1 %10, label %end92, label %cond84

cond127:                                          ; preds = %end143, %end92
  %controls.0 = phi <3 x double>* [ %output125, %end92 ], [ %output164, %end143 ]
  %i126.0 = phi i64 [ 0, %end92 ], [ %output166, %end143 ]
  %return132 = call i64 @"lt@III"(i64 %i126.0, i64 %n_controls.1)
  %11 = icmp ne i64 %return132, 0
  br i1 %11, label %body128, label %end133

body128:                                          ; preds = %cond127
  %output136 = sub i64 %output122, 2
  %output138 = sub i64 %output136, %i126.0
  br i1 %2, label %true141, label %false142

end133:                                           ; preds = %cond127
  %return170 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %pts_array.0, i64 0)
  %return172 = call { <3 x double>, <3 x double>* } @"setcomp@V[VVI"(<3 x double>* %controls.0, <3 x double> %return170, i64 %n_controls.1)
  %output174 = extractvalue { <3 x double>, <3 x double>* } %return172, 1
  %output179 = call <3 x double>* @"resize@[VI"(<3 x double>* getelementptr inbounds ([0 x <3 x double>], [0 x <3 x double>]* @8, i64 0, i64 0), i64 %n_controls.1)
  %12 = icmp ne i64 %return67, 0
  br i1 %12, label %true185, label %end186

true141:                                          ; preds = %body128
  %output148 = mul i64 %output138, %output88
  %return149 = call i64 @"primpoint@IIII"(i64 0, i64 %return3, i64 %output148)
  br label %end143

false142:                                         ; preds = %body128
  %output156 = mul i64 %output138, %output88
  %output157 = sub i64 %output54, %output156
  %return158 = call i64 @"primpoint@IIII"(i64 0, i64 %return3, i64 %output157)
  br label %end143

end143:                                           ; preds = %false142, %true141
  %pt139.0 = phi i64 [ %return149, %true141 ], [ %return158, %false142 ]
  %return161 = call <3 x double> @"point@VISI"(i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @13, i64 0, i64 0), i64 %pt139.0)
  %return162 = call { <3 x double>, <3 x double>* } @"setcomp@V[VVI"(<3 x double>* %controls.0, <3 x double> %return161, i64 %i126.0)
  %output164 = extractvalue { <3 x double>, <3 x double>* } %return162, 1
  %output166 = add i64 %i126.0, 1
  br label %cond127

true185:                                          ; preds = %end133
  %output189 = call double* @"resize@[FI"(double* getelementptr inbounds ([0 x double], [0 x double]* @14, i64 0, i64 0), i64 %n_controls.1)
  %return200 = call { double, double* } @"setcomp@F[FFI"(double* %output189, double 0.000000e+00, i64 0)
  %output202 = extractvalue { double, double* } %return200, 1
  %return204 = call { double, double* } @"setcomp@F[FFI"(double* %output189, double 2.000000e+00, i64 0)
  %output206 = extractvalue { double, double* } %return204, 1
  %return208 = call { double, double* } @"setcomp@F[FFI"(double* %output189, double 1.000000e+00, i64 0)
  %output210 = extractvalue { double, double* } %return208, 1
  %return212 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %output174, i64 0)
  %return214 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %output174, i64 1)
  %cast = call <3 x double> @"set@VI"(i64 2)
  %output215 = call <3 x double> @"mul@VV"(<3 x double> %cast, <3 x double> %return214)
  %output216 = call <3 x double> @"add@VV"(<3 x double> %return212, <3 x double> %output215)
  %return218 = call { <3 x double>, <3 x double>* } @"setcomp@V[VVI"(<3 x double>* %output179, <3 x double> %output216, i64 0)
  %output220 = extractvalue { <3 x double>, <3 x double>* } %return218, 1
  %output222 = sub i64 %n_controls.1, 1
  %return224 = call { double, double* } @"setcomp@F[FFI"(double* %output202, double 2.000000e+00, i64 %output222)
  %output226 = extractvalue { double, double* } %return224, 1
  %return230 = call { double, double* } @"setcomp@F[FFI"(double* %output206, double 7.000000e+00, i64 %output222)
  %output232 = extractvalue { double, double* } %return230, 1
  %return236 = call { double, double* } @"setcomp@F[FFI"(double* %output210, double 0.000000e+00, i64 %output222)
  %output238 = extractvalue { double, double* } %return236, 1
  %return244 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %output174, i64 %output222)
  %cast245 = call <3 x double> @"set@VI"(i64 8)
  %output246 = call <3 x double> @"mul@VV"(<3 x double> %cast245, <3 x double> %return244)
  %return249 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %output174, i64 %n_controls.1)
  %output250 = call <3 x double> @"add@VV"(<3 x double> %output246, <3 x double> %return249)
  %return252 = call { <3 x double>, <3 x double>* } @"setcomp@V[VVI"(<3 x double>* %output220, <3 x double> %output250, i64 %output222)
  %output254 = extractvalue { <3 x double>, <3 x double>* } %return252, 1
  br label %cond256

end186:                                           ; preds = %end404, %end133
  %p1.0 = phi <3 x double>* [ %p1.1, %end404 ], [ %output179, %end133 ]
  %p2.0 = phi <3 x double>* [ %output439, %end404 ], [ %output179, %end133 ]
  br label %cond441

cond256:                                          ; preds = %body257, %true185
  %a.0 = phi double* [ %output226, %true185 ], [ %output268, %body257 ]
  %b.0 = phi double* [ %output232, %true185 ], [ %output273, %body257 ]
  %c.0 = phi double* [ %output238, %true185 ], [ %output278, %body257 ]
  %r.0 = phi <3 x double>* [ %output254, %true185 ], [ %output295, %body257 ]
  %i255.0 = phi i64 [ 1, %true185 ], [ %output287, %body257 ]
  %return261 = call i64 @"lt@III"(i64 %i255.0, i64 %output222)
  %13 = icmp ne i64 %return261, 0
  br i1 %13, label %body257, label %end262

body257:                                          ; preds = %cond256
  %return266 = call { double, double* } @"setcomp@F[FFI"(double* %a.0, double 1.000000e+00, i64 %i255.0)
  %output268 = extractvalue { double, double* } %return266, 1
  %return271 = call { double, double* } @"setcomp@F[FFI"(double* %b.0, double 4.000000e+00, i64 %i255.0)
  %output273 = extractvalue { double, double* } %return271, 1
  %return276 = call { double, double* } @"setcomp@F[FFI"(double* %c.0, double 1.000000e+00, i64 %i255.0)
  %output278 = extractvalue { double, double* } %return276, 1
  %return282 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %output174, i64 %i255.0)
  %cast283 = call <3 x double> @"set@VI"(i64 4)
  %output284 = call <3 x double> @"mul@VV"(<3 x double> %cast283, <3 x double> %return282)
  %output287 = add i64 %i255.0, 1
  %return288 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %output174, i64 %output287)
  %output290 = call <3 x double> @"mul@VV"(<3 x double> %cast, <3 x double> %return288)
  %output291 = call <3 x double> @"add@VV"(<3 x double> %output284, <3 x double> %output290)
  %return293 = call { <3 x double>, <3 x double>* } @"setcomp@V[VVI"(<3 x double>* %r.0, <3 x double> %output291, i64 %i255.0)
  %output295 = extractvalue { <3 x double>, <3 x double>* } %return293, 1
  br label %cond256

end262:                                           ; preds = %cond256
  br label %cond299

cond299:                                          ; preds = %body300, %end262
  %b.1 = phi double* [ %b.0, %end262 ], [ %output328, %body300 ]
  %r.1 = phi <3 x double>* [ %r.0, %end262 ], [ %output344, %body300 ]
  %i298.0 = phi i64 [ 1, %end262 ], [ %output346, %body300 ]
  %return303 = call i64 @"lt@III"(i64 %i298.0, i64 %n_controls.1)
  %14 = icmp ne i64 %return303, 0
  br i1 %14, label %body300, label %end304

body300:                                          ; preds = %cond299
  %return308 = call double @"getcomp@F[FI"(double* %a.0, i64 %i298.0)
  %output311 = sub i64 %i298.0, 1
  %return312 = call double @"getcomp@F[FI"(double* %b.1, i64 %output311)
  %output313 = call double @"div@FF"(double %return308, double %return312)
  %return317 = call double @"getcomp@F[FI"(double* %b.1, i64 %i298.0)
  %return322 = call double @"getcomp@F[FI"(double* %c.0, i64 %output311)
  %output323 = fmul double %output313, %return322
  %output324 = fsub double %return317, %output323
  %return326 = call { double, double* } @"setcomp@F[FFI"(double* %b.1, double %output324, i64 %i298.0)
  %output328 = extractvalue { double, double* } %return326, 1
  %return332 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %r.1, i64 %i298.0)
  %return337 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %r.1, i64 %output311)
  %cast338 = call <3 x double> @"set@VF"(double %output313)
  %output339 = call <3 x double> @"mul@VV"(<3 x double> %cast338, <3 x double> %return337)
  %output340 = call <3 x double> @"sub@VV"(<3 x double> %return332, <3 x double> %output339)
  %return342 = call { <3 x double>, <3 x double>* } @"setcomp@V[VVI"(<3 x double>* %r.1, <3 x double> %output340, i64 %i298.0)
  %output344 = extractvalue { <3 x double>, <3 x double>* } %return342, 1
  %output346 = add i64 %i298.0, 1
  br label %cond299

end304:                                           ; preds = %cond299
  %return352 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %r.1, i64 %output222)
  %return356 = call double @"getcomp@F[FI"(double* %b.1, i64 %output222)
  %cast357 = call <3 x double> @"set@VF"(double %return356)
  %output358 = call <3 x double> @"div@VV"(<3 x double> %return352, <3 x double> %cast357)
  %return360 = call { <3 x double>, <3 x double>* } @"setcomp@V[VVI"(<3 x double>* %output179, <3 x double> %output358, i64 %output222)
  %output362 = extractvalue { <3 x double>, <3 x double>* } %return360, 1
  %output365 = sub i64 %n_controls.1, 2
  br label %cond366

cond366:                                          ; preds = %body367, %end304
  %p1.1 = phi <3 x double>* [ %output362, %end304 ], [ %output394, %body367 ]
  %i363.0 = phi i64 [ %output365, %end304 ], [ %output396, %body367 ]
  %return369 = call i64 @"ge@III"(i64 %i363.0, i64 0)
  %15 = icmp ne i64 %return369, 0
  br i1 %15, label %body367, label %end370

body367:                                          ; preds = %cond366
  %return375 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %r.1, i64 %i363.0)
  %return378 = call double @"getcomp@F[FI"(double* %c.0, i64 %i363.0)
  %output381 = add i64 %i363.0, 1
  %return382 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %p1.1, i64 %output381)
  %cast383 = call <3 x double> @"set@VF"(double %return378)
  %output384 = call <3 x double> @"mul@VV"(<3 x double> %cast383, <3 x double> %return382)
  %output385 = call <3 x double> @"sub@VV"(<3 x double> %return375, <3 x double> %output384)
  %return388 = call double @"getcomp@F[FI"(double* %b.1, i64 %i363.0)
  %cast389 = call <3 x double> @"set@VF"(double %return388)
  %output390 = call <3 x double> @"div@VV"(<3 x double> %output385, <3 x double> %cast389)
  %return392 = call { <3 x double>, <3 x double>* } @"setcomp@V[VVI"(<3 x double>* %p1.1, <3 x double> %output390, i64 %i363.0)
  %output394 = extractvalue { <3 x double>, <3 x double>* } %return392, 1
  %output396 = sub i64 %i363.0, 1
  br label %cond366

end370:                                           ; preds = %cond366
  br label %cond398

cond398:                                          ; preds = %body399, %end370
  %p2.1 = phi <3 x double>* [ %output179, %end370 ], [ %output421, %body399 ]
  %i397.0 = phi i64 [ 0, %end370 ], [ %output409, %body399 ]
  %return403 = call i64 @"lt@III"(i64 %i397.0, i64 %output222)
  %16 = icmp ne i64 %return403, 0
  br i1 %16, label %body399, label %end404

body399:                                          ; preds = %cond398
  %output409 = add i64 %i397.0, 1
  %return410 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %output174, i64 %output409)
  %output412 = call <3 x double> @"mul@VV"(<3 x double> %cast, <3 x double> %return410)
  %return416 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %p1.1, i64 %output409)
  %output417 = call <3 x double> @"sub@VV"(<3 x double> %output412, <3 x double> %return416)
  %return419 = call { <3 x double>, <3 x double>* } @"setcomp@V[VVI"(<3 x double>* %p2.1, <3 x double> %output417, i64 %i397.0)
  %output421 = extractvalue { <3 x double>, <3 x double>* } %return419, 1
  br label %cond398

end404:                                           ; preds = %cond398
  %return432 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %p1.1, i64 %output222)
  %output433 = call <3 x double> @"add@VV"(<3 x double> %return249, <3 x double> %return432)
  %cast434 = call <3 x double> @"set@VF"(double 5.000000e-01)
  %output435 = call <3 x double> @"mul@VV"(<3 x double> %cast434, <3 x double> %output433)
  %return437 = call { <3 x double>, <3 x double>* } @"setcomp@V[VVI"(<3 x double>* %p2.1, <3 x double> %output435, i64 %output222)
  %output439 = extractvalue { <3 x double>, <3 x double>* } %return437, 1
  br label %end186

cond441:                                          ; preds = %end505, %end186
  %i440.0 = phi i64 [ 0, %end186 ], [ %output544, %end505 ]
  %output445 = sub i64 %n_controls.1, 1
  %return446 = call i64 @"lt@III"(i64 %i440.0, i64 %output445)
  %17 = icmp ne i64 %return446, 0
  br i1 %17, label %body442, label %end447

body442:                                          ; preds = %cond441
  %output451 = sub i64 %n_controls.1, 2
  %output453 = sub i64 %output451, %i440.0
  br i1 %2, label %true455, label %false456

end447:                                           ; preds = %cond441
  %return549 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %p1.0, i64 %output445)
  %output550 = call <3 x double>* @"push@[VV"(<3 x double>* getelementptr inbounds ([0 x <3 x double>], [0 x <3 x double>]* @8, i64 0, i64 0), <3 x double> %return549)
  %output553 = sub i64 %return1, 4
  br label %cond555

true455:                                          ; preds = %body442
  %return458 = call i64 @"neg@II"(i64 1)
  %output460 = add i64 %output453, 1
  %output463 = mul i64 %output460, %output88
  %output464 = add i64 %return458, %output463
  %output468 = mul i64 %output453, %output88
  %output469 = add i64 1, %output468
  br label %end457

false456:                                         ; preds = %body442
  %output473 = add i64 %output453, 1
  %output476 = mul i64 %output473, %output88
  %output477 = sub i64 %output54, %output476
  %output478 = add i64 %output477, 1
  %output484 = mul i64 %output453, %output88
  %output485 = sub i64 %output54, %output484
  %output486 = sub i64 %output485, 1
  br label %end457

end457:                                           ; preds = %false456, %true455
  %p1idx.0 = phi i64 [ %output464, %true455 ], [ %output478, %false456 ]
  %p2idx.0 = phi i64 [ %output469, %true455 ], [ %output486, %false456 ]
  %return489 = call i64 @"primpoint@IIII"(i64 0, i64 %return3, i64 %p1idx.0)
  %return492 = call i64 @"primpoint@IIII"(i64 0, i64 %return3, i64 %p2idx.0)
  %return496 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %p1.0, i64 %i440.0)
  %return497 = call i64 @"setpointattrib@IISIV"(i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @13, i64 0, i64 0), i64 %return489, <3 x double> %return496)
  %output499 = sub i64 %return1, 4
  br label %cond500

cond500:                                          ; preds = %end516, %end457
  %k.0 = phi i64 [ 1, %end457 ], [ %output537, %end516 ]
  %return504 = call i64 @"le@III"(i64 %k.0, i64 %output499)
  %18 = icmp ne i64 %return504, 0
  br i1 %18, label %body501, label %end505

body501:                                          ; preds = %cond500
  %output509 = add i64 %output499, 1
  %cast510 = sitofp i64 %output509 to double
  %cast511 = sitofp i64 %k.0 to double
  %output512 = call double @"div@FF"(double %cast511, double %cast510)
  br i1 %2, label %true514, label %false515

end505:                                           ; preds = %cond500
  %return541 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %p2.0, i64 %i440.0)
  %return542 = call i64 @"setpointattrib@IISIV"(i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @13, i64 0, i64 0), i64 %return492, <3 x double> %return541)
  %output544 = add i64 %i440.0, 1
  br label %cond441

true514:                                          ; preds = %body501
  %output519 = sub i64 %p1idx.0, %k.0
  br label %end516

false515:                                         ; preds = %body501
  %output522 = add i64 %p1idx.0, %k.0
  br label %end516

end516:                                           ; preds = %false515, %true514
  %inter_idx.0 = phi i64 [ %output519, %true514 ], [ %output522, %false515 ]
  %return525 = call i64 @"primpoint@IIII"(i64 0, i64 %return3, i64 %inter_idx.0)
  %return532 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %p2.0, i64 %i440.0)
  %return534 = call <3 x double> @"lerp@VVVF"(<3 x double> %return496, <3 x double> %return532, double %output512)
  %return535 = call i64 @"setpointattrib@IISIV"(i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @13, i64 0, i64 0), i64 %return525, <3 x double> %return534)
  %output537 = add i64 %k.0, 1
  br label %cond500

cond555:                                          ; preds = %body556, %end447
  %tmp_pts_array.0 = phi <3 x double>* [ %output550, %end447 ], [ %output580, %body556 ]
  %i554.0 = phi i64 [ 1, %end447 ], [ %output582, %body556 ]
  %return559 = call i64 @"le@III"(i64 %i554.0, i64 %output553)
  %19 = icmp ne i64 %return559, 0
  br i1 %19, label %body556, label %end560

body556:                                          ; preds = %cond555
  %output565 = add i64 %output553, 1
  %cast566 = sitofp i64 %output565 to double
  %cast567 = sitofp i64 %i554.0 to double
  %output568 = call double @"div@FF"(double %cast567, double %cast566)
  %return577 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %p2.0, i64 %output445)
  %return579 = call <3 x double> @"lerp@VVVF"(<3 x double> %return549, <3 x double> %return577, double %output568)
  %output580 = call <3 x double>* @"push@[VV"(<3 x double>* %tmp_pts_array.0, <3 x double> %return579)
  %output582 = add i64 %i554.0, 1
  br label %cond555

end560:                                           ; preds = %cond555
  %return587 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %p2.0, i64 %output445)
  %output588 = call <3 x double>* @"push@[VV"(<3 x double>* %tmp_pts_array.0, <3 x double> %return587)
  %return592 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %output174, i64 %n_controls.1)
  %output593 = call <3 x double>* @"push@[VV"(<3 x double>* %output588, <3 x double> %return592)
  br label %end72

true600:                                          ; preds = %false82
  %return604 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %pts_array.0, i64 0)
  %return606 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %pts_array.0, i64 1)
  br label %end602

false601:                                         ; preds = %false82
  %return609 = call i64 @"primpoint@IIII"(i64 0, i64 %return3, i64 %prev_last_point.0)
  %return610 = call <3 x double> @"point@VISI"(i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @13, i64 0, i64 0), i64 %return609)
  %return612 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %pts_array.0, i64 0)
  br label %end602

end602:                                           ; preds = %false601, %true600
  %p0.0 = phi <3 x double> [ %return604, %true600 ], [ %return610, %false601 ]
  %p3.0 = phi <3 x double> [ %return606, %true600 ], [ %return612, %false601 ]
  %push_p0.0 = phi i64 [ 1, %true600 ], [ 0, %false601 ]
  %20 = icmp ne i64 %push_p0.0, 0
  br i1 %20, label %true614, label %end615

true614:                                          ; preds = %end602
  %output618 = call <3 x double>* @"push@[VV"(<3 x double>* getelementptr inbounds ([0 x <3 x double>], [0 x <3 x double>]* @8, i64 0, i64 0), <3 x double> %p0.0)
  br label %end615

end615:                                           ; preds = %true614, %end602
  %controls.1 = phi <3 x double>* [ %output618, %true614 ], [ getelementptr inbounds ([0 x <3 x double>], [0 x <3 x double>]* @8, i64 0, i64 0), %end602 ]
  %return621 = call <3 x double> @"lerp@VVVF"(<3 x double> %p0.0, <3 x double> %p3.0, double 2.500000e-01)
  %return624 = call <3 x double> @"lerp@VVVF"(<3 x double> %p0.0, <3 x double> %p3.0, double 7.500000e-01)
  %output627 = call <3 x double>* @"push@[VV"(<3 x double>* %controls.1, <3 x double> %return621)
  %output630 = sub i64 %return1, 4
  br label %cond632

cond632:                                          ; preds = %body633, %end615
  %controls.2 = phi <3 x double>* [ %output627, %end615 ], [ %output651, %body633 ]
  %i631.0 = phi i64 [ 1, %end615 ], [ %output653, %body633 ]
  %return636 = call i64 @"le@III"(i64 %i631.0, i64 %output630)
  %21 = icmp ne i64 %return636, 0
  br i1 %21, label %body633, label %end637

body633:                                          ; preds = %cond632
  %output642 = add i64 %output630, 1
  %cast643 = sitofp i64 %output642 to double
  %cast644 = sitofp i64 %i631.0 to double
  %output645 = call double @"div@FF"(double %cast644, double %cast643)
  %return650 = call <3 x double> @"lerp@VVVF"(<3 x double> %return621, <3 x double> %return624, double %output645)
  %output651 = call <3 x double>* @"push@[VV"(<3 x double>* %controls.2, <3 x double> %return650)
  %output653 = add i64 %i631.0, 1
  br label %cond632

end637:                                           ; preds = %cond632
  %output656 = call <3 x double>* @"push@[VV"(<3 x double>* %controls.2, <3 x double> %return624)
  %output659 = call <3 x double>* @"push@[VV"(<3 x double>* %output656, <3 x double> %p3.0)
  br label %end72

true670:                                          ; preds = %false
  %return674 = call i64 @"gt@III"(i64 %return11, i64 0)
  %22 = icmp ne i64 %return674, 0
  br i1 %22, label %true675, label %end676

true675:                                          ; preds = %true670
  %return679 = call i64 @"primpoint@IIII"(i64 0, i64 %return3, i64 %prev_last_point.0)
  %return680 = call <3 x double> @"point@VISI"(i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @13, i64 0, i64 0), i64 %return679)
  br label %end676

end676:                                           ; preds = %true675, %true670
  %last_anchor_pos.0 = phi <3 x double> [ %return680, %true675 ], [ zeroinitializer, %true670 ]
  br label %cond682

cond682:                                          ; preds = %end696, %end676
  %tmp_pts_array672.0 = phi <3 x double>* [ getelementptr inbounds ([0 x <3 x double>], [0 x <3 x double>]* @8, i64 0, i64 0), %end676 ], [ %output711, %end696 ]
  %last_anchor_pos.1 = phi <3 x double> [ %last_anchor_pos.0, %end676 ], [ %return706, %end696 ]
  %i681.0 = phi i64 [ 0, %end676 ], [ %output713, %end696 ]
  %return687 = call i64 @"lt@III"(i64 %i681.0, i64 %return61)
  %23 = icmp ne i64 %return687, 0
  br i1 %23, label %body683, label %end688

body683:                                          ; preds = %cond682
  %return691 = call i64 @"gt@III"(i64 %i681.0, i64 0)
  %return694 = call i64 @"or@III"(i64 %return691, i64 %return674)
  %24 = icmp ne i64 %return694, 0
  br i1 %24, label %true695, label %end696

end688:                                           ; preds = %cond682
  br label %end72

true695:                                          ; preds = %body683
  %return701 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %pts_array.0, i64 %i681.0)
  %return702 = call <3 x double> @"lerp@VVVF"(<3 x double> %last_anchor_pos.1, <3 x double> %return701, double 5.000000e-01)
  %output703 = call <3 x double>* @"push@[VV"(<3 x double>* %tmp_pts_array672.0, <3 x double> %return702)
  br label %end696

end696:                                           ; preds = %true695, %body683
  %tmp_pts_array672.1 = phi <3 x double>* [ %output703, %true695 ], [ %tmp_pts_array672.0, %body683 ]
  %return706 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %pts_array.0, i64 %i681.0)
  %output711 = call <3 x double>* @"push@[VV"(<3 x double>* %tmp_pts_array672.1, <3 x double> %return706)
  %output713 = add i64 %i681.0, 1
  br label %cond682

true716:                                          ; preds = %end72
  %return719 = call i64 @"pointvertex@III"(i64 0, i64 %snap_close_pt.0)
  %return721 = call i64 @"vertexprim@III"(i64 0, i64 %return719)
  %return723 = call i64 @"vertexprimindex@III"(i64 0, i64 %return719)
  %return725 = call i64 @"ne@III"(i64 %return723, i64 0)
  %25 = icmp ne i64 %return725, 0
  br i1 %25, label %true726, label %end727

end717:                                           ; preds = %true750, %false751, %end72
  %pts_array.3 = phi <3 x double>* [ %output764, %true750 ], [ %output784, %false751 ], [ %pts_array.2, %end72 ]
  %return787 = call i64 @"len@I[V"(<3 x double>* %pts_array.3)
  %output788 = call i64* @"resize@[II"(i64* getelementptr inbounds ([0 x i64], [0 x i64]* @15, i64 0, i64 0), i64 %return787)
  br i1 %2, label %cond794, label %cond858

true726:                                          ; preds = %true716
  %output729 = sub i64 %return723, 1
  br label %end727

end727:                                           ; preds = %true726, %true716
  %snap_handle_idx.0 = phi i64 [ %output729, %true726 ], [ 1, %true716 ]
  %return732 = call i64 @"primpoint@IIII"(i64 0, i64 %return721, i64 %snap_handle_idx.0)
  %return734 = call <3 x double> @"point@VISI"(i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @13, i64 0, i64 0), i64 %snap_close_pt.0)
  %return736 = call <3 x double> @"point@VISI"(i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @13, i64 0, i64 0), i64 %return732)
  %return739 = call i64 @"len@I[V"(<3 x double>* %pts_array.2)
  %output740 = sub i64 %return739, 2
  %return741 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %pts_array.2, i64 %output740)
  %cast743 = call <3 x double> @"set@VI"(i64 2)
  %output744 = call <3 x double> @"mul@VV"(<3 x double> %cast743, <3 x double> %return734)
  %output746 = call <3 x double> @"sub@VV"(<3 x double> %output744, <3 x double> %return736)
  %return749 = call i64 @"eq@III"(i64 %return3, i64 %return721)
  %26 = icmp ne i64 %return749, 0
  br i1 %26, label %true750, label %false751

true750:                                          ; preds = %end727
  %output758 = call <3 x double> @"add@VV"(<3 x double> %return741, <3 x double> %output746)
  %cast759 = call <3 x double> @"set@VF"(double 5.000000e-01)
  %output760 = call <3 x double> @"mul@VV"(<3 x double> %cast759, <3 x double> %output758)
  %return762 = call { <3 x double>, <3 x double>* } @"setcomp@V[VVI"(<3 x double>* %pts_array.2, <3 x double> %output760, i64 %output740)
  %output764 = extractvalue { <3 x double>, <3 x double>* } %return762, 1
  %return770 = call i64 @"len@I[V"(<3 x double>* %output764)
  %output771 = sub i64 %return770, 2
  %return772 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %output764, i64 %output771)
  %output773 = call <3 x double> @"sub@VV"(<3 x double> %output744, <3 x double> %return772)
  %return776 = call i64 @"setpointattrib@IISIV"(i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @13, i64 0, i64 0), i64 %return732, <3 x double> %output773)
  br label %end717

false751:                                         ; preds = %end727
  %return782 = call { <3 x double>, <3 x double>* } @"setcomp@V[VVI"(<3 x double>* %pts_array.2, <3 x double> %output746, i64 %output740)
  %output784 = extractvalue { <3 x double>, <3 x double>* } %return782, 1
  br label %end717

end792:                                           ; preds = %cond858, %cond830
  ret void

cond794:                                          ; preds = %end717, %body795
  %i793.0 = phi i64 [ 0, %end717 ], [ %output805, %body795 ]
  %return799 = call i64 @"lt@III"(i64 %i793.0, i64 %return787)
  %27 = icmp ne i64 %return799, 0
  br i1 %27, label %body795, label %end800

body795:                                          ; preds = %cond794
  %return803 = call i64 @"addvertex@IIII"(i64 0, i64 %return3, i64 0)
  %output805 = add i64 %i793.0, 1
  br label %cond794

end800:                                           ; preds = %cond794
  br label %cond809

cond809:                                          ; preds = %body810, %end800
  %i806.0 = phi i64 [ %output54, %end800 ], [ %output825, %body810 ]
  %return812 = call i64 @"ge@III"(i64 %i806.0, i64 0)
  %28 = icmp ne i64 %return812, 0
  br i1 %28, label %body810, label %end813

body810:                                          ; preds = %cond809
  %output819 = add i64 %i806.0, %return787
  %return822 = call i64 @"primpoint@IIII"(i64 0, i64 %return3, i64 %i806.0)
  %return823 = call i64 @"setvertexpoint@IIIII"(i64 0, i64 %return3, i64 %output819, i64 %return822)
  %output825 = sub i64 %i806.0, 1
  br label %cond809

end813:                                           ; preds = %cond809
  %output829 = sub i64 %return787, 1
  br label %cond830

cond830:                                          ; preds = %body831, %end813
  %added_pts.0 = phi i64* [ %output788, %end813 ], [ %output844, %body831 ]
  %i826.0 = phi i64 [ %output829, %end813 ], [ %output856, %body831 ]
  %return833 = call i64 @"ge@III"(i64 %i826.0, i64 0)
  %29 = icmp ne i64 %return833, 0
  br i1 %29, label %body831, label %end792

body831:                                          ; preds = %cond830
  %return839 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %pts_array.3, i64 %i826.0)
  %return840 = call i64 @"addpoint@IIV"(i64 0, <3 x double> %return839)
  %return842 = call { i64, i64* } @"setcomp@I[III"(i64* %added_pts.0, i64 %return840, i64 %i826.0)
  %output844 = extractvalue { i64, i64* } %return842, 1
  %output850 = sub i64 %output829, %i826.0
  %return853 = call i64 @"getcomp@I[II"(i64* %output844, i64 %i826.0)
  %return854 = call i64 @"setvertexpoint@IIIII"(i64 0, i64 %return3, i64 %output850, i64 %return853)
  %output856 = sub i64 %i826.0, 1
  br label %cond830

cond858:                                          ; preds = %end717, %body859
  %added_pts.1 = phi i64* [ %output788, %end717 ], [ %output874, %body859 ]
  %i793.1 = phi i64 [ 0, %end717 ], [ %output881, %body859 ]
  %return863 = call i64 @"lt@III"(i64 %i793.1, i64 %return787)
  %30 = icmp ne i64 %return863, 0
  br i1 %30, label %body859, label %end792

body859:                                          ; preds = %cond858
  %return869 = call <3 x double> @"getcomp@V[VI"(<3 x double>* %pts_array.3, i64 %i793.1)
  %return870 = call i64 @"addpoint@IIV"(i64 0, <3 x double> %return869)
  %return872 = call { i64, i64* } @"setcomp@I[III"(i64* %added_pts.1, i64 %return870, i64 %i793.1)
  %output874 = extractvalue { i64, i64* } %return872, 1
  %return878 = call i64 @"getcomp@I[II"(i64* %output874, i64 %i793.1)
  %return879 = call i64 @"addvertex@IIII"(i64 0, i64 %return3, i64 %return878)
  %output881 = add i64 %i793.1, 1
  br label %cond858
}

; Function Attrs: nounwind readnone
declare i8* @"chs@SS"(i8*) #1

; Function Attrs: nounwind readnone
declare i64 @"chi@IS"(i8*) #1

; Function Attrs: nounwind
declare i64 @"primintrinsic@IISI"(i64, i8*, i64) #2

; Function Attrs: nounwind readnone
declare i64 @"eq@ISS"(i8*, i8*) #1

; Function Attrs: nounwind
declare i64 @"primvertexcount@III"(i64, i64) #2

; Function Attrs: nounwind readnone
declare i8** @"split@[SS"(i8*) #1

; Function Attrs: nounwind readnone
declare i64 @"len@I[S"(i8**) #1

; Function Attrs: nounwind readnone
declare i64 @"lt@III"(i64, i64) #1

; Function Attrs: nounwind readnone
declare i8* @"getcomp@S[SI"(i8**, i64) #1

; Function Attrs: nounwind readnone
declare i64 @"atoi@IS"(i8*) #1

; Function Attrs: nounwind readnone
declare i8** @"split@[SSS"(i8*, i8*) #1

; Function Attrs: nounwind readnone
declare i64 @"ne@III"(i64, i64) #1

; Function Attrs: nounwind readnone
declare double @"atof@FS"(i8*) #1

; Function Attrs: nounwind readnone
declare <3 x double> @"set@VFFF"(double, double, double) #1

; Function Attrs: nounwind readnone
declare <3 x double>* @"push@[VV"(<3 x double>*, <3 x double>) #1

; Function Attrs: nounwind readnone
declare i64 @"len@I[V"(<3 x double>*) #1

; Function Attrs: nounwind readnone
declare i64 @"gt@III"(i64, i64) #1

; Function Attrs: nounwind readnone
declare i64 @"and@III"(i64, i64) #1

; Function Attrs: nounwind readnone
declare i64 @"ge@III"(i64, i64) #1

; Function Attrs: nounwind
declare i64 @"primpoint@IIII"(i64, i64, i64) #2

; Function Attrs: nounwind
declare i64 @"inpointgroup@IISI"(i64, i8*, i64) #2

; Function Attrs: nounwind readnone
declare i64 @"not@II"(i64) #1

; Function Attrs: nounwind readnone
declare <3 x double>* @"resize@[VI"(<3 x double>*, i64) #1

; Function Attrs: nounwind
declare <3 x double> @"point@VISI"(i64, i8*, i64) #2

; Function Attrs: nounwind readnone
declare { <3 x double>, <3 x double>* } @"setcomp@V[VVI"(<3 x double>*, <3 x double>, i64) #1

; Function Attrs: nounwind readnone
declare <3 x double> @"getcomp@V[VI"(<3 x double>*, i64) #1

; Function Attrs: nounwind readnone
declare double* @"resize@[FI"(double*, i64) #1

; Function Attrs: nounwind readnone
declare { double, double* } @"setcomp@F[FFI"(double*, double, i64) #1

; Function Attrs: nounwind readnone
declare <3 x double> @"set@VI"(i64) #1

; Function Attrs: nounwind readnone
declare <3 x double> @"mul@VV"(<3 x double>, <3 x double>) #1

; Function Attrs: nounwind readnone
declare <3 x double> @"add@VV"(<3 x double>, <3 x double>) #1

; Function Attrs: nounwind readnone
declare double @"getcomp@F[FI"(double*, i64) #1

; Function Attrs: nounwind readnone
declare double @"div@FF"(double, double) #1

; Function Attrs: nounwind readnone
declare <3 x double> @"set@VF"(double) #1

; Function Attrs: nounwind readnone
declare <3 x double> @"sub@VV"(<3 x double>, <3 x double>) #1

; Function Attrs: nounwind readnone
declare <3 x double> @"div@VV"(<3 x double>, <3 x double>) #1

; Function Attrs: nounwind readnone
declare i64 @"neg@II"(i64) #1

; Function Attrs: nounwind
declare i64 @"setpointattrib@IISIV"(i64, i8*, i64, <3 x double>) #2

; Function Attrs: nounwind readnone
declare i64 @"le@III"(i64, i64) #1

; Function Attrs: nounwind
declare <3 x double> @"lerp@VVVF"(<3 x double>, <3 x double>, double) #2

; Function Attrs: nounwind readnone
declare i64 @"eq@III"(i64, i64) #1

; Function Attrs: nounwind readnone
declare i64 @"or@III"(i64, i64) #1

; Function Attrs: nounwind
declare i64 @"pointvertex@III"(i64, i64) #2

; Function Attrs: nounwind
declare i64 @"vertexprim@III"(i64, i64) #2

; Function Attrs: nounwind
declare i64 @"vertexprimindex@III"(i64, i64) #2

; Function Attrs: nounwind readnone
declare i64* @"resize@[II"(i64*, i64) #1

; Function Attrs: nounwind
declare i64 @"addvertex@IIII"(i64, i64, i64) #2

; Function Attrs: nounwind
declare i64 @"setvertexpoint@IIIII"(i64, i64, i64, i64) #2

; Function Attrs: nounwind
declare i64 @"addpoint@IIV"(i64, <3 x double>) #2

; Function Attrs: nounwind readnone
declare { i64, i64* } @"setcomp@I[III"(i64*, i64, i64) #1

; Function Attrs: nounwind readnone
declare i64 @"getcomp@I[II"(i64*, i64) #1

; Function Attrs: nounwind
define void @__vex_snippet() #2 {
__llvm_entry:
  call void @__vex_snippet_snippet()
  ret void
}

define void @__shader_default_arguments() {
__llvm_entry:
  call void @__vex_snippet()
  ret void
}

attributes #0 = { alwaysinline nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"19.0.531"}
!2 = !{!"64"}

;_code_end
