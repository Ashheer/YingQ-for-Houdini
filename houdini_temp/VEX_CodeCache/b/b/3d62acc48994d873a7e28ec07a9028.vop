;_name	/obj/STUD_TOOL_FoundationBuilding1/buildingAsset/seamPoint_ByBottomRow/attribvop1
; ModuleID = 'obj_STUD_TOOL_FoundationBuilding1_buildingAsset_seamPoint_ByBottomRow_attribvop1'
source_filename = "obj_STUD_TOOL_FoundationBuilding1_buildingAsset_seamPoint_ByBottomRow_attribvop1"

@group_seamPoint = external global i64
@0 = private constant [16 x i8] c"group_seamPoint\00"

; Function Attrs: alwaysinline nounwind
define private void @"_obj_STUD_TOOL_FoundationBuilding1_buildingAsset_seamPoint_ByBottomRow_attribvop1_snippet1@IV"(i64* %_bound_group_seamPoint, <3 x double>* %_bound_P) #0 {
__llvm_entry:
  %_bound_group_seamPoint1 = load i64, i64* %_bound_group_seamPoint
  %_bound_P2 = load <3 x double>, <3 x double>* %_bound_P
  %return = call double @"getcomp@FVI"(<3 x double> %_bound_P2, i64 1)
  %return3 = fcmp olt double %return, 1.000000e-03
  %return4 = zext i1 %return3 to i64
  %return5 = and i64 %_bound_group_seamPoint1, %return4
  store i64 %return5, i64* %_bound_group_seamPoint
  ret void
}

; Function Attrs: nounwind readnone
declare double @"getcomp@FVI"(<3 x double>, i64) #1

; Function Attrs: nounwind
define void @obj_STUD_TOOL_FoundationBuilding1_buildingAsset_seamPoint_ByBottomRow_attribvop1(i64 %group_seamPoint, <3 x double> %P) #2 {
__llvm_entry:
  %0 = alloca <3 x double>
  %"<group_seamPoint>" = alloca i64
  store i64 %group_seamPoint, i64* %"<group_seamPoint>"
  store <3 x double> %P, <3 x double>* %0
  call void @"_obj_STUD_TOOL_FoundationBuilding1_buildingAsset_seamPoint_ByBottomRow_attribvop1_snippet1@IV"(i64* %"<group_seamPoint>", <3 x double>* %0)
  %evalue = load i64, i64* %"<group_seamPoint>"
  %gvalue = call i64 @"_export@ISI"(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @0, i64 0, i64 0), i64 %evalue) #3
  store i64 %gvalue, i64* @group_seamPoint
  ret void
}

declare i64 @"_export@ISI"(i8*, i64)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @obj_STUD_TOOL_FoundationBuilding1_buildingAsset_seamPoint_ByBottomRow_attribvop1(i64 0, <3 x double> zeroinitializer)
  ret void
}

attributes #0 = { alwaysinline nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind }
attributes #3 = { nounwind readonly }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"19.0.498"}
!2 = !{!"64"}

;_code_end
