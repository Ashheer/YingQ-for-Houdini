;_name	<vexpression>
; ModuleID = '__vex_snippet'
source_filename = "__vex_snippet"

@0 = private constant [5 x i8] c"npts\00"
@1 = private constant [5 x i8] c"seed\00"
@2 = private constant [6 x i8] c"frame\00"
@3 = private constant [12 x i8] c"sourceptnum\00"

; Function Attrs: alwaysinline nounwind
define private void @__vex_snippet_snippet() #0 {
__llvm_entry:
  %return = call double @"ch@FS"(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i64 0, i64 0))
  %cast = fptosi double %return to i64
  %return1 = call double @"ch@FS"(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @1, i64 0, i64 0))
  %cast2 = fptosi double %return1 to i64
  %return3 = call double @"ch@FS"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @2, i64 0, i64 0))
  %return4 = call i64 @"npoints@II"(i64 0)
  %return5 = call i64 @"nprimitives@II"(i64 0)
  br label %cond

cond:                                             ; preds = %body, %__llvm_entry
  %i.0 = phi i64 [ 0, %__llvm_entry ], [ %output32, %body ]
  %return8 = call i64 @"lt@III"(i64 %i.0, i64 %cast)
  %0 = icmp ne i64 %return8, 0
  br i1 %0, label %body, label %end

body:                                             ; preds = %cond
  %cast10 = sitofp i64 %i.0 to double
  %cast13 = sitofp i64 %cast2 to double
  %return14 = call <3 x double> @"set@VFFF"(double %cast10, double %return3, double %cast13)
  %return15 = call double @"rand@FV"(<3 x double> %return14)
  %cast18 = sitofp i64 %return4 to double
  %output = fmul double %return15, %cast18
  %cast19 = fptosi double %output to i64
  %output22 = sub i64 %return4, 1
  %return23 = call i64 @"clamp@IIII"(i64 %cast19, i64 0, i64 %output22)
  %return24 = call i64 @"geoself@I"()
  %return26 = call i64 @"addpoint@III"(i64 %return24, i64 %return23)
  %return27 = call i64 @"geoself@I"()
  %return30 = call i64 @"setpointattrib@IISII"(i64 %return27, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @3, i64 0, i64 0), i64 %return26, i64 %return23)
  %output32 = add i64 %i.0, 1
  br label %cond

end:                                              ; preds = %cond
  br label %cond34

cond34:                                           ; preds = %body35, %end
  %i33.0 = phi i64 [ 0, %end ], [ %output45, %body35 ]
  %return38 = call i64 @"lt@III"(i64 %i33.0, i64 %return5)
  %1 = icmp ne i64 %return38, 0
  br i1 %1, label %body35, label %end39

body35:                                           ; preds = %cond34
  %return41 = call i64 @"geoself@I"()
  %return43 = call i64 @"removeprim@IIII"(i64 %return41, i64 %i33.0, i64 0)
  %output45 = add i64 %i33.0, 1
  br label %cond34

end39:                                            ; preds = %cond34
  br label %cond47

cond47:                                           ; preds = %body48, %end39
  %i46.0 = phi i64 [ 0, %end39 ], [ %output58, %body48 ]
  %return51 = call i64 @"lt@III"(i64 %i46.0, i64 %return4)
  %2 = icmp ne i64 %return51, 0
  br i1 %2, label %body48, label %end52

body48:                                           ; preds = %cond47
  %return54 = call i64 @"geoself@I"()
  %return56 = call i64 @"removepoint@III"(i64 %return54, i64 %i46.0)
  %output58 = add i64 %i46.0, 1
  br label %cond47

end52:                                            ; preds = %cond47
  ret void
}

; Function Attrs: nounwind readnone
declare double @"ch@FS"(i8*) #1

; Function Attrs: nounwind
declare i64 @"npoints@II"(i64) #2

; Function Attrs: nounwind
declare i64 @"nprimitives@II"(i64) #2

; Function Attrs: nounwind readnone
declare i64 @"lt@III"(i64, i64) #1

; Function Attrs: nounwind readnone
declare <3 x double> @"set@VFFF"(double, double, double) #1

; Function Attrs: nounwind
declare double @"rand@FV"(<3 x double>) #2

; Function Attrs: nounwind
declare i64 @"clamp@IIII"(i64, i64, i64) #2

; Function Attrs: nounwind
declare i64 @"geoself@I"() #2

; Function Attrs: nounwind
declare i64 @"addpoint@III"(i64, i64) #2

; Function Attrs: nounwind
declare i64 @"setpointattrib@IISII"(i64, i8*, i64, i64) #2

; Function Attrs: nounwind
declare i64 @"removeprim@IIII"(i64, i64, i64) #2

; Function Attrs: nounwind
declare i64 @"removepoint@III"(i64, i64) #2

; Function Attrs: nounwind
define void @__vex_snippet() #2 {
__llvm_entry:
  call void @__vex_snippet_snippet()
  ret void
}

define void @__shader_default_arguments() {
__llvm_entry:
  call void @__vex_snippet()
  ret void
}

attributes #0 = { alwaysinline nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"19.0.531"}
!2 = !{!"64"}

;_code_end
