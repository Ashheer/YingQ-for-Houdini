;_name	/obj/geo1/circle_fee1/biascurve_fee1/primitivewrangle1/attribvop1
; ModuleID = 'obj_geo1_circle_fee1_biascurve_fee1_primitivewrangle1_attribvop1'

@0 = private constant [0 x i64] zeroinitializer
@primpoints = external global i64*
@primnum = external global i64
@1 = private constant [11 x i8] c"primpoints\00"
@2 = private constant [8 x i8] c"primnum\00"

define private void @"_obj_geo1_circle_fee1_biascurve_fee1_primitivewrangle1_attribvop1_snippet1@[II"(i64** %_bound_primpoints, i64* %_bound_primnum) nounwind alwaysinline {
__llvm_entry:
  %_bound_primnum1 = load i64* %_bound_primnum
  %return = call i64* @"primpoints@[III"(i64 0, i64 %_bound_primnum1)
  store i64* %return, i64** %_bound_primpoints
  ret void
}

declare i64* @"primpoints@[III"(i64, i64) nounwind

define void @obj_geo1_circle_fee1_biascurve_fee1_primitivewrangle1_attribvop1(i64* %primpoints, i64 %primnum) nounwind {
__llvm_entry:
  %0 = alloca i64
  %"<primpoints>" = alloca i64*
  store i64* %primpoints, i64** %"<primpoints>"
  store i64 %primnum, i64* %0
  call void @"_obj_geo1_circle_fee1_biascurve_fee1_primitivewrangle1_attribvop1_snippet1@[II"(i64** %"<primpoints>", i64* %0)
  %evalue = load i64** %"<primpoints>"
  %gvalue = call i64* @"_export@[IS[I"(i8* getelementptr inbounds ([11 x i8]* @1, i64 0, i64 0), i64* %evalue) nounwind readonly
  %gvalue3 = call i64 @"_export@ISI"(i8* getelementptr inbounds ([8 x i8]* @2, i64 0, i64 0), i64 %primnum) nounwind readonly
  store i64* %gvalue, i64** @primpoints
  store i64 %gvalue3, i64* @primnum
  ret void
}

declare i64* @"_export@[IS[I"(i8*, i64*)

declare i64 @"_export@ISI"(i8*, i64)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @obj_geo1_circle_fee1_biascurve_fee1_primitivewrangle1_attribvop1(i64* getelementptr inbounds ([0 x i64]* @0, i64 0, i64 0), i64 0)
  ret void
}

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = metadata !{metadata !"cvex"}
!1 = metadata !{metadata !"18.5.633"}
!2 = metadata !{metadata !"64"}

;_code_end
