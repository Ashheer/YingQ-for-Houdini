;_name	<vexpression>
; ModuleID = '__vex_snippet'
source_filename = "__vex_snippet"

@0 = private constant [1 x i8] zeroinitializer
@1 = private constant [9 x i8] c"distance\00"
@2 = private constant [6 x i8] c"scale\00"
@3 = private constant [6 x i8] c"force\00"
@4 = private constant [5 x i8] c"mult\00"
@5 = private constant [7 x i8] c"impact\00"
@6 = private constant [17 x i8] c"plasticthreshold\00"
@constraint_name = external global i8*
@primnum = external global i64
@restlength = external global double
@7 = private constant [16 x i8] c"constraint_name\00"
@8 = private constant [8 x i8] c"primnum\00"
@9 = private constant [11 x i8] c"restlength\00"

; Function Attrs: alwaysinline nounwind
define private void @"__vex_snippet_snippet@SIF"(i8** %_bound_constraint_name, i64* %_bound_primnum, double* %_bound_restlength) #0 {
__llvm_entry:
  %_bound_constraint_name1 = load i8*, i8** %_bound_constraint_name
  %return = call i64 @"eq@ISS"(i8* %_bound_constraint_name1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @0, i64 0, i64 0))
  %0 = icmp ne i64 %return, 0
  br i1 %0, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %_bound_primnum2 = load i64, i64* %_bound_primnum
  %return3 = call i64 @"removeprim@IIII"(i64 0, i64 %_bound_primnum2, i64 1)
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  %return4 = call i64 @"hasprimattrib@IIS"(i64 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @1, i64 0, i64 0))
  %1 = icmp ne i64 %return4, 0
  br i1 %1, label %true5, label %end6

true5:                                            ; preds = %end
  %_bound_primnum7 = load i64, i64* %_bound_primnum
  %return8 = call double @"prim@FISI"(i64 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @1, i64 0, i64 0), i64 %_bound_primnum7)
  %_bound_restlength10 = load double, double* %_bound_restlength
  %return12 = call double @"min@FFF"(double %_bound_restlength10, double %return8)
  %output = fsub double %return8, %return12
  %return14 = call double @"chf@FS"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @2, i64 0, i64 0))
  %output15 = fmul double %output, %return14
  %_bound_primnum16 = load i64, i64* %_bound_primnum
  %return18 = call i64 @"setprimattrib@IISIF"(i64 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @1, i64 0, i64 0), i64 %_bound_primnum16, double %output15)
  br label %end6

end6:                                             ; preds = %true5, %end
  %return19 = call i64 @"hasprimattrib@IIS"(i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @3, i64 0, i64 0))
  %2 = icmp ne i64 %return19, 0
  br i1 %2, label %true20, label %end21

true20:                                           ; preds = %end6
  %_bound_primnum22 = load i64, i64* %_bound_primnum
  %return23 = call double @"chf@FS"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @2, i64 0, i64 0))
  %return24 = call i64 @"setprimattrib@IISIFS"(i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @3, i64 0, i64 0), i64 %_bound_primnum22, double %return23, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @4, i64 0, i64 0))
  br label %end21

end21:                                            ; preds = %true20, %end6
  %_bound_restlength25 = load double, double* %_bound_restlength
  %return26 = call double @"ch@FS"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @2, i64 0, i64 0))
  %output27 = fmul double %_bound_restlength25, %return26
  store double %output27, double* %_bound_restlength
  %return28 = call i64 @"hasprimattrib@IIS"(i64 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @5, i64 0, i64 0))
  %3 = icmp ne i64 %return28, 0
  br i1 %3, label %true29, label %end30

true29:                                           ; preds = %end21
  %_bound_primnum31 = load i64, i64* %_bound_primnum
  %return32 = call double @"chf@FS"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @2, i64 0, i64 0))
  %return33 = call i64 @"setprimattrib@IISIFS"(i64 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @5, i64 0, i64 0), i64 %_bound_primnum31, double %return32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @4, i64 0, i64 0))
  br label %end30

end30:                                            ; preds = %true29, %end21
  %return34 = call i64 @"hasprimattrib@IIS"(i64 0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @6, i64 0, i64 0))
  %4 = icmp ne i64 %return34, 0
  br i1 %4, label %true35, label %end36

true35:                                           ; preds = %end30
  %_bound_primnum37 = load i64, i64* %_bound_primnum
  %return38 = call double @"prim@FISI"(i64 0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @6, i64 0, i64 0), i64 %_bound_primnum37)
  %return39 = fcmp oge double %return38, 0.000000e+00
  br i1 %return39, label %true41, label %end36

end36:                                            ; preds = %true35, %true41, %end30
  ret void

true41:                                           ; preds = %true35
  %_bound_primnum43 = load i64, i64* %_bound_primnum
  %return44 = call double @"chf@FS"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @2, i64 0, i64 0))
  %return45 = call i64 @"setprimattrib@IISIFS"(i64 0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @6, i64 0, i64 0), i64 %_bound_primnum43, double %return44, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @4, i64 0, i64 0))
  br label %end36
}

; Function Attrs: nounwind readnone
declare i64 @"eq@ISS"(i8*, i8*) #1

; Function Attrs: nounwind
declare i64 @"removeprim@IIII"(i64, i64, i64) #2

; Function Attrs: nounwind
declare i64 @"hasprimattrib@IIS"(i64, i8*) #2

; Function Attrs: nounwind
declare double @"prim@FISI"(i64, i8*, i64) #2

; Function Attrs: nounwind readnone
declare double @"min@FFF"(double, double) #1

; Function Attrs: nounwind readnone
declare double @"chf@FS"(i8*) #1

; Function Attrs: nounwind
declare i64 @"setprimattrib@IISIF"(i64, i8*, i64, double) #2

; Function Attrs: nounwind
declare i64 @"setprimattrib@IISIFS"(i64, i8*, i64, double, i8*) #2

; Function Attrs: nounwind readnone
declare double @"ch@FS"(i8*) #1

; Function Attrs: nounwind
define void @__vex_snippet(i8* %constraint_name, i64 %primnum, double %restlength) #2 {
__llvm_entry:
  %"<restlength>" = alloca double
  %0 = alloca i8*
  %1 = alloca i64
  store double %restlength, double* %"<restlength>"
  store i8* %constraint_name, i8** %0
  store i64 %primnum, i64* %1
  call void @"__vex_snippet_snippet@SIF"(i8** %0, i64* %1, double* %"<restlength>")
  %gvalue = call i8* @"_export@SSS"(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @7, i64 0, i64 0), i8* %constraint_name) #3
  %gvalue4 = call i64 @"_export@ISI"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @8, i64 0, i64 0), i64 %primnum) #3
  %evalue5 = load double, double* %"<restlength>"
  %gvalue6 = call double @"_export@FSF"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @9, i64 0, i64 0), double %evalue5) #3
  store i8* %gvalue, i8** @constraint_name
  store i64 %gvalue4, i64* @primnum
  store double %gvalue6, double* @restlength
  ret void
}

declare i8* @"_export@SSS"(i8*, i8*)

declare i64 @"_export@ISI"(i8*, i64)

declare double @"_export@FSF"(i8*, double)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @__vex_snippet(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @0, i64 0, i64 0), i64 0, double 0.000000e+00)
  ret void
}

attributes #0 = { alwaysinline nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind }
attributes #3 = { nounwind readonly }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"19.0.498"}
!2 = !{!"64"}

;_code_end
