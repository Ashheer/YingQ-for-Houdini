;_name	<vexpression>
; ModuleID = '__vex_snippet'
source_filename = "__vex_snippet"

@0 = private constant [1 x i64] zeroinitializer
@1 = private constant [0 x i64] zeroinitializer
@__offsets = external global i64*
@__sizes = external global i64*
@2 = private constant [10 x i8] c"__offsets\00"
@3 = private constant [8 x i8] c"__sizes\00"

; Function Attrs: alwaysinline nounwind
define private void @"__vex_snippet_snippet@[I[I"(i64** %_bound___offsets, i64** %_bound___sizes) #0 {
__llvm_entry:
  store i64* getelementptr inbounds ([1 x i64], [1 x i64]* @0, i64 0, i64 0), i64** %_bound___offsets
  %return = call i64 @"nprimitives@II"(i64 0)
  %return1 = call i64* @"array@[I:I"(i64 %return)
  store i64* %return1, i64** %_bound___sizes
  ret void
}

; Function Attrs: nounwind
declare i64 @"nprimitives@II"(i64) #1

; Function Attrs: nounwind readnone
declare i64* @"array@[I:I"(i64) #2

; Function Attrs: nounwind
define void @__vex_snippet(i64* %__offsets, i64* %__sizes) #1 {
__llvm_entry:
  %"<__sizes>" = alloca i64*
  %"<__offsets>" = alloca i64*
  store i64* %__offsets, i64** %"<__offsets>"
  store i64* %__sizes, i64** %"<__sizes>"
  call void @"__vex_snippet_snippet@[I[I"(i64** %"<__offsets>", i64** %"<__sizes>")
  %evalue = load i64*, i64** %"<__offsets>"
  %gvalue = call i64* @"_export@[IS[I"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @2, i64 0, i64 0), i64* %evalue) #3
  %evalue1 = load i64*, i64** %"<__sizes>"
  %gvalue2 = call i64* @"_export@[IS[I"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @3, i64 0, i64 0), i64* %evalue1) #3
  store i64* %gvalue, i64** @__offsets
  store i64* %gvalue2, i64** @__sizes
  ret void
}

declare i64* @"_export@[IS[I"(i8*, i64*)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @__vex_snippet(i64* getelementptr inbounds ([0 x i64], [0 x i64]* @1, i64 0, i64 0), i64* getelementptr inbounds ([0 x i64], [0 x i64]* @1, i64 0, i64 0))
  ret void
}

attributes #0 = { alwaysinline nounwind }
attributes #1 = { nounwind }
attributes #2 = { nounwind readnone }
attributes #3 = { nounwind readonly }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"19.0.451"}
!2 = !{!"64"}

;_code_end
