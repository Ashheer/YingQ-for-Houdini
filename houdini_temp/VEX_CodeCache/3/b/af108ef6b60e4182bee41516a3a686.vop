;_name	<vexpression>
; ModuleID = '__vex_snippet'
source_filename = "__vex_snippet"

@0 = private constant [2 x i8] c"4\00"
@1 = private constant [3 x i8] c"16\00"
@2 = private constant [3 x i8] c"64\00"
@3 = private constant [2 x i8] c"1\00"
@4 = private constant [3 x i8] c"20\00"
@5 = private constant [3 x i8] c"80\00"
@6 = private constant [3 x i8] c"65\00"
@7 = private constant [2 x i8] c"5\00"
@8 = private constant [3 x i8] c"28\00"
@9 = private constant [4 x i8] c"112\00"
@10 = private constant [4 x i8] c"193\00"
@11 = private constant [2 x i8] c"7\00"
@12 = private constant [3 x i8] c"68\00"
@13 = private constant [3 x i8] c"17\00"
@14 = private constant [3 x i8] c"84\00"
@15 = private constant [3 x i8] c"81\00"
@16 = private constant [3 x i8] c"69\00"
@17 = private constant [3 x i8] c"21\00"
@18 = private constant [3 x i8] c"92\00"
@19 = private constant [4 x i8] c"113\00"
@20 = private constant [4 x i8] c"197\00"
@21 = private constant [3 x i8] c"23\00"
@22 = private constant [4 x i8] c"116\00"
@23 = private constant [4 x i8] c"209\00"
@24 = private constant [3 x i8] c"71\00"
@25 = private constant [3 x i8] c"29\00"
@26 = private constant [4 x i8] c"124\00"
@27 = private constant [4 x i8] c"241\00"
@28 = private constant [4 x i8] c"199\00"
@29 = private constant [3 x i8] c"31\00"
@30 = private constant [3 x i8] c"93\00"
@31 = private constant [4 x i8] c"117\00"
@32 = private constant [4 x i8] c"213\00"
@33 = private constant [3 x i8] c"87\00"
@34 = private constant [4 x i8] c"125\00"
@35 = private constant [4 x i8] c"245\00"
@36 = private constant [4 x i8] c"215\00"
@37 = private constant [3 x i8] c"95\00"
@38 = private constant [4 x i8] c"221\00"
@39 = private constant [4 x i8] c"119\00"
@40 = private constant [4 x i8] c"253\00"
@41 = private constant [4 x i8] c"247\00"
@42 = private constant [4 x i8] c"223\00"
@43 = private constant [4 x i8] c"127\00"
@44 = private constant [1 x i8] zeroinitializer
@name = external global i8*
@45 = private constant [5 x i8] c"name\00"

; Function Attrs: alwaysinline nounwind
define private void @"__vex_snippet_snippet@S"(i8** %_bound_name) #0 {
__llvm_entry:
  %_bound_name1 = load i8*, i8** %_bound_name
  %return = call i64 @"eq@ISS"(i8* %_bound_name1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @0, i64 0, i64 0))
  %return3 = call i64 @"eq@ISS"(i8* %_bound_name1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1, i64 0, i64 0))
  %return4 = call i64 @"or@III"(i64 %return, i64 %return3)
  %return6 = call i64 @"eq@ISS"(i8* %_bound_name1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @2, i64 0, i64 0))
  %return7 = call i64 @"or@III"(i64 %return4, i64 %return6)
  %0 = icmp ne i64 %return7, 0
  br i1 %0, label %true, label %end

true:                                             ; preds = %__llvm_entry
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @3, i64 0, i64 0), i8** %_bound_name
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  %_bound_name8 = load i8*, i8** %_bound_name
  %return9 = call i64 @"eq@ISS"(i8* %_bound_name8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @4, i64 0, i64 0))
  %return11 = call i64 @"eq@ISS"(i8* %_bound_name8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @5, i64 0, i64 0))
  %return12 = call i64 @"or@III"(i64 %return9, i64 %return11)
  %return14 = call i64 @"eq@ISS"(i8* %_bound_name8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @6, i64 0, i64 0))
  %return15 = call i64 @"or@III"(i64 %return12, i64 %return14)
  %1 = icmp ne i64 %return15, 0
  br i1 %1, label %true16, label %end17

true16:                                           ; preds = %end
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @7, i64 0, i64 0), i8** %_bound_name
  br label %end17

end17:                                            ; preds = %true16, %end
  %_bound_name18 = load i8*, i8** %_bound_name
  %return19 = call i64 @"eq@ISS"(i8* %_bound_name18, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @8, i64 0, i64 0))
  %return21 = call i64 @"eq@ISS"(i8* %_bound_name18, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @9, i64 0, i64 0))
  %return22 = call i64 @"or@III"(i64 %return19, i64 %return21)
  %return24 = call i64 @"eq@ISS"(i8* %_bound_name18, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @10, i64 0, i64 0))
  %return25 = call i64 @"or@III"(i64 %return22, i64 %return24)
  %2 = icmp ne i64 %return25, 0
  br i1 %2, label %true26, label %end27

true26:                                           ; preds = %end17
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @11, i64 0, i64 0), i8** %_bound_name
  br label %end27

end27:                                            ; preds = %true26, %end17
  %_bound_name28 = load i8*, i8** %_bound_name
  %return29 = call i64 @"eq@ISS"(i8* %_bound_name28, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @12, i64 0, i64 0))
  %3 = icmp ne i64 %return29, 0
  br i1 %3, label %true30, label %end31

true30:                                           ; preds = %end27
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @13, i64 0, i64 0), i8** %_bound_name
  br label %end31

end31:                                            ; preds = %true30, %end27
  %_bound_name32 = load i8*, i8** %_bound_name
  %return33 = call i64 @"eq@ISS"(i8* %_bound_name32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @14, i64 0, i64 0))
  %return35 = call i64 @"eq@ISS"(i8* %_bound_name32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @15, i64 0, i64 0))
  %return36 = call i64 @"or@III"(i64 %return33, i64 %return35)
  %return38 = call i64 @"eq@ISS"(i8* %_bound_name32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @16, i64 0, i64 0))
  %return39 = call i64 @"or@III"(i64 %return36, i64 %return38)
  %4 = icmp ne i64 %return39, 0
  br i1 %4, label %true40, label %end41

true40:                                           ; preds = %end31
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @17, i64 0, i64 0), i8** %_bound_name
  br label %end41

end41:                                            ; preds = %true40, %end31
  %_bound_name42 = load i8*, i8** %_bound_name
  %return43 = call i64 @"eq@ISS"(i8* %_bound_name42, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @18, i64 0, i64 0))
  %return45 = call i64 @"eq@ISS"(i8* %_bound_name42, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @19, i64 0, i64 0))
  %return46 = call i64 @"or@III"(i64 %return43, i64 %return45)
  %return48 = call i64 @"eq@ISS"(i8* %_bound_name42, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @20, i64 0, i64 0))
  %return49 = call i64 @"or@III"(i64 %return46, i64 %return48)
  %5 = icmp ne i64 %return49, 0
  br i1 %5, label %true50, label %end51

true50:                                           ; preds = %end41
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @21, i64 0, i64 0), i8** %_bound_name
  br label %end51

end51:                                            ; preds = %true50, %end41
  %_bound_name52 = load i8*, i8** %_bound_name
  %return53 = call i64 @"eq@ISS"(i8* %_bound_name52, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @22, i64 0, i64 0))
  %return55 = call i64 @"eq@ISS"(i8* %_bound_name52, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @23, i64 0, i64 0))
  %return56 = call i64 @"or@III"(i64 %return53, i64 %return55)
  %return58 = call i64 @"eq@ISS"(i8* %_bound_name52, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @24, i64 0, i64 0))
  %return59 = call i64 @"or@III"(i64 %return56, i64 %return58)
  %6 = icmp ne i64 %return59, 0
  br i1 %6, label %true60, label %end61

true60:                                           ; preds = %end51
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @25, i64 0, i64 0), i8** %_bound_name
  br label %end61

end61:                                            ; preds = %true60, %end51
  %_bound_name62 = load i8*, i8** %_bound_name
  %return63 = call i64 @"eq@ISS"(i8* %_bound_name62, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @26, i64 0, i64 0))
  %return65 = call i64 @"eq@ISS"(i8* %_bound_name62, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @27, i64 0, i64 0))
  %return66 = call i64 @"or@III"(i64 %return63, i64 %return65)
  %return68 = call i64 @"eq@ISS"(i8* %_bound_name62, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @28, i64 0, i64 0))
  %return69 = call i64 @"or@III"(i64 %return66, i64 %return68)
  %7 = icmp ne i64 %return69, 0
  br i1 %7, label %true70, label %end71

true70:                                           ; preds = %end61
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @29, i64 0, i64 0), i8** %_bound_name
  br label %end71

end71:                                            ; preds = %true70, %end61
  %_bound_name72 = load i8*, i8** %_bound_name
  %return73 = call i64 @"eq@ISS"(i8* %_bound_name72, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @30, i64 0, i64 0))
  %return75 = call i64 @"eq@ISS"(i8* %_bound_name72, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @31, i64 0, i64 0))
  %return76 = call i64 @"or@III"(i64 %return73, i64 %return75)
  %return78 = call i64 @"eq@ISS"(i8* %_bound_name72, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @32, i64 0, i64 0))
  %return79 = call i64 @"or@III"(i64 %return76, i64 %return78)
  %8 = icmp ne i64 %return79, 0
  br i1 %8, label %true80, label %end81

true80:                                           ; preds = %end71
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @33, i64 0, i64 0), i8** %_bound_name
  br label %end81

end81:                                            ; preds = %true80, %end71
  %_bound_name82 = load i8*, i8** %_bound_name
  %return83 = call i64 @"eq@ISS"(i8* %_bound_name82, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @34, i64 0, i64 0))
  %return85 = call i64 @"eq@ISS"(i8* %_bound_name82, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @35, i64 0, i64 0))
  %return86 = call i64 @"or@III"(i64 %return83, i64 %return85)
  %return88 = call i64 @"eq@ISS"(i8* %_bound_name82, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @36, i64 0, i64 0))
  %return89 = call i64 @"or@III"(i64 %return86, i64 %return88)
  %9 = icmp ne i64 %return89, 0
  br i1 %9, label %true90, label %end91

true90:                                           ; preds = %end81
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @37, i64 0, i64 0), i8** %_bound_name
  br label %end91

end91:                                            ; preds = %true90, %end81
  %_bound_name92 = load i8*, i8** %_bound_name
  %return93 = call i64 @"eq@ISS"(i8* %_bound_name92, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @38, i64 0, i64 0))
  %10 = icmp ne i64 %return93, 0
  br i1 %10, label %true94, label %end95

true94:                                           ; preds = %end91
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @39, i64 0, i64 0), i8** %_bound_name
  br label %end95

end95:                                            ; preds = %true94, %end91
  %_bound_name96 = load i8*, i8** %_bound_name
  %return97 = call i64 @"eq@ISS"(i8* %_bound_name96, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @40, i64 0, i64 0))
  %return99 = call i64 @"eq@ISS"(i8* %_bound_name96, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @41, i64 0, i64 0))
  %return100 = call i64 @"or@III"(i64 %return97, i64 %return99)
  %return102 = call i64 @"eq@ISS"(i8* %_bound_name96, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @42, i64 0, i64 0))
  %return103 = call i64 @"or@III"(i64 %return100, i64 %return102)
  %11 = icmp ne i64 %return103, 0
  br i1 %11, label %true104, label %end105

true104:                                          ; preds = %end95
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @43, i64 0, i64 0), i8** %_bound_name
  br label %end105

end105:                                           ; preds = %true104, %end95
  ret void
}

; Function Attrs: nounwind readnone
declare i64 @"eq@ISS"(i8*, i8*) #1

; Function Attrs: nounwind readnone
declare i64 @"or@III"(i64, i64) #1

; Function Attrs: nounwind
define void @__vex_snippet(i8* %name) #2 {
__llvm_entry:
  %"<name>" = alloca i8*
  store i8* %name, i8** %"<name>"
  call void @"__vex_snippet_snippet@S"(i8** %"<name>")
  %evalue = load i8*, i8** %"<name>"
  %gvalue = call i8* @"_export@SSS"(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @45, i64 0, i64 0), i8* %evalue) #3
  store i8* %gvalue, i8** @name
  ret void
}

declare i8* @"_export@SSS"(i8*, i8*)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @__vex_snippet(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @44, i64 0, i64 0))
  ret void
}

attributes #0 = { alwaysinline nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind }
attributes #3 = { nounwind readonly }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"19.0.498"}
!2 = !{!"64"}

;_code_end
