;_name	<vexpression>
; ModuleID = '__vex_snippet'
source_filename = "__vex_snippet"

@area = external global double
@primnum = external global i64
@0 = private constant [5 x i8] c"area\00"
@1 = private constant [8 x i8] c"primnum\00"

; Function Attrs: alwaysinline nounwind
define private void @"__vex_snippet_snippet@FI"(double* %_bound_area, i64* %_bound_primnum) #0 {
__llvm_entry:
  %_bound_area1 = load double, double* %_bound_area
  %return = call double @"pow@FFF"(double %_bound_area1, double 5.000000e-01)
  store double %return, double* %_bound_area
  %_bound_primnum3 = load i64, i64* %_bound_primnum
  %output = add i64 %_bound_primnum3, 123
  %cast = sitofp i64 %output to double
  %return4 = call double @"rand@FF"(double %cast)
  %output5 = fmul double %return4, 1.000000e-01
  %output6 = fadd double %return, %output5
  store double %output6, double* %_bound_area
  ret void
}

; Function Attrs: nounwind readnone
declare double @"pow@FFF"(double, double) #1

; Function Attrs: nounwind
declare double @"rand@FF"(double) #2

; Function Attrs: nounwind
define void @__vex_snippet(double %area, i64 %primnum) #2 {
__llvm_entry:
  %0 = alloca i64
  %"<area>" = alloca double
  store double %area, double* %"<area>"
  store i64 %primnum, i64* %0
  call void @"__vex_snippet_snippet@FI"(double* %"<area>", i64* %0)
  %evalue = load double, double* %"<area>"
  %gvalue = call double @"_export@FSF"(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i64 0, i64 0), double %evalue) #3
  %gvalue3 = call i64 @"_export@ISI"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @1, i64 0, i64 0), i64 %primnum) #3
  store double %gvalue, double* @area
  store i64 %gvalue3, i64* @primnum
  ret void
}

declare double @"_export@FSF"(i8*, double)

declare i64 @"_export@ISI"(i8*, i64)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @__vex_snippet(double 0.000000e+00, i64 0)
  ret void
}

attributes #0 = { alwaysinline nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind }
attributes #3 = { nounwind readonly }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"19.0.383"}
!2 = !{!"64"}

;_code_end
