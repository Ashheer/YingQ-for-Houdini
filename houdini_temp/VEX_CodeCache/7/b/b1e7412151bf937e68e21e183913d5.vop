;_name	/obj/geo1/point1/attribvop1
; ModuleID = 'obj_geo1_point1_attribvop1'
source_filename = "obj_geo1_point1_attribvop1"

@Cd = external global <3 x double>
@0 = private constant [3 x i8] c"Cd\00"

; Function Attrs: alwaysinline nounwind
define private void @"_obj_geo1_point1_attribvop1_snippet1@VV"(<3 x double>* %_bound_Cd, <3 x double>* %_bound_N) #0 {
__llvm_entry:
  %_bound_N2 = load <3 x double>, <3 x double>* %_bound_N
  %output = call <3 x double> @"mul@VV"(<3 x double> %_bound_N2, <3 x double> <double 5.000000e-01, double 5.000000e-01, double 5.000000e-01>)
  %cast = call <3 x double> @"set@VF"(double 5.000000e-01)
  %output3 = call <3 x double> @"add@VV"(<3 x double> %output, <3 x double> %cast)
  store <3 x double> %output3, <3 x double>* %_bound_Cd
  ret void
}

; Function Attrs: nounwind readnone
declare <3 x double> @"chv@VS"(i8*) #1

; Function Attrs: nounwind readnone
declare <3 x double> @"mul@VV"(<3 x double>, <3 x double>) #1

; Function Attrs: nounwind readnone
declare <3 x double> @"set@VF"(double) #1

; Function Attrs: nounwind readnone
declare <3 x double> @"add@VV"(<3 x double>, <3 x double>) #1

; Function Attrs: nounwind
define void @obj_geo1_point1_attribvop1(<3 x double> %Cd, <3 x double> %N) #2 {
__llvm_entry:
  %0 = alloca <3 x double>
  %"<Cd>" = alloca <3 x double>
  store <3 x double> %Cd, <3 x double>* %"<Cd>"
  store <3 x double> %N, <3 x double>* %0
  call void @"_obj_geo1_point1_attribvop1_snippet1@VV"(<3 x double>* %"<Cd>", <3 x double>* %0)
  %evalue = load <3 x double>, <3 x double>* %"<Cd>"
  %gvalue = call <3 x double> @"_export@VSV"(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @0, i64 0, i64 0), <3 x double> %evalue) #3
  store <3 x double> %gvalue, <3 x double>* @Cd
  ret void
}

declare <3 x double> @"_export@VSV"(i8*, <3 x double>)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @obj_geo1_point1_attribvop1(<3 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, <3 x double> zeroinitializer)
  ret void
}

attributes #0 = { alwaysinline nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind }
attributes #3 = { nounwind readonly }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"19.0.531"}
!2 = !{!"64"}

;_code_end
