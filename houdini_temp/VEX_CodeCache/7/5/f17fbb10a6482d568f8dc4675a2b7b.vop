;_name	<vexpression>
; ModuleID = '__vex_snippet'
source_filename = "__vex_snippet"

@0 = private constant [5 x i8] c"name\00"
@1 = private constant [6 x i8] c"point\00"
@2 = private constant [2 x i8] c"P\00"

; Function Attrs: alwaysinline nounwind
define private void @__vex_snippet_snippet() #0 {
__llvm_entry:
  %return = call i64 @"npoints@II"(i64 0)
  %return1 = call i64 @"ne@III"(i64 %return, i64 0)
  %0 = icmp ne i64 %return1, 0
  br i1 %0, label %true, label %end

true:                                             ; preds = %end, %__llvm_entry
  br label %UnifiedReturnBlock

end:                                              ; preds = %__llvm_entry
  %return2 = call { i8*, i64 } @"primattrib@SISII"(i64 2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i64 0, i64 0), i64 0)
  %return3 = extractvalue { i8*, i64 } %return2, 0
  %return5 = call i64 @"findattribval@IISSS"(i64 3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i64 0, i64 0), i8* %return3)
  %return7 = call i64 @"neg@II"(i64 1)
  %return8 = call i64 @"eq@III"(i64 %return5, i64 %return7)
  %1 = icmp ne i64 %return8, 0
  br i1 %1, label %true, label %end10

end10:                                            ; preds = %end
  %return12 = call { <3 x double>, i64 } @"pointattrib@VISII"(i64 3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i64 0, i64 0), i64 %return5)
  %return13 = extractvalue { <3 x double>, i64 } %return12, 0
  %return15 = call i64 @"addpoint@IIV"(i64 0, <3 x double> %return13)
  %return16 = call { i8*, i64 } @"primattrib@SISII"(i64 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i64 0, i64 0), i64 0)
  %return17 = extractvalue { i8*, i64 } %return16, 0
  %return21 = call i64 @"setpointattrib@IISIS"(i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @0, i64 0, i64 0), i64 %return15, i8* %return17)
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %end10, %true
  ret void
}

; Function Attrs: nounwind
declare i64 @"npoints@II"(i64) #1

; Function Attrs: nounwind readnone
declare i64 @"ne@III"(i64, i64) #2

; Function Attrs: nounwind
declare { i8*, i64 } @"primattrib@SISII"(i64, i8*, i64) #1

; Function Attrs: nounwind
declare i64 @"findattribval@IISSS"(i64, i8*, i8*, i8*) #1

; Function Attrs: nounwind readnone
declare i64 @"neg@II"(i64) #2

; Function Attrs: nounwind readnone
declare i64 @"eq@III"(i64, i64) #2

; Function Attrs: nounwind
declare { <3 x double>, i64 } @"pointattrib@VISII"(i64, i8*, i64) #1

; Function Attrs: nounwind
declare i64 @"addpoint@IIV"(i64, <3 x double>) #1

; Function Attrs: nounwind
declare i64 @"setpointattrib@IISIS"(i64, i8*, i64, i8*) #1

; Function Attrs: nounwind
define void @__vex_snippet() #1 {
__llvm_entry:
  call void @__vex_snippet_snippet()
  ret void
}

define void @__shader_default_arguments() {
__llvm_entry:
  call void @__vex_snippet()
  ret void
}

attributes #0 = { alwaysinline nounwind }
attributes #1 = { nounwind }
attributes #2 = { nounwind readnone }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"19.0.498"}
!2 = !{!"64"}

;_code_end
