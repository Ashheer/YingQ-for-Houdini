;_name	/obj/geo1/subnet1/RoofUVSetting/pointvop1
; ModuleID = 'obj_geo1_subnet1_RoofUVSetting_pointvop1'
source_filename = "obj_geo1_subnet1_RoofUVSetting_pointvop1"

@0 = private constant [1 x i8] zeroinitializer
@d = external global double
@1 = private constant [2 x i8] c"d\00"

; Function Attrs: nounwind
define void @obj_geo1_subnet1_RoofUVSetting_pointvop1(<3 x double> %P, <3 x double> %v, i64 %ptnum, i64 %vtxnum, i64 %primnum, i64 %id, i64 %numpt, i64 %numvtx, i64 %numprim, double %Time, double %TimeInc, double %Frame, <3 x double> %force, double %life, double %age, <3 x double> %Cd, <3 x double> %N, i8* %OpInput2, i8* %OpInput3, i8* %OpInput4, i8* %OpInput1, <3 x double> %uv, double %d, <3 x double> %Ndir) #0 {
__llvm_entry:
  %output = call { double, double, double } @"assign@FFFV"(<3 x double> %Ndir)
  %output28 = extractvalue { double, double, double } %output, 0
  %output30 = extractvalue { double, double, double } %output, 2
  %return = call <3 x double> @"set@VFFF"(double %output28, double 0.000000e+00, double %output30)
  %return34 = call <3 x double> @"normalize@VV"(<3 x double> %return)
  %return37 = call double @"dot@FVV"(<3 x double> %return34, <3 x double> <double 0.000000e+00, double 0.000000e+00, double 1.000000e+00>)
  %return41 = call double @"acos@FF"(double %return37)
  %return43 = call double @"degrees@FF"(double %return41)
  %return45 = fcmp olt double %output28, 0.000000e+00
  %return46 = zext i1 %return45 to i64
  %return47 = call i64 @"neg@II"(i64 1)
  %return49 = call i64 @"eq@III"(i64 %return46, i64 0)
  %0 = icmp ne i64 %return49, 0
  br i1 %0, label %true, label %false

true:                                             ; preds = %__llvm_entry
  br label %end

false:                                            ; preds = %__llvm_entry
  br label %end

end:                                              ; preds = %false, %true
  %result.0 = phi i64 [ %return47, %true ], [ 1, %false ]
  %cast = sitofp i64 %result.0 to double
  %output54 = fmul double %return43, %cast
  %gvalue = call double @"_export@FSF"(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i64 0, i64 0), double %output54) #2
  store double %gvalue, double* @d
  ret void
}

; Function Attrs: nounwind
declare { double, double, double } @"assign@FFFV"(<3 x double>) #0

; Function Attrs: nounwind readnone
declare <3 x double> @"set@VFFF"(double, double, double) #1

; Function Attrs: nounwind
declare <3 x double> @"normalize@VV"(<3 x double>) #0

; Function Attrs: nounwind
declare double @"dot@FVV"(<3 x double>, <3 x double>) #0

; Function Attrs: nounwind readnone
declare double @"acos@FF"(double) #1

; Function Attrs: nounwind
declare double @"degrees@FF"(double) #0

; Function Attrs: nounwind readnone
declare i64 @"neg@II"(i64) #1

; Function Attrs: nounwind readnone
declare i64 @"eq@III"(i64, i64) #1

declare double @"_export@FSF"(i8*, double)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @obj_geo1_subnet1_RoofUVSetting_pointvop1(<3 x double> zeroinitializer, <3 x double> zeroinitializer, i64 0, i64 0, i64 0, i64 -1, i64 0, i64 0, i64 0, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, <3 x double> zeroinitializer, double 0.000000e+00, double 0.000000e+00, <3 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, <3 x double> zeroinitializer, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @0, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @0, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @0, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @0, i64 0, i64 0), <3 x double> zeroinitializer, double 0.000000e+00, <3 x double> zeroinitializer)
  ret void
}

attributes #0 = { nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind readonly }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"19.0.531"}
!2 = !{!"64"}

;_code_end
