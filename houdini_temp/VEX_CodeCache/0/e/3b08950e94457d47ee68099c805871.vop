;_name	/obj/geo1/MOPs_Move_Along_Spline/rotation_falloff/attribvop1
; ModuleID = 'obj_geo1_MOPs_Move_Along_Spline_rotation_falloff_attribvop1'

@0 = private constant [3 x i8] c"id\00"
@1 = private constant [10 x i8] c"transform\00"
@2 = private constant [13 x i8] c"mops_falloff\00"
@ptnum = external global i64
@orient = external global <4 x double>
@3 = private constant [6 x i8] c"ptnum\00"
@4 = private constant [7 x i8] c"orient\00"

define private void @"_obj_geo1_MOPs_Move_Along_Spline_rotation_falloff_attribvop1_snippet1@IP"(i64* %_bound_ptnum, <4 x double>* %_bound_orient) nounwind alwaysinline {
__llvm_entry:
  %_bound_ptnum1 = load i64* %_bound_ptnum
  %return = call i64 @"haspointattrib@IIS"(i64 0, i8* getelementptr inbounds ([3 x i8]* @0, i64 0, i64 0))
  %return2 = call i64 @"haspointattrib@IIS"(i64 1, i8* getelementptr inbounds ([3 x i8]* @0, i64 0, i64 0))
  %return3 = call i64 @"and@III"(i64 %return, i64 %return2)
  %0 = icmp ne i64 %return3, 0
  br i1 %0, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %_bound_ptnum4 = load i64* %_bound_ptnum
  %return5 = call i64 @"point@IISI"(i64 0, i8* getelementptr inbounds ([3 x i8]* @0, i64 0, i64 0), i64 %_bound_ptnum4)
  %return6 = call i64 @"idtopoint@III"(i64 1, i64 %return5)
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  %matchpt.0 = phi i64 [ %return6, %true ], [ %_bound_ptnum1, %__llvm_entry ]
  %return8 = call <9 x double> @"primintrinsic@3ISI"(i64 1, i8* getelementptr inbounds ([10 x i8]* @1, i64 0, i64 0), i64 %matchpt.0)
  %return9 = call i64 @"haspointattrib@IIS"(i64 1, i8* getelementptr inbounds ([13 x i8]* @2, i64 0, i64 0))
  %1 = icmp ne i64 %return9, 0
  br i1 %1, label %true10, label %end11

true10:                                           ; preds = %end
  %return13 = call double @"point@FISI"(i64 1, i8* getelementptr inbounds ([13 x i8]* @2, i64 0, i64 0), i64 %matchpt.0)
  br label %end11

end11:                                            ; preds = %true10, %end
  %falloff.0 = phi double [ %return13, %true10 ], [ 1.000000e+00, %end ]
  %return15 = call <4 x double> @"quaternion@P3"(<9 x double> %return8)
  %_bound_orient16 = load <4 x double>* %_bound_orient
  %return20 = call <4 x double> @"slerp@PPPF"(<4 x double> %return15, <4 x double> %_bound_orient16, double %falloff.0)
  store <4 x double> %return20, <4 x double>* %_bound_orient
  ret void
}

declare i64 @"haspointattrib@IIS"(i64, i8*) nounwind

declare i64 @"and@III"(i64, i64) nounwind readnone

declare i64 @"point@IISI"(i64, i8*, i64) nounwind

declare i64 @"idtopoint@III"(i64, i64) nounwind

declare <9 x double> @"primintrinsic@3ISI"(i64, i8*, i64) nounwind

declare double @"point@FISI"(i64, i8*, i64) nounwind

declare <4 x double> @"quaternion@P3"(<9 x double>) nounwind readnone

declare <4 x double> @"slerp@PPPF"(<4 x double>, <4 x double>, double) nounwind readnone

define void @obj_geo1_MOPs_Move_Along_Spline_rotation_falloff_attribvop1(i64 %ptnum, <4 x double> %orient) nounwind {
__llvm_entry:
  %"<orient>" = alloca <4 x double>
  %0 = alloca i64
  store <4 x double> %orient, <4 x double>* %"<orient>"
  store i64 %ptnum, i64* %0
  call void @"_obj_geo1_MOPs_Move_Along_Spline_rotation_falloff_attribvop1_snippet1@IP"(i64* %0, <4 x double>* %"<orient>")
  %gvalue = call i64 @"_export@ISI"(i8* getelementptr inbounds ([6 x i8]* @3, i64 0, i64 0), i64 %ptnum) nounwind readonly
  %evalue2 = load <4 x double>* %"<orient>"
  %gvalue3 = call <4 x double> @"_export@PSP"(i8* getelementptr inbounds ([7 x i8]* @4, i64 0, i64 0), <4 x double> %evalue2) nounwind readonly
  store i64 %gvalue, i64* @ptnum
  store <4 x double> %gvalue3, <4 x double>* @orient
  ret void
}

declare i64 @"_export@ISI"(i8*, i64)

declare <4 x double> @"_export@PSP"(i8*, <4 x double>)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @obj_geo1_MOPs_Move_Along_Spline_rotation_falloff_attribvop1(i64 0, <4 x double> <double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 1.000000e+00>)
  ret void
}

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = metadata !{metadata !"cvex"}
!1 = metadata !{metadata !"18.5.633"}
!2 = metadata !{metadata !"64"}

;_code_end
