;_name	/obj/geo1/subnet1/attribvop2
; ModuleID = 'obj_geo1_subnet1_attribvop2'
source_filename = "obj_geo1_subnet1_attribvop2"

@0 = private constant [1 x i8] zeroinitializer
@1 = private constant [10 x i8] c"opinput:0\00"
@2 = private constant [5 x i8] c"file\00"
@3 = private constant [10 x i8] c"opinput:1\00"
@4 = private constant [7 x i8] c"linear\00"
@5 = private constant [2 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @4, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @4, i64 0, i64 0)]
@6 = private constant [2 x double] [double 0.000000e+00, double 1.000000e+00]
@P = external global <3 x double>
@parm = external global double
@7 = private constant [12 x i8] c"defgeo.bgeo\00"
@8 = private constant [2 x i8] c"P\00"
@9 = private constant [5 x i8] c"parm\00"

; Function Attrs: alwaysinline nounwind
define private void @"_obj_geo1_subnet1_attribvop2_importpoint1_snippet1@VSSIVII"(<3 x double>* %result, i8** %file, i8** %aname, i64* %ptnum, <3 x double>* %defvalue, i64* %success, i64* %_bound_ptnum) #0 {
__llvm_entry:
  %_bound_ptnum2 = load i64, i64* %_bound_ptnum
  %return = call i64 @"eq@ISS"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @2, i64 0, i64 0))
  %0 = icmp ne i64 %return, 0
  br i1 %0, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %file4 = load i8*, i8** %file
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  %sourcefile.0 = phi i8* [ %file4, %true ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @1, i64 0, i64 0), %__llvm_entry ]
  %aname6 = load i8*, i8** %aname
  %return8 = call { <3 x double>, i64 } @"pointattrib@VSSII"(i8* %sourcefile.0, i8* %aname6, i64 %_bound_ptnum2)
  %return9 = extractvalue { <3 x double>, i64 } %return8, 0
  %output = extractvalue { <3 x double>, i64 } %return8, 1
  store i64 %output, i64* %success
  store <3 x double> %return9, <3 x double>* %result
  %success10 = load i64, i64* %success
  %return11 = call i64 @"not@II"(i64 %success10)
  %1 = icmp ne i64 %return11, 0
  br i1 %1, label %true12, label %end13

true12:                                           ; preds = %end
  %defvalue14 = load <3 x double>, <3 x double>* %defvalue
  store <3 x double> %defvalue14, <3 x double>* %result
  br label %end13

end13:                                            ; preds = %true12, %end
  ret void
}

; Function Attrs: nounwind readnone
declare i64 @"eq@ISS"(i8*, i8*) #1

; Function Attrs: nounwind readnone
declare { <3 x double>, i64 } @"pointattrib@VSSII"(i8*, i8*, i64) #1

; Function Attrs: nounwind readnone
declare i64 @"not@II"(i64) #1

; Function Attrs: alwaysinline nounwind
define private void @"_obj_geo1_subnet1_attribvop2_importpoint2_snippet1@VSSIVII"(<3 x double>* %result, i8** %file, i8** %aname, i64* %ptnum, <3 x double>* %defvalue, i64* %success, i64* %_bound_ptnum) #0 {
__llvm_entry:
  %_bound_ptnum2 = load i64, i64* %_bound_ptnum
  %return = call i64 @"eq@ISS"(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @2, i64 0, i64 0))
  %0 = icmp ne i64 %return, 0
  br i1 %0, label %true, label %end

true:                                             ; preds = %__llvm_entry
  %file4 = load i8*, i8** %file
  br label %end

end:                                              ; preds = %true, %__llvm_entry
  %sourcefile.0 = phi i8* [ %file4, %true ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @3, i64 0, i64 0), %__llvm_entry ]
  %aname6 = load i8*, i8** %aname
  %return8 = call { <3 x double>, i64 } @"pointattrib@VSSII"(i8* %sourcefile.0, i8* %aname6, i64 %_bound_ptnum2)
  %return9 = extractvalue { <3 x double>, i64 } %return8, 0
  %output = extractvalue { <3 x double>, i64 } %return8, 1
  store i64 %output, i64* %success
  store <3 x double> %return9, <3 x double>* %result
  %success10 = load i64, i64* %success
  %return11 = call i64 @"not@II"(i64 %success10)
  %1 = icmp ne i64 %return11, 0
  br i1 %1, label %true12, label %end13

true12:                                           ; preds = %end
  %defvalue14 = load <3 x double>, <3 x double>* %defvalue
  store <3 x double> %defvalue14, <3 x double>* %result
  br label %end13

end13:                                            ; preds = %true12, %end
  ret void
}

; Function Attrs: nounwind
define void @obj_geo1_subnet1_attribvop2(i64 %ptnum, i64 %vtxnum, i64 %primnum, i64 %id, i64 %numpt, i64 %numvtx, i64 %numprim, double %Time, double %TimeInc, double %Frame, double %life, double %age, i8* %OpInput2, i8* %OpInput3, i8* %OpInput4, i8* %OpInput1, <3 x double> %uv, <3 x double> %P, <3 x double> %v, <3 x double> %force, <3 x double> %Cd, <3 x double> %N, i8** %shapeAttribute_the_basis_strings, double* %shapeAttribute_the_key_positions, double* %shapeAttribute_the_key_values, double %parm, double %destmin, double %destmax, double %srcmin, double %srcmax, double %destmin2) #2 {
__llvm_entry:
  %outresult = alloca <3 x double>
  %outsuccess = alloca i64
  %outresult1 = alloca <3 x double>
  %outsuccess1 = alloca i64
  %0 = alloca i8*
  %1 = alloca i8*
  %2 = alloca i64
  %3 = alloca <3 x double>
  %4 = alloca i64
  %5 = alloca i8*
  %6 = alloca i8*
  %7 = alloca i64
  %8 = alloca <3 x double>
  %9 = alloca i64
  store <3 x double> zeroinitializer, <3 x double>* %outresult
  store i64 0, i64* %outsuccess
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @7, i64 0, i64 0), i8** %0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @8, i64 0, i64 0), i8** %1
  store i64 0, i64* %2
  store <3 x double> zeroinitializer, <3 x double>* %3
  store i64 %ptnum, i64* %4
  call void @"_obj_geo1_subnet1_attribvop2_importpoint1_snippet1@VSSIVII"(<3 x double>* %outresult, i8** %0, i8** %1, i64* %2, <3 x double>* %3, i64* %outsuccess, i64* %4)
  %outresult41 = load <3 x double>, <3 x double>* %outresult
  store <3 x double> zeroinitializer, <3 x double>* %outresult1
  store i64 0, i64* %outsuccess1
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @7, i64 0, i64 0), i8** %5
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @8, i64 0, i64 0), i8** %6
  store i64 0, i64* %7
  store <3 x double> zeroinitializer, <3 x double>* %8
  store i64 %ptnum, i64* %9
  call void @"_obj_geo1_subnet1_attribvop2_importpoint2_snippet1@VSSIVII"(<3 x double>* %outresult1, i8** %5, i8** %6, i64* %7, <3 x double>* %8, i64* %outsuccess1, i64* %9)
  %outresult154 = load <3 x double>, <3 x double>* %outresult1
  %return = call double @"fit@FFFFFF"(double %parm, double %srcmin, double %srcmax, double %destmin2, double 1.000000e+00)
  %return66 = call double @"spline@F[SF[F[F"(i8** %shapeAttribute_the_basis_strings, double %parm, double* %shapeAttribute_the_key_values, double* %shapeAttribute_the_key_positions)
  %return70 = call double @"fit@FFFFFF"(double %return66, double 0.000000e+00, double 1.000000e+00, double %destmin, double %destmax)
  %return71 = call i64 @"eq@III"(i64 0, i64 0)
  %10 = icmp ne i64 %return71, 0
  br i1 %10, label %true, label %false

true:                                             ; preds = %__llvm_entry
  br label %end

false:                                            ; preds = %__llvm_entry
  br label %end

end:                                              ; preds = %false, %true
  %result2.0 = phi double [ %return70, %true ], [ %parm, %false ]
  %output = fadd double %return, %result2.0
  %return79 = call <3 x double> @"lerp@VVVF"(<3 x double> %outresult41, <3 x double> %outresult154, double %output)
  %gvalue = call <3 x double> @"_export@VSV"(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @8, i64 0, i64 0), <3 x double> %return79) #3
  %gvalue84 = call double @"_export@FSF"(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @9, i64 0, i64 0), double %output) #3
  store <3 x double> %gvalue, <3 x double>* @P
  store double %gvalue84, double* @parm
  ret void
}

; Function Attrs: nounwind
declare double @"fit@FFFFFF"(double, double, double, double, double) #2

; Function Attrs: nounwind readnone
declare double @"spline@F[SF[F[F"(i8**, double, double*, double*) #1

; Function Attrs: nounwind readnone
declare i64 @"eq@III"(i64, i64) #1

; Function Attrs: nounwind
declare <3 x double> @"lerp@VVVF"(<3 x double>, <3 x double>, double) #2

declare <3 x double> @"_export@VSV"(i8*, <3 x double>)

declare double @"_export@FSF"(i8*, double)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @obj_geo1_subnet1_attribvop2(i64 0, i64 0, i64 0, i64 -1, i64 0, i64 0, i64 0, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @0, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @0, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @0, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @0, i64 0, i64 0), <3 x double> zeroinitializer, <3 x double> zeroinitializer, <3 x double> zeroinitializer, <3 x double> zeroinitializer, <3 x double> <double 1.000000e+00, double 1.000000e+00, double 1.000000e+00>, <3 x double> zeroinitializer, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @5, i64 0, i64 0), double* getelementptr inbounds ([2 x double], [2 x double]* @6, i64 0, i64 0), double* getelementptr inbounds ([2 x double], [2 x double]* @6, i64 0, i64 0), double 0.000000e+00, double 0.000000e+00, double 1.000000e+00, double 0.000000e+00, double 1.000000e+00, double 0.000000e+00)
  ret void
}

attributes #0 = { alwaysinline nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind }
attributes #3 = { nounwind readonly }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"19.0.531"}
!2 = !{!"64"}

;_code_end
