;_name	<vexpression>
; ModuleID = '__vex_snippet'
source_filename = "__vex_snippet"

@0 = private constant [7 x i8] c"camera\00"
@xform = external global <16 x double>
@tf_pivot = external global <3 x double>
@1 = private constant [6 x i8] c"xform\00"
@2 = private constant [9 x i8] c"tf_pivot\00"

; Function Attrs: alwaysinline nounwind
define private void @"__vex_snippet_snippet@4V"(<16 x double>* %_bound_xform, <3 x double>* %_bound_tf_pivot) #0 {
__llvm_entry:
  %return = call i8* @"chsop@SS"(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @0, i64 0, i64 0))
  %return1 = call <16 x double> @"optransform@4S"(i8* %return)
  store <16 x double> %return1, <16 x double>* %_bound_xform
  call void @"setpackedtransform@II4"(i64 0, i64 0, <16 x double> %return1)
  %cast = call <3 x double> @"set@VI"(i64 0)
  %_bound_xform3 = load <16 x double>, <16 x double>* %_bound_xform
  %return4 = call <3 x double> @"cracktransform@VIIIV4"(i64 0, i64 0, i64 1, <3 x double> %cast, <16 x double> %_bound_xform3)
  store <3 x double> %return4, <3 x double>* %_bound_tf_pivot
  ret void
}

; Function Attrs: nounwind readnone
declare i8* @"chsop@SS"(i8*) #1

; Function Attrs: nounwind readnone
declare <16 x double> @"optransform@4S"(i8*) #1

; Function Attrs: nounwind
declare void @"setpackedtransform@II4"(i64, i64, <16 x double>) #2

; Function Attrs: nounwind readnone
declare <3 x double> @"set@VI"(i64) #1

; Function Attrs: nounwind readnone
declare <3 x double> @"cracktransform@VIIIV4"(i64, i64, i64, <3 x double>, <16 x double>) #1

; Function Attrs: nounwind
define void @__vex_snippet(<16 x double> %xform, <3 x double> %tf_pivot) #2 {
__llvm_entry:
  %"<tf_pivot>" = alloca <3 x double>
  %"<xform>" = alloca <16 x double>
  store <16 x double> %xform, <16 x double>* %"<xform>"
  store <3 x double> %tf_pivot, <3 x double>* %"<tf_pivot>"
  call void @"__vex_snippet_snippet@4V"(<16 x double>* %"<xform>", <3 x double>* %"<tf_pivot>")
  %evalue = load <16 x double>, <16 x double>* %"<xform>"
  %gvalue = call <16 x double> @"_export@4S4"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @1, i64 0, i64 0), <16 x double> %evalue) #3
  %evalue1 = load <3 x double>, <3 x double>* %"<tf_pivot>"
  %gvalue2 = call <3 x double> @"_export@VSV"(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @2, i64 0, i64 0), <3 x double> %evalue1) #3
  store <16 x double> %gvalue, <16 x double>* @xform
  store <3 x double> %gvalue2, <3 x double>* @tf_pivot
  ret void
}

declare <16 x double> @"_export@4S4"(i8*, <16 x double>)

declare <3 x double> @"_export@VSV"(i8*, <3 x double>)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @__vex_snippet(<16 x double> zeroinitializer, <3 x double> zeroinitializer)
  ret void
}

attributes #0 = { alwaysinline nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind }
attributes #3 = { nounwind readonly }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"19.0.531"}
!2 = !{!"64"}

;_code_end
