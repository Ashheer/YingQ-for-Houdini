;_name	<vexpression>
; ModuleID = '__vex_snippet'
source_filename = "__vex_snippet"

@__stability = external global double
@height = external global double
@debris = external global double
@0 = private constant [12 x i8] c"__stability\00"
@1 = private constant [7 x i8] c"height\00"
@2 = private constant [7 x i8] c"debris\00"

; Function Attrs: alwaysinline nounwind
define private void @"__vex_snippet_snippet@FFF"(double* %_bound___stability, double* %_bound_height, double* %_bound_debris) #0 {
__llvm_entry:
  %_bound_height1 = load double, double* %_bound_height
  %_bound_debris2 = load double, double* %_bound_debris
  %output = fadd double %_bound_height1, %_bound_debris2
  store double %output, double* %_bound___stability
  ret void
}

; Function Attrs: nounwind
define void @__vex_snippet(double %__stability, double %height, double %debris) #1 {
__llvm_entry:
  %0 = alloca double
  %1 = alloca double
  %"<__stability>" = alloca double
  store double %__stability, double* %"<__stability>"
  store double %height, double* %0
  store double %debris, double* %1
  call void @"__vex_snippet_snippet@FFF"(double* %"<__stability>", double* %0, double* %1)
  %evalue = load double, double* %"<__stability>"
  %gvalue = call double @"_export@FSF"(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i64 0, i64 0), double %evalue) #2
  %gvalue4 = call double @"_export@FSF"(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @1, i64 0, i64 0), double %height) #2
  %gvalue6 = call double @"_export@FSF"(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @2, i64 0, i64 0), double %debris) #2
  store double %gvalue, double* @__stability
  store double %gvalue4, double* @height
  store double %gvalue6, double* @debris
  ret void
}

declare double @"_export@FSF"(i8*, double)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @__vex_snippet(double 0.000000e+00, double 0.000000e+00, double 0.000000e+00)
  ret void
}

attributes #0 = { alwaysinline nounwind }
attributes #1 = { nounwind }
attributes #2 = { nounwind readonly }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"19.0.531"}
!2 = !{!"64"}

;_code_end
