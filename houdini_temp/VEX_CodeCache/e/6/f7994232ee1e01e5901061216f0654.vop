;_name	<vexpression>
; ModuleID = '__vex_snippet'
source_filename = "__vex_snippet"

@0 = private constant [13 x i8] c"../visualize\00"
@1 = private constant [1 x i8] zeroinitializer
@2 = private constant [2 x i8] c"P\00"
@3 = private constant [8 x i8] c"../name\00"
@4 = private constant [6 x i8] c"point\00"
@5 = private constant [9 x i8] c"../class\00"
@6 = private constant [4 x i8] c"set\00"
@7 = private constant [13 x i8] c"../operation\00"
@8 = private constant [16 x i8] c"../distribution\00"
@9 = private constant [9 x i8] c"../scale\00"
@10 = private constant [10 x i8] c"primitive\00"
@11 = private constant [5 x i8] c"prim\00"
@12 = private constant [7 x i8] c"vertex\00"
@13 = private constant [9 x i8] c"discrete\00"
@14 = private constant [14 x i8] c"../dimensions\00"
@15 = private constant [14 x i8] c"uniformorient\00"
@16 = private constant [12 x i8] c"uniformball\00"
@17 = private constant [5 x i8] c"ramp\00"
@18 = private constant [11 x i8] c"../allsame\00"
@19 = private constant [9 x i8] c"constant\00"
@20 = private constant [16 x i8] c"uniformdiscrete\00"
@21 = private constant [7 x i8] c"normal\00"
@22 = private constant [10 x i8] c"lognormal\00"
@23 = private constant [12 x i8] c"exponential\00"
@24 = private constant [7 x i8] c"cauchy\00"
@25 = private constant [16 x i8] c"../medianattrib\00"
@26 = private constant [21 x i8] c"../usefractionattrib\00"
@27 = private constant [18 x i8] c"../fractionattrib\00"
@28 = private constant [8 x i8] c"../seed\00"
@29 = private constant [17 x i8] c"../useseedattrib\00"
@30 = private constant [14 x i8] c"../seedattrib\00"
@31 = private constant [8 x i8] c"../minx\00"
@32 = private constant [8 x i8] c"../maxx\00"
@33 = private constant [8 x i8] c"../miny\00"
@34 = private constant [8 x i8] c"../maxy\00"
@35 = private constant [8 x i8] c"../minz\00"
@36 = private constant [8 x i8] c"../maxz\00"
@37 = private constant [8 x i8] c"../minw\00"
@38 = private constant [8 x i8] c"../maxw\00"
@39 = private constant [13 x i8] c"../normalize\00"
@primnum = external global i64
@ptnum = external global i64
@vtxnum = external global i64
@OpInput1 = external global i8*
@40 = private constant [8 x i8] c"primnum\00"
@41 = private constant [6 x i8] c"ptnum\00"
@42 = private constant [7 x i8] c"vtxnum\00"
@43 = private constant [9 x i8] c"OpInput1\00"

; Function Attrs: alwaysinline nounwind
define private void @"__vex_snippet_snippet@IIIS"(i64* %_bound_primnum, i64* %_bound_ptnum, i64* %_bound_vtxnum, i8** %_bound_OpInput1) #0 {
__llvm_entry:
  %return = call i64 @"chi@IS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @0, i64 0, i64 0))
  %0 = icmp ne i64 %return, 0
  br i1 %0, label %end, label %false

false:                                            ; preds = %__llvm_entry
  %return2 = call i8* @"chs@SS"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @3, i64 0, i64 0))
  br label %end

end:                                              ; preds = %__llvm_entry, %false
  %phi = phi i8* [ %return2, %false ], [ getelementptr inbounds ([2 x i8], [2 x i8]* @2, i64 0, i64 0), %__llvm_entry ]
  br i1 %0, label %end6, label %false5

false5:                                           ; preds = %end
  %return7 = call i8* @"chs@SS"(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @5, i64 0, i64 0))
  br label %end6

end6:                                             ; preds = %end, %false5
  %phi8 = phi i8* [ %return7, %false5 ], [ getelementptr inbounds ([6 x i8], [6 x i8]* @4, i64 0, i64 0), %end ]
  br i1 %0, label %end12, label %false11

false11:                                          ; preds = %end6
  %return13 = call i8* @"chs@SS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @7, i64 0, i64 0))
  br label %end12

end12:                                            ; preds = %end6, %false11
  %phi14 = phi i8* [ %return13, %false11 ], [ getelementptr inbounds ([4 x i8], [4 x i8]* @6, i64 0, i64 0), %end6 ]
  %return15 = call i8* @"chs@SS"(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @8, i64 0, i64 0))
  %return16 = call double @"chf@FS"(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @9, i64 0, i64 0))
  %return17 = call i64 @"neg@II"(i64 1)
  %return20 = call i64 @"eq@ISS"(i8* %phi8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @10, i64 0, i64 0))
  %1 = icmp ne i64 %return20, 0
  br i1 %1, label %true21, label %false22

true21:                                           ; preds = %end12
  %_bound_primnum24 = load i64, i64* %_bound_primnum
  br label %end23

false22:                                          ; preds = %end12
  %return27 = call i64 @"eq@ISS"(i8* %phi8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @4, i64 0, i64 0))
  %2 = icmp ne i64 %return27, 0
  br i1 %2, label %true28, label %false29

end23:                                            ; preds = %false29, %true35, %true28, %true21
  %vertex.0 = phi i64 [ %return17, %true21 ], [ %return17, %true28 ], [ %return39, %true35 ], [ %return17, %false29 ]
  %primorpt.0 = phi i64 [ %_bound_primnum24, %true21 ], [ %_bound_ptnum31, %true28 ], [ %_bound_primnum37, %true35 ], [ %return17, %false29 ]
  %iseed.0 = phi i64 [ %_bound_primnum24, %true21 ], [ %_bound_ptnum31, %true28 ], [ %_bound_vtxnum40, %true35 ], [ 0, %false29 ]
  %owner.0 = phi i8* [ getelementptr inbounds ([5 x i8], [5 x i8]* @11, i64 0, i64 0), %true21 ], [ %phi8, %true28 ], [ %phi8, %true35 ], [ %phi8, %false29 ]
  %return42 = call i64 @"ne@ISS"(i8* %return15, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @13, i64 0, i64 0))
  %3 = icmp ne i64 %return42, 0
  br i1 %3, label %true43, label %end44

true28:                                           ; preds = %false22
  %_bound_ptnum31 = load i64, i64* %_bound_ptnum
  br label %end23

false29:                                          ; preds = %false22
  %return34 = call i64 @"eq@ISS"(i8* %phi8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @12, i64 0, i64 0))
  %4 = icmp ne i64 %return34, 0
  br i1 %4, label %true35, label %end23

true35:                                           ; preds = %false29
  %_bound_primnum37 = load i64, i64* %_bound_primnum
  %_bound_vtxnum38 = load i64, i64* %_bound_vtxnum
  %return39 = call i64 @"vertexprimindex@III"(i64 0, i64 %_bound_vtxnum38)
  %_bound_vtxnum40 = load i64, i64* %_bound_vtxnum
  br label %end23

true43:                                           ; preds = %end23
  %return45 = call i64 @"chi@IS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @14, i64 0, i64 0))
  %return46 = call i64 @"clamp@IIII"(i64 %return45, i64 1, i64 4)
  %return49 = call i64 @"attribsize@IISS"(i64 0, i8* %owner.0, i8* %phi)
  %return52 = call i64 @"gt@III"(i64 %return46, i64 %return49)
  %5 = icmp ne i64 %return52, 0
  br i1 %5, label %true53, label %end44

end44:                                            ; preds = %true43, %end58, %end23
  %dimensions.0 = phi i64 [ %return49, %end58 ], [ %return46, %true43 ], [ 1, %end23 ]
  %return61 = call i64 @"eq@III"(i64 %dimensions.0, i64 1)
  %return63 = call i64 @"eq@ISS"(i8* %return15, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @15, i64 0, i64 0))
  %return64 = call i64 @"or@III"(i64 %return61, i64 %return63)
  %return66 = call i64 @"eq@ISS"(i8* %return15, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @16, i64 0, i64 0))
  %return67 = call i64 @"or@III"(i64 %return64, i64 %return66)
  %return69 = call i64 @"eq@ISS"(i8* %return15, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @17, i64 0, i64 0))
  %return70 = call i64 @"or@III"(i64 %return67, i64 %return69)
  %return71 = call i64 @"chi@IS"(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @18, i64 0, i64 0))
  %return72 = call i64 @"or@III"(i64 %return70, i64 %return71)
  %return74 = call i64 @"ne@ISS"(i8* %return15, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @15, i64 0, i64 0))
  %return76 = call i64 @"ne@ISS"(i8* %return15, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @16, i64 0, i64 0))
  %return77 = call i64 @"and@III"(i64 %return74, i64 %return76)
  %return79 = call i64 @"ne@ISS"(i8* %return15, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @19, i64 0, i64 0))
  %return80 = call i64 @"and@III"(i64 %return77, i64 %return79)
  %return82 = call i64 @"ne@ISS"(i8* %return15, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @17, i64 0, i64 0))
  %return83 = call i64 @"and@III"(i64 %return80, i64 %return82)
  %return88 = call i64 @"ne@ISS"(i8* %return15, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @20, i64 0, i64 0))
  %return91 = call i64 @"eq@ISS"(i8* %return15, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @21, i64 0, i64 0))
  %return93 = call i64 @"eq@ISS"(i8* %return15, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @22, i64 0, i64 0))
  %return94 = call i64 @"or@III"(i64 %return91, i64 %return93)
  %return96 = call i64 @"eq@ISS"(i8* %return15, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @23, i64 0, i64 0))
  %return97 = call i64 @"or@III"(i64 %return94, i64 %return96)
  %return99 = call i64 @"eq@ISS"(i8* %return15, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @24, i64 0, i64 0))
  %return100 = call i64 @"or@III"(i64 %return97, i64 %return99)
  %return109 = call <4 x double> @"set@PFFFF"(double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00)
  %6 = icmp ne i64 %return100, 0
  br i1 %6, label %true113, label %end114

true53:                                           ; preds = %true43
  %return56 = call i64 @"le@III"(i64 %return49, i64 0)
  %7 = icmp ne i64 %return56, 0
  br i1 %7, label %true57, label %end58

true57:                                           ; preds = %false470, %true483, %true469, %true455, %true441, %true53
  ret void

end58:                                            ; preds = %true53
  br label %end44

true113:                                          ; preds = %end44
  %return115 = call i8* @"chs@SS"(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @25, i64 0, i64 0))
  %return117 = call i64 @"ne@ISS"(i8* %return115, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @1, i64 0, i64 0))
  %8 = icmp ne i64 %return117, 0
  br i1 %8, label %true118, label %end114

end114:                                           ; preds = %true113, %true118, %end44
  %medianv.0 = phi <4 x double> [ %output, %true118 ], [ %return109, %true113 ], [ %return109, %end44 ]
  %9 = icmp ne i64 %return79, 0
  br i1 %9, label %true130, label %end131

true118:                                          ; preds = %true113
  %_bound_OpInput1120 = load i8*, i8** %_bound_OpInput1
  %return125 = call { i64, <4 x double> } @"getattribute@ISPSSII"(i8* %_bound_OpInput1120, i8* %owner.0, i8* %return115, i64 %primorpt.0, i64 %vertex.0)
  %output = extractvalue { i64, <4 x double> } %return125, 1
  br label %end114

true130:                                          ; preds = %end114
  %return132 = call i64 @"chi@IS"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @26, i64 0, i64 0))
  %10 = icmp ne i64 %return132, 0
  br i1 %10, label %true134, label %false135

end131:                                           ; preds = %cond, %end220, %end114
  %u.0 = phi <4 x double> [ %u.1, %cond ], [ %return275, %end220 ], [ zeroinitializer, %end114 ]
  %return276 = call double @"chf@FS"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @31, i64 0, i64 0))
  %return278 = call { double, <4 x double> } @"setcomp@FPFI"(<4 x double> zeroinitializer, double %return276, i64 0)
  %output280 = extractvalue { double, <4 x double> } %return278, 1
  %return281 = call double @"chf@FS"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @32, i64 0, i64 0))
  %return283 = call { double, <4 x double> } @"setcomp@FPFI"(<4 x double> zeroinitializer, double %return281, i64 0)
  %output285 = extractvalue { double, <4 x double> } %return283, 1
  %11 = icmp ne i64 %return72, 0
  br i1 %11, label %true287, label %false288

true134:                                          ; preds = %true130
  %return137 = call i8* @"chs@SS"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @27, i64 0, i64 0))
  %_bound_OpInput1138 = load i8*, i8** %_bound_OpInput1
  %return143 = call { i64, <4 x double> } @"getattribute@ISPSSII"(i8* %_bound_OpInput1138, i8* %owner.0, i8* %return137, i64 %primorpt.0, i64 %vertex.0)
  %output145 = extractvalue { i64, <4 x double> } %return143, 1
  br label %cond

false135:                                         ; preds = %true130
  %return154 = call double @"chf@FS"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @28, i64 0, i64 0))
  %return155 = call i64 @"chi@IS"(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @29, i64 0, i64 0))
  %return157 = call <4 x double> @"set@PFFFF"(double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double %return154)
  %12 = icmp ne i64 %return155, 0
  br i1 %12, label %true159, label %end160

cond:                                             ; preds = %body, %true134
  %u.1 = phi <4 x double> [ %output145, %true134 ], [ %return151, %body ]
  %i.0 = phi i64 [ 0, %true134 ], [ %output153, %body ]
  %return147 = call i64 @"lt@III"(i64 %i.0, i64 4)
  %13 = icmp ne i64 %return147, 0
  br i1 %13, label %body, label %end131

body:                                             ; preds = %cond
  %cast = call <4 x double> @"set@PI"(i64 0)
  %cast150 = call <4 x double> @"set@PI"(i64 1)
  %return151 = call <4 x double> @"clamp@PPPP"(<4 x double> %u.1, <4 x double> %cast, <4 x double> %cast150)
  %output153 = add i64 %i.0, 1
  br label %cond

true159:                                          ; preds = %false135
  %return161 = call i8* @"chs@SS"(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @30, i64 0, i64 0))
  %return164 = call i64 @"attribtype@IISS"(i64 0, i8* %owner.0, i8* %return161)
  %return166 = call i64 @"eq@III"(i64 %return164, i64 0)
  %14 = icmp ne i64 %return166, 0
  br i1 %14, label %true167, label %false168

end160:                                           ; preds = %false182, %true206, %true181, %true195, %true167, %false135
  %useiseed.0 = phi i64 [ 1, %true167 ], [ %return192, %true195 ], [ %return192, %true181 ], [ 1, %true206 ], [ 1, %false182 ], [ 1, %false135 ]
  %vseed.0 = phi <4 x double> [ %return157, %true167 ], [ %output203, %true195 ], [ %output191, %true181 ], [ %return157, %true206 ], [ %return157, %false182 ], [ %return157, %false135 ]
  %iseed.1 = phi i64 [ %output178, %true167 ], [ %iseed.0, %true195 ], [ %iseed.0, %true181 ], [ %return217, %true206 ], [ %iseed.0, %false182 ], [ %iseed.0, %false135 ]
  %15 = icmp ne i64 %useiseed.0, 0
  br i1 %15, label %true219, label %end220

true167:                                          ; preds = %true159
  %_bound_OpInput1171 = load i8*, i8** %_bound_OpInput1
  %return176 = call { i64, i64 } @"getattribute@ISISSII"(i8* %_bound_OpInput1171, i8* %owner.0, i8* %return161, i64 %primorpt.0, i64 %vertex.0)
  %output178 = extractvalue { i64, i64 } %return176, 1
  br label %end160

false168:                                         ; preds = %true159
  %return180 = call i64 @"eq@III"(i64 %return164, i64 1)
  %16 = icmp ne i64 %return180, 0
  br i1 %16, label %true181, label %false182

true181:                                          ; preds = %false168
  %_bound_OpInput1184 = load i8*, i8** %_bound_OpInput1
  %return189 = call { i64, <4 x double> } @"getattribute@ISPSSII"(i8* %_bound_OpInput1184, i8* %owner.0, i8* %return161, i64 %primorpt.0, i64 %vertex.0)
  %return190 = extractvalue { i64, <4 x double> } %return189, 0
  %output191 = extractvalue { i64, <4 x double> } %return189, 1
  %return192 = call i64 @"not@II"(i64 %return190)
  %return194 = call i64 @"not@II"(i64 %return192)
  %17 = icmp ne i64 %return194, 0
  br i1 %17, label %true195, label %end160

false182:                                         ; preds = %false168
  %return205 = call i64 @"eq@III"(i64 %return164, i64 2)
  %18 = icmp ne i64 %return205, 0
  br i1 %18, label %true206, label %end160

true195:                                          ; preds = %true181
  %return198 = call double @"getcomp@FPI"(<4 x double> %output191, i64 3)
  %output200 = fadd double %return198, %return154
  %return201 = call { double, <4 x double> } @"setcomp@FPFI"(<4 x double> %output191, double %output200, i64 3)
  %output203 = extractvalue { double, <4 x double> } %return201, 1
  br label %end160

true206:                                          ; preds = %false182
  %_bound_OpInput1208 = load i8*, i8** %_bound_OpInput1
  %return213 = call { i64, i8* } @"getattribute@ISSSSII"(i8* %_bound_OpInput1208, i8* %owner.0, i8* %return161, i64 %primorpt.0, i64 %vertex.0)
  %output215 = extractvalue { i64, i8* } %return213, 1
  %return217 = call i64 @"random_shash@IS"(i8* %output215)
  br label %end160

true219:                                          ; preds = %end160
  %return222 = call i64 @"mod@III"(i64 %iseed.1, i64 65536)
  %cast223 = sitofp i64 %return222 to double
  %output225 = call i64 @"div@II"(i64 %iseed.1, i64 65536)
  %cast226 = sitofp i64 %output225 to double
  %return228 = call <4 x double> @"set@PFFFF"(double %cast223, double %cast226, double 0.000000e+00, double %return154)
  br label %end220

end220:                                           ; preds = %true219, %end160
  %vseed.1 = phi <4 x double> [ %return228, %true219 ], [ %vseed.0, %end160 ]
  %return230 = call i64 @"random_fhash@IP"(<4 x double> %vseed.1)
  %return232 = call i64 @"mod@III"(i64 %return230, i64 65536)
  %cast233 = sitofp i64 %return232 to double
  %output235 = call i64 @"div@II"(i64 %return230, i64 65536)
  %cast236 = sitofp i64 %output235 to double
  %return237 = call <2 x double> @"set@UFF"(double %cast233, double %cast236)
  %return238 = call i64 @"random_fhash@IU"(<2 x double> %return237)
  %return240 = call i64 @"mod@III"(i64 %return238, i64 65536)
  %cast241 = sitofp i64 %return240 to double
  %output243 = call i64 @"div@II"(i64 %return238, i64 65536)
  %cast244 = sitofp i64 %output243 to double
  %return251 = call <4 x double> @"set@PFFFF"(double %cast241, double %cast244, double %cast233, double %cast236)
  %return252 = call i64 @"random_fhash@IP"(<4 x double> %return251)
  %return254 = call i64 @"mod@III"(i64 %return252, i64 65536)
  %cast255 = sitofp i64 %return254 to double
  %output257 = call i64 @"div@II"(i64 %return252, i64 65536)
  %cast258 = sitofp i64 %output257 to double
  %return265 = call <4 x double> @"set@PFFFF"(double %cast255, double %cast258, double %cast233, double %cast236)
  %return266 = call i64 @"random_fhash@IP"(<4 x double> %return265)
  %return268 = call double @"random@FI"(i64 %return230)
  %return270 = call double @"random@FI"(i64 %return238)
  %return272 = call double @"random@FI"(i64 %return252)
  %return274 = call double @"random@FI"(i64 %return266)
  %return275 = call <4 x double> @"set@PFFFF"(double %return268, double %return270, double %return272, double %return274)
  br label %end131

true287:                                          ; preds = %end131
  %return291 = call double @"getcomp@FPI"(<4 x double> %output280, i64 0)
  %return298 = call <4 x double> @"set@PFFFF"(double %return291, double %return291, double %return291, double %return291)
  %return300 = call double @"getcomp@FPI"(<4 x double> %output285, i64 0)
  %return307 = call <4 x double> @"set@PFFFF"(double %return300, double %return300, double %return300, double %return300)
  br label %end289

false288:                                         ; preds = %end131
  %return309 = call i64 @"ge@III"(i64 %dimensions.0, i64 2)
  %19 = icmp ne i64 %return309, 0
  br i1 %19, label %true310, label %end289

end289:                                           ; preds = %true324, %true338, %true310, %false288, %true287
  %minv.0 = phi <4 x double> [ %return298, %true287 ], [ %output344, %true338 ], [ %output330, %true324 ], [ %output316, %true310 ], [ %output280, %false288 ]
  %maxv.0 = phi <4 x double> [ %return307, %true287 ], [ %output349, %true338 ], [ %output335, %true324 ], [ %output321, %true310 ], [ %output285, %false288 ]
  %output354 = call <4 x double> @"sub@PP"(<4 x double> %maxv.0, <4 x double> %minv.0)
  %output355 = call <4 x double> @"mul@PP"(<4 x double> %u.0, <4 x double> %output354)
  %output356 = call <4 x double> @"add@PP"(<4 x double> %minv.0, <4 x double> %output355)
  %return364 = call i64 @"and@III"(i64 %return77, i64 %return88)
  %return367 = call i64 @"and@III"(i64 %return364, i64 %return42)
  %return368 = call i64 @"chi@IS"(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @39, i64 0, i64 0))
  %return369 = call i64 @"and@III"(i64 %return367, i64 %return368)
  %20 = icmp ne i64 %return369, 0
  br i1 %20, label %true371, label %end372

true310:                                          ; preds = %false288
  %return312 = call double @"chf@FS"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @33, i64 0, i64 0))
  %return314 = call { double, <4 x double> } @"setcomp@FPFI"(<4 x double> %output280, double %return312, i64 1)
  %output316 = extractvalue { double, <4 x double> } %return314, 1
  %return317 = call double @"chf@FS"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @34, i64 0, i64 0))
  %return319 = call { double, <4 x double> } @"setcomp@FPFI"(<4 x double> %output285, double %return317, i64 1)
  %output321 = extractvalue { double, <4 x double> } %return319, 1
  %return323 = call i64 @"ge@III"(i64 %dimensions.0, i64 3)
  %21 = icmp ne i64 %return323, 0
  br i1 %21, label %true324, label %end289

true324:                                          ; preds = %true310
  %return326 = call double @"chf@FS"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @35, i64 0, i64 0))
  %return328 = call { double, <4 x double> } @"setcomp@FPFI"(<4 x double> %output316, double %return326, i64 2)
  %output330 = extractvalue { double, <4 x double> } %return328, 1
  %return331 = call double @"chf@FS"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @36, i64 0, i64 0))
  %return333 = call { double, <4 x double> } @"setcomp@FPFI"(<4 x double> %output321, double %return331, i64 2)
  %output335 = extractvalue { double, <4 x double> } %return333, 1
  %return337 = call i64 @"ge@III"(i64 %dimensions.0, i64 4)
  %22 = icmp ne i64 %return337, 0
  br i1 %22, label %true338, label %end289

true338:                                          ; preds = %true324
  %return340 = call double @"chf@FS"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @37, i64 0, i64 0))
  %return342 = call { double, <4 x double> } @"setcomp@FPFI"(<4 x double> %output330, double %return340, i64 3)
  %output344 = extractvalue { double, <4 x double> } %return342, 1
  %return345 = call double @"chf@FS"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @38, i64 0, i64 0))
  %return347 = call { double, <4 x double> } @"setcomp@FPFI"(<4 x double> %output335, double %return345, i64 3)
  %output349 = extractvalue { double, <4 x double> } %return347, 1
  br label %end289

true371:                                          ; preds = %end289
  br label %cond374

end372:                                           ; preds = %end400, %end289
  %v.0 = phi <4 x double> [ %v.1, %end400 ], [ %output356, %end289 ]
  %scale.0 = phi double [ %output434, %end400 ], [ %return16, %end289 ]
  %cast437 = call <4 x double> @"set@PF"(double %scale.0)
  %output438 = call <4 x double> @"mul@PP"(<4 x double> %v.0, <4 x double> %cast437)
  %23 = icmp ne i64 %return61, 0
  br i1 %23, label %true441, label %false442

cond374:                                          ; preds = %body375, %true371
  %len.0 = phi double [ 0.000000e+00, %true371 ], [ %output389, %body375 ]
  %i373.0 = phi i64 [ 0, %true371 ], [ %output391, %body375 ]
  %return378 = call i64 @"lt@III"(i64 %i373.0, i64 %dimensions.0)
  %24 = icmp ne i64 %return378, 0
  br i1 %24, label %body375, label %end379

body375:                                          ; preds = %cond374
  %return384 = call double @"getcomp@FPI"(<4 x double> %output356, i64 %i373.0)
  %output388 = fmul double %return384, %return384
  %output389 = fadd double %len.0, %output388
  %output391 = add i64 %i373.0, 1
  br label %cond374

end379:                                           ; preds = %cond374
  %return393 = fcmp oeq double %len.0, 0.000000e+00
  %return394 = zext i1 %return393 to i64
  %return396 = fcmp ogt double %len.0, 1.000000e+38
  %return397 = zext i1 %return396 to i64
  %return398 = call i64 @"or@III"(i64 %return394, i64 %return397)
  %25 = icmp ne i64 %return398, 0
  br i1 %25, label %true399, label %end400

true399:                                          ; preds = %end379
  br label %cond403

end400:                                           ; preds = %end408, %true428, %end379
  %v.1 = phi <4 x double> [ %return430, %true428 ], [ %medianv.0, %end408 ], [ %output356, %end379 ]
  %len.1 = phi double [ 1.000000e+00, %true428 ], [ %len.2, %end408 ], [ %len.0, %end379 ]
  %return433 = call double @"sqrt@FF"(double %len.1)
  %output434 = call double @"div@FF"(double %return16, double %return433)
  br label %end372

cond403:                                          ; preds = %body404, %true399
  %len.2 = phi double [ %len.0, %true399 ], [ %output418, %body404 ]
  %i402.0 = phi i64 [ 0, %true399 ], [ %output420, %body404 ]
  %return407 = call i64 @"lt@III"(i64 %i402.0, i64 %dimensions.0)
  %26 = icmp ne i64 %return407, 0
  br i1 %26, label %body404, label %end408

body404:                                          ; preds = %cond403
  %return413 = call double @"getcomp@FPI"(<4 x double> %medianv.0, i64 %i402.0)
  %output417 = fmul double %return413, %return413
  %output418 = fadd double %len.2, %output417
  %output420 = add i64 %i402.0, 1
  br label %cond403

end408:                                           ; preds = %cond403
  %return422 = fcmp oeq double %len.2, 0.000000e+00
  %return423 = zext i1 %return422 to i64
  %return425 = fcmp ogt double %len.2, 1.000000e+38
  %return426 = zext i1 %return425 to i64
  %return427 = call i64 @"or@III"(i64 %return423, i64 %return426)
  %27 = icmp ne i64 %return427, 0
  br i1 %27, label %true428, label %end400

true428:                                          ; preds = %end408
  %return430 = call <4 x double> @"set@PFFFF"(double 1.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00)
  br label %end400

true441:                                          ; preds = %end372
  %return444 = call i64 @"geoself@I"()
  %return450 = call double @"getcomp@FPI"(<4 x double> %output438, i64 0)
  %return452 = call i64 @"setattrib@IISSIIFS"(i64 %return444, i8* %owner.0, i8* %phi, i64 %primorpt.0, i64 %vertex.0, double %return450, i8* %phi14)
  br label %true57

false442:                                         ; preds = %end372
  %return454 = call i64 @"eq@III"(i64 %dimensions.0, i64 2)
  %28 = icmp ne i64 %return454, 0
  br i1 %28, label %true455, label %false456

true455:                                          ; preds = %false442
  %return458 = call i64 @"geoself@I"()
  %cast464 = call <2 x double> @"set@UP"(<4 x double> %output438)
  %return466 = call i64 @"setattrib@IISSIIUS"(i64 %return458, i8* %owner.0, i8* %phi, i64 %primorpt.0, i64 %vertex.0, <2 x double> %cast464, i8* %phi14)
  br label %true57

false456:                                         ; preds = %false442
  %return468 = call i64 @"eq@III"(i64 %dimensions.0, i64 3)
  %29 = icmp ne i64 %return468, 0
  br i1 %29, label %true469, label %false470

true469:                                          ; preds = %false456
  %return472 = call i64 @"geoself@I"()
  %cast478 = call <3 x double> @"set@VP"(<4 x double> %output438)
  %return480 = call i64 @"setattrib@IISSIIVS"(i64 %return472, i8* %owner.0, i8* %phi, i64 %primorpt.0, i64 %vertex.0, <3 x double> %cast478, i8* %phi14)
  br label %true57

false470:                                         ; preds = %false456
  %return482 = call i64 @"ge@III"(i64 %dimensions.0, i64 4)
  %30 = icmp ne i64 %return482, 0
  br i1 %30, label %true483, label %true57

true483:                                          ; preds = %false470
  %return485 = call i64 @"geoself@I"()
  %return492 = call i64 @"setattrib@IISSIIPS"(i64 %return485, i8* %owner.0, i8* %phi, i64 %primorpt.0, i64 %vertex.0, <4 x double> %output438, i8* %phi14)
  br label %true57
}

; Function Attrs: nounwind readnone
declare i64 @"neg@II"(i64) #1

; Function Attrs: nounwind readnone
declare double @"div@FF"(double, double) #1

; Function Attrs: nounwind readnone
declare double @"pow@FFF"(double, double) #1

; Function Attrs: nounwind readnone
declare i64 @"chi@IS"(i8*) #1

; Function Attrs: nounwind readnone
declare i8* @"chs@SS"(i8*) #1

; Function Attrs: nounwind readnone
declare double @"chf@FS"(i8*) #1

; Function Attrs: nounwind readnone
declare i64 @"eq@ISS"(i8*, i8*) #1

; Function Attrs: nounwind
declare i64 @"vertexprimindex@III"(i64, i64) #2

; Function Attrs: nounwind readnone
declare i64 @"ne@ISS"(i8*, i8*) #1

; Function Attrs: nounwind
declare i64 @"clamp@IIII"(i64, i64, i64) #2

; Function Attrs: nounwind
declare i64 @"attribsize@IISS"(i64, i8*, i8*) #2

; Function Attrs: nounwind readnone
declare i64 @"gt@III"(i64, i64) #1

; Function Attrs: nounwind readnone
declare i64 @"le@III"(i64, i64) #1

; Function Attrs: nounwind readnone
declare i64 @"eq@III"(i64, i64) #1

; Function Attrs: nounwind readnone
declare i64 @"or@III"(i64, i64) #1

; Function Attrs: nounwind readnone
declare i64 @"and@III"(i64, i64) #1

; Function Attrs: nounwind readnone
declare <4 x double> @"set@PFFFF"(double, double, double, double) #1

; Function Attrs: nounwind readnone
declare { i64, <4 x double> } @"getattribute@ISPSSII"(i8*, i8*, i8*, i64, i64) #1

; Function Attrs: nounwind readnone
declare i64 @"lt@III"(i64, i64) #1

; Function Attrs: nounwind readnone
declare <4 x double> @"set@PI"(i64) #1

; Function Attrs: nounwind
declare <4 x double> @"clamp@PPPP"(<4 x double>, <4 x double>, <4 x double>) #2

; Function Attrs: nounwind
declare i64 @"attribtype@IISS"(i64, i8*, i8*) #2

; Function Attrs: nounwind readnone
declare { i64, i64 } @"getattribute@ISISSII"(i8*, i8*, i8*, i64, i64) #1

; Function Attrs: nounwind readnone
declare i64 @"not@II"(i64) #1

; Function Attrs: nounwind readnone
declare double @"getcomp@FPI"(<4 x double>, i64) #1

; Function Attrs: alwaysinline
define private { double, <4 x double> } @"setcomp@FPFI"(<4 x double> %rw11, double %rw22, i64 %rw33) #3 {
__llvm_entry:
  %rw16 = call <4 x double> @"setcomp@PFI"(<4 x double> %rw11, double %rw22, i64 %rw33)
  %mrv = insertvalue { double, <4 x double> } undef, double %rw22, 0
  %mrv9 = insertvalue { double, <4 x double> } %mrv, <4 x double> %rw16, 1
  ret { double, <4 x double> } %mrv9
}

; Function Attrs: nounwind readnone
declare <4 x double> @"setcomp@PFI"(<4 x double>, double, i64) #1

; Function Attrs: nounwind readnone
declare { i64, i8* } @"getattribute@ISSSSII"(i8*, i8*, i8*, i64, i64) #1

; Function Attrs: nounwind readnone
declare i64 @"random_shash@IS"(i8*) #1

; Function Attrs: nounwind readnone
declare i64 @"mod@III"(i64, i64) #1

; Function Attrs: nounwind readnone
declare i64 @"div@II"(i64, i64) #1

; Function Attrs: nounwind readnone
declare i64 @"random_fhash@IP"(<4 x double>) #1

; Function Attrs: nounwind readnone
declare <2 x double> @"set@UFF"(double, double) #1

; Function Attrs: nounwind readnone
declare i64 @"random_fhash@IU"(<2 x double>) #1

; Function Attrs: nounwind readnone
declare double @"random@FI"(i64) #1

; Function Attrs: nounwind readnone
declare i64 @"ge@III"(i64, i64) #1

; Function Attrs: nounwind readnone
declare <4 x double> @"sub@PP"(<4 x double>, <4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @"mul@PP"(<4 x double>, <4 x double>) #1

; Function Attrs: nounwind readnone
declare <4 x double> @"add@PP"(<4 x double>, <4 x double>) #1

; Function Attrs: nounwind readnone
declare double @"sqrt@FF"(double) #1

; Function Attrs: nounwind readnone
declare <4 x double> @"set@PF"(double) #1

; Function Attrs: nounwind
declare i64 @"geoself@I"() #2

; Function Attrs: nounwind
declare i64 @"setattrib@IISSIIFS"(i64, i8*, i8*, i64, i64, double, i8*) #2

; Function Attrs: nounwind readnone
declare <2 x double> @"set@UP"(<4 x double>) #1

; Function Attrs: nounwind
declare i64 @"setattrib@IISSIIUS"(i64, i8*, i8*, i64, i64, <2 x double>, i8*) #2

; Function Attrs: nounwind
declare <3 x double> @"set@VP"(<4 x double>) #2

; Function Attrs: nounwind
declare i64 @"setattrib@IISSIIVS"(i64, i8*, i8*, i64, i64, <3 x double>, i8*) #2

; Function Attrs: nounwind
declare i64 @"setattrib@IISSIIPS"(i64, i8*, i8*, i64, i64, <4 x double>, i8*) #2

; Function Attrs: nounwind
define void @__vex_snippet(i64 %primnum, i64 %ptnum, i64 %vtxnum, i8* %OpInput1) #2 {
__llvm_entry:
  %0 = alloca i64
  %1 = alloca i64
  %2 = alloca i64
  %3 = alloca i8*
  store i64 %primnum, i64* %0
  store i64 %ptnum, i64* %1
  store i64 %vtxnum, i64* %2
  store i8* %OpInput1, i8** %3
  call void @"__vex_snippet_snippet@IIIS"(i64* %0, i64* %1, i64* %2, i8** %3)
  %gvalue = call i64 @"_export@ISI"(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @40, i64 0, i64 0), i64 %primnum) #4
  %gvalue6 = call i64 @"_export@ISI"(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @41, i64 0, i64 0), i64 %ptnum) #4
  %gvalue8 = call i64 @"_export@ISI"(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @42, i64 0, i64 0), i64 %vtxnum) #4
  %gvalue10 = call i8* @"_export@SSS"(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @43, i64 0, i64 0), i8* %OpInput1) #4
  store i64 %gvalue, i64* @primnum
  store i64 %gvalue6, i64* @ptnum
  store i64 %gvalue8, i64* @vtxnum
  store i8* %gvalue10, i8** @OpInput1
  ret void
}

declare i64 @"_export@ISI"(i8*, i64)

declare i8* @"_export@SSS"(i8*, i8*)

define void @__shader_default_arguments() {
__llvm_entry:
  call void @__vex_snippet(i64 0, i64 0, i64 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @1, i64 0, i64 0))
  ret void
}

attributes #0 = { alwaysinline nounwind }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind }
attributes #3 = { alwaysinline }
attributes #4 = { nounwind readonly }

!context = !{!0}
!version = !{!1}
!precision = !{!2}

!0 = !{!"cvex"}
!1 = !{!"19.0.531"}
!2 = !{!"64"}

;_code_end
